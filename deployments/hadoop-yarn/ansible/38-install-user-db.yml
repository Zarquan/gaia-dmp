#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

- name: "Get Zeppelin IP Address"
  hosts: localhost
  vars_files:
    - config/ansible.yml
    - /tmp/ansible-vars.yml
    - config/openstack.yml

  tasks:

    - name: "Discover our Zeppelin node and store IP address in temp file"
      os_server_info:
        cloud:  "{{ cloudname }}"
        server: "{{ deployname }}-zeppelin"
      register:
        zeppelinnode

    - local_action: copy content={{ zeppelinnode.openstack_servers[0].accessIPv4 }} dest=/tmp/zeppelin_ip.txt


- name: "Install MySQL Database for Zeppelin/Shiro"
  hosts: zeppelin
  become: true
  gather_facts: true
  vars_files:
    - config/ansible.yml
    - config/hadoop.yml
    - config/spark.yml
    - /tmp/ansible-vars.yml
    - config/zeppelin.yml
    - /tmp/ansible-vars.yml
  vars:
    zepipaddress: "{{ lookup('file', '/tmp/zeppelin_ip.txt') | trim }}"
    zeppelinshiro: |
            [main]
            ds = com.mysql.cj.jdbc.MysqlDataSource
            ds.serverName = localhost
            ds.databaseName = zeppelin
            ds.user = zeppelin
            ds.password = {{ mysql_zeppelin_password }}

            jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
            ps = org.apache.shiro.authc.credential.DefaultPasswordService
            pm = org.apache.shiro.authc.credential.PasswordMatcher
            pm.passwordService = $ps

            jdbcRealm.dataSource = $ds
            jdbcRealm.credentialsMatcher = $pm
            shiro.loginUrl = /api/login

            sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
            cookie = org.apache.shiro.web.servlet.SimpleCookie
            cookie.name = JSESSIONID
            cookie.httpOnly = true
            sessionManager.sessionIdCookie = $cookie
            securityManager.sessionManager = $sessionManager
            securityManager.sessionManager.globalSessionTimeout = 86400000


            [urls]
            /** = authc
            /api/version = anon
            /api/interpreter/setting/restart/** = authc
            /api/interpreter/** = authc, roles[admin]
            /api/configurations/** = authc, roles[admin]
            /api/credential/** = authc, roles[admin]

            [roles]
            user = *
            admin = *

    export_users: |
            #!/bin/bash
            printf "Exporting users to file: auth.sql"
            printf "\n"
            DB_USER='zeppelin'
            DB_PASSWD='{{ mysql_zeppelin_password }}'
            DB_NAME='zeppelin'

            mysqldump $DB_NAME -u root -p$DB_PASSWD --no-create-info  > {{zephome}}/auth.sql

    add_user: |
            #!/bin/bash
            printf "Create a new Zeppelin user"
            printf "\n"
            printf "Username: "
            read NEW_USERNAME
            
            stty -echo
            printf "Password: "
            read NEW_PASSWORD
            stty echo
                        
            printf "\n"
            printf "User role: "
            read NEW_USER_ROLE
            
            
            DB_USER='zeppelin'
            DB_PASSWD='{{ mysql_zeppelin_password }}'
            DB_NAME='zeppelin'
            USER_TABLE='users';
            USER_ROLES_TABLE='user_roles'
            
            NEW_PASSWORD_ENCRYPTED="$(java -jar {{zephome}}/lib/shiro-tools-hasher-1.9.0-cli.jar -i 500000 -f shiro1 -a SHA-256 -gss 128 $NEW_PASSWORD)"
            zeppelinurl="http://{{ zepipaddress }}:8080"
            
            mysql --user=$DB_USER --password=$DB_PASSWD $DB_NAME << EOF
            INSERT INTO $USER_TABLE (username, password) VALUES ("$NEW_USERNAME", "$NEW_PASSWORD_ENCRYPTED");
            INSERT INTO $USER_ROLES_TABLE (username, role_name) VALUES ("$NEW_USERNAME", "$NEW_USER_ROLE");
            EOF
            
            NEW_UNIX_DIR="/user/$NEW_USERNAME"
            mkdir -p $NEW_UNIX_DIR
            chmod 777 $NEW_UNIX_DIR
            
            NEW_ZEPPELIN_DIR="{{zephome}}/notebook/Users/$NEW_USERNAME"
            NEW_ZEPPELIN_EXAMPLES_DIR="Users/$NEW_USERNAME/examples"
            mkdir -p $NEW_ZEPPELIN_DIR
            mkdir -p $NEW_ZEPPELIN_DIR/examples
            chown -R fedora:fedora $NEW_ZEPPELIN_DIR
            
            zepcookies=/tmp/${NEW_USERNAME}.cookies
            
            curl \
            --silent \
            --request 'POST' \
            --cookie-jar "${zepcookies:?}" \
            --data "userName=${NEW_USERNAME:?}" \
            --data "password=${NEW_PASSWORD:?}" \
            ${zeppelinurl:?}/api/login 
            
            curl -L         -H 'Content-Type: application/json'         -d "{'name': '${NEW_ZEPPELIN_EXAMPLES_DIR:?}/Start_Here'}"         --request POST         --cookie "${zepcookies:?}"         ${zeppelinurl:?}/api/notebook/2GRTQZFUM 
            curl -L         -H 'Content-Type: application/json'         -d "{'name': '${NEW_ZEPPELIN_EXAMPLES_DIR:?}/Data_Holdings'}"         --request POST         --cookie "${zepcookies:?}"         ${zeppelinurl:?}/api/notebook/2GRA39HCN 
            curl -L         -H 'Content-Type: application/json'         -d "{'name': '${NEW_ZEPPELIN_EXAMPLES_DIR:?}/Source_counts_over_the_sky'}"         --request POST         --cookie "${zepcookies:?}"         ${zeppelinurl:?}/api/notebook/2GQ6WMH9W 
            curl -L         -H 'Content-Type: application/json'         -d "{'name': '${NEW_ZEPPELIN_EXAMPLES_DIR:?}/Mean_proper_motions_over_the_sky'}"         --request POST         --cookie "${zepcookies:?}"         ${zeppelinurl:?}/api/notebook/2GSNYBDWB 
            curl -L         -H 'Content-Type: application/json'         -d "{'name': '${NEW_ZEPPELIN_EXAMPLES_DIR:?}/Working_with_cross-matched_surveys'}"         --request POST         --cookie "${zepcookies:?}"         ${zeppelinurl:?}/api/notebook/2GZME59KY 
            curl -L         -H 'Content-Type: application/json'         -d "{'name': '${NEW_ZEPPELIN_EXAMPLES_DIR:?}/Good_astrometric_solutions_via_ML_Random_Forrest_classifier'}"         --request POST         --cookie "${zepcookies:?}"         ${zeppelinurl:?}/api/notebook/2GQDKZ59J 
            curl -L         -H 'Content-Type: application/json'         -d "{'name': '${NEW_ZEPPELIN_EXAMPLES_DIR:?}/Tips_and_tricks'}"         --request POST         --cookie "${zepcookies:?}"         ${zeppelinurl:?}/api/notebook/2GVXKC266 
            

  tasks:

   - set_fact:
       mysql_root_password: "{{ lookup('password','/dev/null chars=ascii_letters,digits,hexdigits length=20') }}!"
       mysql_zeppelin_password: "{{ lookup('password','/dev/null chars=ascii_letters,digits,hexdigits length=20') }}!"

   - name: "Enable MySQL Community release repo"
     yum:
       disable_gpg_check: True
       name: https://repo.mysql.com//mysql80-community-release-fc31-1.noarch.rpm
       state: present

   - name: "Get MySQL Connector jar"
     get_url:
       url: https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar
       dest: "{{zephome}}/lib/mysql-connector-java-8.0.28.jar"

   - name: "Install MySQL Server"
     yum: name=mysql-server state=installed

   - name: "Install MySQL-devel"
     yum: name=mysql-devel state=installed

   - name: "Make sure pymysql is present"
     pip:
       name: pymysql
       state: present

   - name: "reload systemd"
     command: systemctl daemon-reload

   - name: "Start the MySQL service"
     service: 
       name: mysqld
       state: started
       enabled: yes
       daemon_reload: yes

   - name: "Find temporary password"
     shell: "echo `grep 'temporary.*root@localhost' /var/log/mysqld.log | sed
's/.*root@localhost: //'`"
     register: mysql_root_password_temp
     tags: register

   - name: "Update expired root user password"
     shell: 'mysql -e "ALTER USER ''root''@''localhost'' IDENTIFIED WITH mysql_native_password BY ''{{ mysql_root_password }}''" --connect-expired-password -uroot -p"{{ mysql_root_password_temp.stdout }}"'

   - name: "Create MySQL config"
     become: true
     blockinfile:
       dest:  '/root/.my.cnf'
       state: present
       owner: 'root'
       group: 'root'
       mode:  'u=rw,g=r,o=r'
       create: true
       insertafter: 'EOF'
       block: |
         [client]
         user=root
         password={{ mysql_root_password }}
         [client2]
         user=root
         password={{ mysql_zeppelin_password }}
         [mysqld]
         bind-address            = 0.0.0.0

   - name: "Create Zeppelin database"
     mysql_db: name=zeppelin state=present login_user=root login_password={{ mysql_root_password }}

   - name: "Create MySQL Zeppelin user with appropriate privileges"
     mysql_user:	
       name: zeppelin
       password: '{{ mysql_zeppelin_password }}'
       priv: "zeppelin.*:ALL"
       state: present

   - name: "Create a Zeppelin Shiro Configuration"
     copy:
       owner: "{{zepuser}}"
       group: "{{zepuser}}"
       mode:  'u=rw,g=r,o=r'
       dest:  "{{zephome}}/conf/shiro.ini"
       content: "{{ zeppelinshiro }}"
     tags:
       - always

   - name: "Copy Create SQL file to Zeppelin"
     copy: src="{{ playbook_dir | dirname | dirname }}/common/zeppelin/sql/create.sql" dest=/tmp

   - name: "Create User SQL database"
     mysql_db: name=zeppelin state=import target=/tmp/create.sql

   - name: "Download shiro hasher jar"
     get_url:
       url: https://repo1.maven.org/maven2/org/apache/shiro/tools/shiro-tools-hasher/1.9.0/shiro-tools-hasher-1.9.0-cli.jar
       dest: "{{zephome}}/lib/shiro-tools-hasher-1.9.0-cli.jar"

   - name: "Create add_users.sh script"
     copy:
       owner: "{{zepuser}}"
       group: "{{zepuser}}"
       mode:  'u=rwx,g=rwx,o=rwx'
       dest:  "{{zephome}}/scripts/export_users.sh"
       content: "{{ export_users }}"
     tags:
       - always

   - name: "Create add_users.sh script"
     copy:
       owner: "{{zepuser}}"
       group: "{{zepuser}}"
       mode:  'u=rwx,g=rwx,o=rwx'
       dest:  "{{zephome}}/scripts/add_user.sh"
       content: "{{ add_user }}"
     tags:
       - always


