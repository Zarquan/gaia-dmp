#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#

    Target:

        Deployment to test the latest changes.
        Test delays of notebooks, and new results output (Error logging and json output)
   
    Result:

        Success.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        -d \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase='arcus'
    cloudname='iris-gaia-red'
    configname=zeppelin-26.43-spark-6.26.43


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   Done
    
# -----------------------------------------------------
# Create everything.
# (*) apart from the user database.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            "${configname:?}" \
        | tee /tmp/create-all.log

    >   Done


# -----------------------------------------------------
# Create our shiro-auth database.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-auth-database.sh \
            "${cloudname:?}" \
            "${configname:?}" \
        | tee /tmp/create-auth-database.log



# -----------------------------------------------------
# Copy notebooks from the live server.
#[root@ansibler]

    ssh zeppelin \
        '
        sshuser=fedora
        sshhost=zeppelin.aglais.uk

        sudo mkdir -p '/var/local/backups'
        sudo mv "/home/fedora/zeppelin/notebook" \
           "/var/local/backups/notebook-$(date '+%Y%m%d%H%M%S')"

        ssh-keyscan "${sshhost:?}" >> "${HOME}/.ssh/known_hosts"

        rsync \
            --perms \
            --times \
            --group \
            --owner \
            --stats \
            --progress \
            --human-readable \
            --checksum \
            --recursive \
            "${sshuser:?}@${sshhost:?}:zeppelin/notebook/" \
            "/home/fedora/zeppelin/notebook"
        '


# -----------------------------------------------------
# re-start Zeppelin.
#[root@ansibler]

    ssh zeppelin \
        '
        zeppelin-daemon.sh restart
        '


# -----------------------------------------------------
# Add the ssh key for our data node.
# This is used by the getpasshash function in the client container.
#[root@ansibler]

    ssh-keyscan 'data.aglais.uk' >> "${HOME}/.ssh/known_hosts"

    


# -----------------------------------------------------
# Create 8 test users
#[root@ansibler]

    count=8

    testernames=()

    for i in $(seq $((count+1)))
    do
        testernames+=($(pwgen 12 1))
    done

    createarrayusers \
        ${testernames[@]} \
    | tee /tmp/testusers.json \
    | jq '[ .users[].shirouser.name ]'


	 > [
	 >  "rai7ai1ooXoo",
	 >  "zieth4Thaeph",
	 >  "yohGhaeWe4gi",
	 >  "asoo5AeH8yi6",
	 >  "kieGheiy8uw8",
	 >  "eiNgap7eel8m",
	 >  "nahPhoge4OoB",
	 >  "ooshae9uQu1m",
	 >  "Phioji8Eir0a"
	 > ]


    


# -----------------------------------------------------
# Run single user test
# Users: 1
# Delay_start: 0
# Delay_notebook: 0
# Delete Notebooks: True


cat > /tmp/testprog.py << EOF
import sys
from aglais_benchmark import AglaisBenchmarker
AglaisBenchmarker(
    "/deployments/zeppelin/test/config/quick.json",
    "/tmp/testusers.json",
    "/tmp/",
    "http://128.232.227.238:8080",
    False
    ).run(
        concurrent=True,
        users=1,
        delay_start=0,
        delay_notebook=0,
        delete=True
        )
EOF

python3 /tmp/testprog.py | tee /tmp/test-results.txt

# Results

[{
	"name": "GaiaDMPSetup",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "35.74",
		"expected": "45.00",
		"percent": "-20.58",
		"start": "2022-06-18T13:39:06.694484",
		"finish": "2022-06-18T13:39:42.433163"
	},
	"logs": ""
}, {
	"name": "Mean_proper_motions_over_the_sky",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "53.00",
		"expected": "55.00",
		"percent": "-3.63",
		"start": "2022-06-18T13:39:42.433252",
		"finish": "2022-06-18T13:40:35.437017"
	},
	"logs": ""
}, {
	"name": "Source_counts_over_the_sky.json",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "20.42",
		"expected": "22.00",
		"percent": "-7.20",
		"start": "2022-06-18T13:40:35.437196",
		"finish": "2022-06-18T13:40:55.853818"
	},
	"logs": ""
}, {
	"name": "Library_Validation.json",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "10.28",
		"expected": "60.00",
		"percent": "-82.86",
		"start": "2022-06-18T13:40:55.854142",
		"finish": "2022-06-18T13:41:06.136107"
	},
	"logs": ""
}]


# -----------------------------------------------------
# Run concurrent test
# Users: 3
# Delay_start: 0
# Delay_notebook: 0
# Delete Notebooks: True


cat > /tmp/testprog.py << EOF
import sys
from aglais_benchmark import AglaisBenchmarker
AglaisBenchmarker(
    "/deployments/zeppelin/test/config/quick.json",
    "/tmp/testusers.json",
    "/tmp/",
    "http://128.232.227.238:8080",
    False
    ).run(
        concurrent=True,
        users=3,
        delay_start=0,
        delay_notebook=0,
        delete=True
        )
EOF

python3 /tmp/testprog.py | tee /tmp/test-results.txt

# Results

[
	[{
		"name": "GaiaDMPSetup",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "79.26",
			"expected": "45.00",
			"percent": "76.13",
			"start": "2022-06-18T13:39:55.359739",
			"finish": "2022-06-18T13:41:14.619930"
		},
		"logs": ""
	}, {
		"name": "Mean_proper_motions_over_the_sky",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "76.62",
			"expected": "55.00",
			"percent": "39.30",
			"start": "2022-06-18T13:41:14.620022",
			"finish": "2022-06-18T13:42:31.237347"
		},
		"logs": ""
	}, {
		"name": "Source_counts_over_the_sky.json",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "26.08",
			"expected": "22.00",
			"percent": "18.52",
			"start": "2022-06-18T13:42:31.237863",
			"finish": "2022-06-18T13:42:57.312961"
		},
		"logs": ""
	}, {
		"name": "Library_Validation.json",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "FAST",
			"elapsed": "9.40",
			"expected": "60.00",
			"percent": "-84.33",
			"start": "2022-06-18T13:42:57.313249",
			"finish": "2022-06-18T13:43:06.714300"
		},
		"logs": ""
	}],
	[{
		"name": "GaiaDMPSetup",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "87.88",
			"expected": "45.00",
			"percent": "95.28",
			"start": "2022-06-18T13:39:55.359785",
			"finish": "2022-06-18T13:41:23.236883"
		},
		"logs": ""
	}, {
		"name": "Mean_proper_motions_over_the_sky",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "60.60",
			"expected": "55.00",
			"percent": "10.18",
			"start": "2022-06-18T13:41:23.236969",
			"finish": "2022-06-18T13:42:23.837399"
		},
		"logs": ""
	}, {
		"name": "Source_counts_over_the_sky.json",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "23.67",
			"expected": "22.00",
			"percent": "7.57",
			"start": "2022-06-18T13:42:23.838147",
			"finish": "2022-06-18T13:42:47.503882"
		},
		"logs": ""
	}, {
		"name": "Library_Validation.json",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "FAST",
			"elapsed": "9.89",
			"expected": "60.00",
			"percent": "-83.52",
			"start": "2022-06-18T13:42:47.504140",
			"finish": "2022-06-18T13:42:57.389149"
		},
		"logs": ""
	}],
	[{
		"name": "GaiaDMPSetup",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "81.51",
			"expected": "45.00",
			"percent": "81.14",
			"start": "2022-06-18T13:39:55.359829",
			"finish": "2022-06-18T13:41:16.874774"
		},
		"logs": ""
	}, {
		"name": "Mean_proper_motions_over_the_sky",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "97.37",
			"expected": "55.00",
			"percent": "77.05",
			"start": "2022-06-18T13:41:16.874863",
			"finish": "2022-06-18T13:42:54.249804"
		},
		"logs": ""
	}, {
		"name": "Source_counts_over_the_sky.json",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "SLOW",
			"elapsed": "33.05",
			"expected": "22.00",
			"percent": "50.22",
			"start": "2022-06-18T13:42:54.250329",
			"finish": "2022-06-18T13:43:27.299084"
		},
		"logs": ""
	}, {
		"name": "Library_Validation.json",
		"result": "PASS",
		"outputs": {
			"valid": true
		},
		"messages": [],
		"time": {
			"result": "FAST",
			"elapsed": "8.46",
			"expected": "60.00",
			"percent": "-85.90",
			"start": "2022-06-18T13:43:27.299342",
			"finish": "2022-06-18T13:43:35.759044"
		},
		"logs": ""
	}]
]



# -----------------------------------------------------
# Run single user test with 3 minute delay
# Users: 1
# Delay_start: 0
# Delay_notebook: 180
# Delete Notebooks: True


cat > /tmp/testprog.py << EOF
import sys
from aglais_benchmark import AglaisBenchmarker
AglaisBenchmarker(
    "/deployments/zeppelin/test/config/quick.json",
    "/tmp/testusers.json",
    "/tmp/",
    "http://128.232.227.238:8080",
    False
    ).run(
        concurrent=True,
        users=1,
        delay_start=0,
        delay_notebook=180,
        delete=True
        )
EOF

python3 /tmp/testprog.py | tee /tmp/test-results.txt

# Results


[{
	"name": "GaiaDMPSetup",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "39.05",
		"expected": "45.00",
		"percent": "-13.21",
		"start": "2022-06-18T14:10:21.321800",
		"finish": "2022-06-18T14:11:00.375529"
	},
	"logs": ""
}, {
	"name": "Mean_proper_motions_over_the_sky",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "52.80",
		"expected": "55.00",
		"percent": "-4.01",
		"start": "2022-06-18T14:14:00.475833",
		"finish": "2022-06-18T14:14:53.272253"
	},
	"logs": ""
}, {
	"name": "Source_counts_over_the_sky.json",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "SLOW",
		"elapsed": "37.61",
		"expected": "22.00",
		"percent": "70.95",
		"start": "2022-06-18T14:17:53.373015",
		"finish": "2022-06-18T14:18:30.980921"
	},
	"logs": ""
}, {
	"name": "Library_Validation.json",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "8.90",
		"expected": "60.00",
		"percent": "-85.17",
		"start": "2022-06-18T14:21:31.081642",
		"finish": "2022-06-18T14:21:39.979133"
	},
	"logs": ""
}]

# Check start times of notebooks

jq '.[].time.start' /tmp/test-result.json 
"2022-06-18T14:10:21.321800"
"2022-06-18T14:14:00.475833"
"2022-06-18T14:17:53.373015"
"2022-06-18T14:21:31.081642"

# 3-4 minute delays between each notebook


# ----------------------------------------------------------------------------
# Run single user test, paused Zeppelin while the test is running, see if we log errors correctly
# Users: 1
# Delay_start: 0
# Delay_notebook: 0
# Delete Notebooks: True

# fedora@zeppelin: zeppelin-daemon stop

cat > /tmp/testprog.py << EOF
import sys
from aglais_benchmark import AglaisBenchmarker
AglaisBenchmarker(
    "/deployments/zeppelin/test/config/quick.json",
    "/tmp/testusers.json",
    "/tmp/",
    "http://128.232.227.238:8080",
    False
    ).run(
        concurrent=True,
        users=1,
        delay_start=0,
        delay_notebook=0,
        delete=True
        )
EOF

python3 /tmp/testprog.py | tee /tmp/test-results.txt

# Results

[{
	"name": "GaiaDMPSetup",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "3.74",
		"expected": "45.00",
		"percent": "-91.69",
		"start": "2022-06-18T13:50:56.812140",
		"finish": "2022-06-18T13:51:00.549414"
	},
	"logs": ""
}, {
	"name": "Mean_proper_motions_over_the_sky",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "FAST",
		"elapsed": "28.07",
		"expected": "55.00",
		"percent": "-48.96",
		"start": "2022-06-18T13:54:00.649744",
		"finish": "2022-06-18T13:54:28.722484"
	},
	"logs": ""
}, {
	"name": "Source_counts_over_the_sky.json",
	"result": "PASS",
	"outputs": {
		"valid": true
	},
	"messages": [],
	"time": {
		"result": "SLOW",
		"elapsed": "33.07",
		"expected": "22.00",
		"percent": "50.31",
		"start": "2022-06-18T13:57:28.782492",
		"finish": "2022-06-18T13:58:01.851586"
	},
	"logs": ""
}, {
	"name": "Library_Validation.json",
	"result": "FAIL",
	"outputs": {
		"valid": true
	},
	"messages": ["Exception encountered while trying to create a notebook: /tmp/G70J5CVP02.json for user in config: /tmp/user.yml", "HTTPConnectionPool(host='128.232.227.236', port=8080): Max retries exceeded with url: /api/login (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f23a47388b0>: Failed to establish a new connection: [Errno 111] Connection refused'))\n"],
	"time": {
		"result": "SLOW",
		"elapsed": "232.85",
		"expected": "60.00",
		"percent": "288.09",
		"start": "2022-06-18T14:01:01.949667",
		"finish": "2022-06-18T14:04:54.802847"
	},
	"logs": ""
}]

