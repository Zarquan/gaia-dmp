#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#


    Target:

        Test latest version

    Result:

        Success.
       




# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]


    source "${HOME:?}/aglais.env"

    agcolour=red
    configname=zeppelin-26.43-spark-3.26.43

    agproxymap=3000:3000
    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "${agproxymap:?}" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    
    Run some system status tests
/deployments/hadoop-yarn/ansible /

PLAY [Run extended system tests and report results] *******************************************************************************************************************************************************

TASK [Clone test repository] ******************************************************************************************************************************************************************************
changed: [localhost]

TASK [Install test dependencies] **************************************************************************************************************************************************************************
ok: [localhost]

TASK [Create the settings.yml file] ***********************************************************************************************************************************************************************
changed: [localhost]

TASK [Run unittests to check connectivity] ****************************************************************************************************************************************************************
changed: [localhost]

TASK [Display Python test results] ************************************************************************************************************************************************************************
ok: [localhost] => {
    "msg": [
        "test_empty_string_edge_case (tests.test_decorators.TestDecorator) ... ok",
        "test_http_happy_path (tests.test_decorators.TestDecorator) ... ok",
        "test_https_happy_path (tests.test_decorators.TestDecorator) ... ok",
        "test_special_characters_edge_case (tests.test_decorators.TestDecorator) ... ok",
        "test_whitespace_string_edge_case (tests.test_decorators.TestDecorator) ... ok",
        "test_wss_happy_path (tests.test_decorators.TestDecorator) ... ok",
        "test_port_443_open (tests.test_port.TestPort)",
        "Test that port 443 is open ... ok",
        "test_port_80_open (tests.test_port.TestPort)",
        "Test that port 80 is open ... ok",
        "test_redirect_to_https (tests.test_port.TestPort)",
        "Test that the service redirects correctly ... ok",
        "test_redirect_to_https_with_path (tests.test_port.TestPort)",
        "Test that the service redirects correctly with path ... ok",
        "test_websocket_connection (tests.test_websockets.WebSocketTest)",
        "Test a WSS connection to the domain ... ok",
        "",
        "----------------------------------------------------------------------",
        "Ran 11 tests in 1.760s",
        "",
        "OK"
    ]
}

TASK [Run script to verify open ports] ********************************************************************************************************************************************************************
ok: [localhost]

TASK [Check script output] ********************************************************************************************************************************************************************************
ok: [localhost] => {
    "msg": "Security group for server iris-gaia-red-20230731-zeppelin is correctly configured"
}

PLAY RECAP ************************************************************************************************************************************************************************************************
localhost                  : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

/


aglais:
  status:
    deployment:
      type: hadoop-yarn
      conf: zeppelin-26.43-spark-3.26.43
      name: iris-gaia-red-20230731
      date: 20230731T143509
      hostname: zeppelin.gaia-dmp.uk
  spec:
    openstack:
      cloud:
        base: arcus
        name: iris-gaia-red

real	44m41.141s
user	7m29.346s
sys	1m24.584s



# No errors
# Tests all pass




# -----------------------------------------------------
# Create users    
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    import-test-users
    
    > Done        
        
        
# -----------------------------------------------------
# Run Tests
#[root@ansibler]

git clone https://github.com/stvoutsin/aglais-testing
pushd aglais-testing/gdmp_benchmark

   python3 gdmp_benchmark.py --zeppelin_url https://iris-gaia-red.gaia-dmp.uk --usercount 1 --notebook_config /deployments/zeppelin/test/config/quick.json --user_config /tmp/test-users.json --delay_start 0 --delay_notebook 0


popd


---start---
c[{
    "name": "GaiaDMPSetup",
    "result": "SUCCESS",
    "outputs": {
        "valid": true
    },
    "messages": [],
    "time": {
        "result": "FAST",
        "elapsed": "50.00",
        "percent": "0.00",
        "start": "2023-07-31T15:25:40.974777",
        "finish": "2023-07-31T15:26:31.228362"
    },
    "logs": ""
},
 {
    "name": "Mean_proper_motions_over_the_sky",
    "result": "SUCCESS",
    "outputs": {
        "valid": true
    },
    "messages": [],
    "time": {
        "result": "SLOW",
        "elapsed": "140.00",
        "percent": "12.00",
        "start": "2023-07-31T15:26:31.228517",
        "finish": "2023-07-31T15:28:51.559553"
    },
    "logs": ""
},
 {
    "name": "Source_counts_over_the_sky.json",
    "result": "SUCCESS",
    "outputs": {
        "valid": true
    },
    "messages": [],
    "time": {
        "result": "FAST",
        "elapsed": "55.00",
        "percent": "0.00",
        "start": "2023-07-31T15:28:51.560250",
        "finish": "2023-07-31T15:29:46.865969"
    },
    "logs": ""
},
 {
    "name": "Library_Validation.json",
    "result": "SUCCESS",
    "outputs": {
        "valid": true
    },
    "messages": [],
    "time": {
        "result": "SLOW",
        "elapsed": "11.00",
        "percent": "10.00",
        "start": "2023-07-31T15:29:46.866065",
        "finish": "2023-07-31T15:29:58.057665"
    },
    "logs": ""
}]
---end---

