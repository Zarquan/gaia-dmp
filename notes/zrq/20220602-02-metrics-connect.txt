#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Connect to the Spark and Grafana user interfaces via a ssh proxy in the client container.

    Result:

        Work in progress ...

# -----------------------------------------------------
# Setup a SSH tunnel SOCKS proxy.
# https://www.digitalocean.com/community/tutorials/how-to-route-web-traffic-securely-without-a-vpn-using-a-socks-tunnel
# Running 'htop' on the Zeppelin node to keep the connection alive.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        ansibler \
            bash -c \
            '
            ssh \
                -t \
                -D "3000"  \
                zeppelin \
                    "
                    htop
                    "
            '

# -----------------------------------------------------
# Login to the Spark UI using Firefox.
# (*) using FoxyProxy Firefox plugin to select the SOCKS proxy for internal hostnames.
#[user@desktop]

    firefox --new-window 'http://master01:8088/cluster' &


# -----------------------------------------------------
# Login to Grafana using Firefox.
# (*) using FoxyProxy Firefox plugin to select the SOCKS proxy for internal hostnames.
#[user@desktop]

    firefox --new-window 'http://monitor:3000/login' &


# -----------------------------------------------------
# -----------------------------------------------------

    #
    # Firefox is unable to access the proxied URLs.
    # Keep getting 'Connection reset' errors.
    #

    #
    # Try using curl.
    # https://stackoverflow.com/a/9445516

    curl \
        --head \
        --verbose \
        --proxy 'http://localhost:3000' \
        'http://zeppelin:8080/'

    >   *   Trying 127.0.0.1:3000...
    >   * Connected to localhost (127.0.0.1) port 3000 (#0)
    >   > HEAD http://zeppelin:8080/ HTTP/1.1
    >   > Host: zeppelin:8080
    >   > User-Agent: curl/7.79.1
    >   > Accept: */*
    >   > Proxy-Connection: Keep-Alive
    >   >
    >   * Recv failure: Connection reset by peer
    >   * Closing connection 0




    #
    # Socks proxy via podman isn't working.
    #

# -----------------------------------------------------
#
#[root@ansibler]

    #
    # curl via socks inside the container works
    #


    curl \
        --head \
        --verbose \
        --socks5 'localhost:3000' \
        'http://zeppelin:8080/'

    >   *   Trying 127.0.0.1:3000...
    >   * SOCKS5 connect to IPv4 128.232.222.138:8080 (locally resolved)
    >   * SOCKS5 request granted.
    >   * Connected to localhost (127.0.0.1) port 3000 (#0)
    >   > HEAD / HTTP/1.1
    >   > Host: zeppelin:8080
    >   > User-Agent: curl/7.81.0
    >   > Accept: */*
    >   >
    >   * Mark bundle as not supporting multiuse
    >   < HTTP/1.1 200 OK
    >   HTTP/1.1 200 OK
    >   < Date: Thu, 02 Jun 2022 15:34:20 GMT
    >   Date: Thu, 02 Jun 2022 15:34:20 GMT
    >   < Access-Control-Allow-Credentials: true
    >   Access-Control-Allow-Credentials: true
    >   < Access-Control-Allow-Headers: authorization,Content-Type
    >   Access-Control-Allow-Headers: authorization,Content-Type
    >   < Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, HEAD, DELETE
    >   Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, HEAD, DELETE
    >   < X-FRAME-OPTIONS: SAMEORIGIN
    >   X-FRAME-OPTIONS: SAMEORIGIN
    >   < X-XSS-Protection: 1; mode=block
    >   X-XSS-Protection: 1; mode=block
    >   < X-Content-Type-Options: nosniff
    >   X-Content-Type-Options: nosniff
    >   < Last-Modified: Tue, 17 Aug 2021 13:58:44 GMT
    >   Last-Modified: Tue, 17 Aug 2021 13:58:44 GMT
    >   < Content-Type: text/html
    >   Content-Type: text/html
    >   < Accept-Ranges: bytes
    >   Accept-Ranges: bytes
    >   < Content-Length: 4660
    >   Content-Length: 4660
    >   < Server:
    >   Server:
    >   
    >   <
    >   * Connection #0 to host localhost left intact


    #
    # curl via socks outside the container fails
    #

    curl \
        --head \
        --verbose \
        --socks5 'localhost:3000' \
        'http://zeppelin:8080/'

    >   *   Trying 127.0.0.1:3000...
    >   * Unable to receive initial SOCKS5 response.
    >   * Closing connection 0
    >   curl: (97) Unable to receive initial SOCKS5 response.



# -----------------------------------------------------
# -----------------------------------------------------
# Setup a SSH tunnel SOCKS proxy.
# https://www.digitalocean.com/community/tutorials/how-to-route-web-traffic-securely-without-a-vpn-using-a-socks-tunnel
# Running 'htop' on the Zeppelin node to keep the connection alive.
#[user@desktop]

    sshhost=128.232.222.138
    sshuser=fedora

    ssh "${sshuser:?}@${sshhost:?}" \
        -t \
        -D "3001"  \
            '
            htop
            '

# -----------------------------------------------------
# Login to the Spark UI using Firefox.
# (*) using FoxyProxy Firefox plugin to select the SOCKS proxy for internal hostnames.
#[user@desktop]

    firefox --new-window 'http://master01:8088/cluster' &


# -----------------------------------------------------
# Login to Grafana using Firefox.
# (*) using FoxyProxy Firefox plugin to select the SOCKS proxy for internal hostnames.
#[user@desktop]

    firefox --new-window 'http://monitor:3000/login' &





