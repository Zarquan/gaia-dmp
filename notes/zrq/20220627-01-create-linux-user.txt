#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Make create-linux-user idempotent.
        Based on the deployment from 20220625-01-red-deploy.txt

    Result:

        Success - create-linux-user is idempotent.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase='arcus'
    cloudname='iris-gaia-red'
    configname=zeppelin-26.43-spark-3.26.43


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   real    27m10.360s
    >   user    9m23.383s
    >   sys     1m36.620s


# -----------------------------------------------------
# Create some test users.
# TODO Move the create-user-tools to ansible/client/bin.
# TODO Add ansible/client/bin to the client PATH.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    createlinuxuser 'Hamar' 'test' | jq '.'

    >   /opt/aglais/bin/json-tools.sh: line 95: return: result: numeric argument required
    >   /opt/aglais/bin/json-tools.sh: line 90: return: jsonarray: numeric argument required
    >   parse error: Unmatched '}' at line 10, column 5


# -----------------------------------------------------
# Fix bugs ....
#[root@ansibler]

    ssh -t zeppelin \
        '
        sudo vi /opt/aglais/bin/json-tools.sh
        '

    ssh -t zeppelin \
        '
        sudo vi /opt/aglais/bin/create-linux-user.sh
        '

    #
    # Actually, ended up doing a full re-deploy.
    #

# -----------------------------------------------------
# -----------------------------------------------------
# Create a Linux user.
# TODO Move the create-user-tools to ansible/client/bin.
# TODO Add ansible/client/bin to the client PATH.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    createlinuxuser 'Hamar' 'test' | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 20001,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "PASS: adduser [Hamar] done",
    >         "PASS: mkdir [/home/Hamar/.ssh] done",
    >         "PASS: adding public key for [zepelin] done",
    >         "SKIP: adding public key for [Hamar] skipped (no key)"
    >       ]
    >     }
    >   }


    createlinuxuser 'Hamar' 'test' | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 20002,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "SKIP: adduser [Hamar] skipped (done)",
    >         "SKIP: mkdir [/home/Hamar/.ssh] skipped (done)",
    >         "SKIP: adding public key for [zeppelin] skipped (done)",
    >         "SKIP: adding public key for [Hamar] skipped (no key)"
    >       ]
    >     }
    >   }


    createlinuxuser 'Hamar' 'test' 'test-key' | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 20002,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "SKIP: adduser [Hamar] skipped (done)",
    >         "SKIP: mkdir [/home/Hamar/.ssh] skipped (done)",
    >         "SKIP: adding public key for [zeppelin] skipped (done)",
    >         "PASS: adding public key for [Hamar] done"
    >       ]
    >     }
    >   }


    createlinuxuser 'Hamar' 'test' 'test-key' | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 20002,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "SKIP: adduser [Hamar] skipped (done)",
    >         "SKIP: mkdir [/home/Hamar/.ssh] skipped (done)",
    >         "SKIP: adding public key for [zeppelin] skipped (done)",
    >         "SKIP: adding public key for [Hamar] skipped (done)"
    >       ]
    >     }
    >   }


    createlinuxuser 'Hamar' 'test' 'different-key' | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 20002,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "SKIP: adduser [Hamar] skipped (done)",
    >         "SKIP: mkdir [/home/Hamar/.ssh] skipped (done)",
    >         "SKIP: adding public key for [zeppelin] skipped (done)",
    >         "PASS: adding public key for [Hamar] done"
    >       ]
    >     }
    >   }


# -----------------------------------------------------
# Check the user's public keys
#[root@ansibler]

    ssh zeppelin \
        '
        date
        hostname
        echo
        sudo cat /home/Hamar/.ssh/authorized_keys
        '

    >   Wed Jun 29 01:47:06 UTC 2022
    >   iris-gaia-red-20220629-zeppelin
    >
    >   # zeppelin's public key"
    >   ssh-rsa AAAA........
    >   # Hamar's public key"
    >   test-key
    >   # Hamar's public key"
    >   different-key


# -----------------------------------------------------
# Remove the user's authorized keys and create them again.
#[root@ansibler]

    ssh zeppelin \
        '
        date
        hostname
        echo
        sudo rm /home/Hamar/.ssh/authorized_keys
        '

    createlinuxuser 'Hamar' 'test' 'test-key' | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 20002,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "SKIP: adduser [Hamar] skipped (done)",
    >         "SKIP: mkdir [/home/Hamar/.ssh] skipped (done)",
    >         "PASS: adding public key for [zepelin] done",
    >         "PASS: adding public key for [Hamar] done"
    >       ]
    >     }
    >   }


    ssh zeppelin \
        '
        date
        hostname
        echo
        sudo cat /home/Hamar/.ssh/authorized_keys
        '

    >   Wed Jun 29 01:49:20 UTC 2022
    >   iris-gaia-red-20220629-zeppelin
    >
    >   # zeppelin's public key"
    >   ssh-rsa AAAA........
    >   # Hamar's public key"
    >   test-key


# -----------------------------------------------------
# Remove the user's Linux account and create it again.
#[root@ansibler]

    ssh zeppelin \
        '
        date
        hostname
        echo
        sudo userdel Hamar
        '

    createlinuxuser 'Hamar' 'test' 'test-key' 1002 | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "",
    >     "uid": 1002,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "FAIL: adduser [Hamar] failed",
    >         "adduser: UID 1002 is not unique",
    >         "PASS: mkdir [/.ssh] done",
    >         "PASS: adding public key for [zepelin] done",
    >         "PASS: adding public key for [Hamar] done",
    >         "FAIL: chown [/.ssh] failed",
    >         "chown: invalid user: ‘Hamar:Hamar’"
    >       ]
    >     }
    >   }

    #
    # FAIL - adds .ssh directory to '/'.
    #

    createlinuxuser 'Hamar' 'test' 'test-key' 1020 | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 1020,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "PASS: adduser [Hamar] done",
    >         "SKIP: mkdir [/home/Hamar/.ssh] skipped (done)",
    >         "SKIP: adding public key for [zeppelin] skipped (done)",
    >         "SKIP: adding public key for [Hamar] skipped (done)"
    >       ]
    >     }
    >   }

    #
    # PASS - adds the account and finds the existing keys.
    #

    createlinuxuser 'Hamar' 'test' 'test-key' 1021 | jq '.'

    >   {
    >     "name": "Hamar",
    >     "type": "test",
    >     "home": "/home/Hamar",
    >     "uid": 1021,
    >     "debug": {
    >       "script": "create-linux-user.sh",
    >       "result": "PASS",
    >       "messages": [
    >         "SKIP: adduser [Hamar] skipped (done)",
    >         "SKIP: mkdir [/home/Hamar/.ssh] skipped (done)",
    >         "SKIP: adding public key for [zeppelin] skipped (done)",
    >         "SKIP: adding public key for [Hamar] skipped (done)"
    >       ]
    >     }
    >   }

    #
    # FAIL - doesn't produce a warning if the uid is different.
    #


# -----------------------------------------------------
# Check the parameter validation.
#[root@ansibler]

    createlinuxuser

    >   bash: 1: username required


    createlinuxuser ''

    >   bash: 1: username required


    createlinuxuser 'Hamar'

    >   bash: 2: usertype required


    createlinuxuser 'Hamar' ''

    >   bash: 2: usertype required


    #
    # FAIL - error messages are not valid JSON.
    #



