#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: []
#

    Target:

        Try installing the official Docker image.
        https://zeppelin.apache.org/download.html#using-the-official-docker-image

    Result:

        Work in progress ...

# -----------------------------------------------------
# Delete and deploy everything.
#[root@ansibler]

    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Edit our Helm chart to add a Pod for Zeppelin.
#[user@desktop]

    source "${HOME}/aglais.env"

    pushd "${AGLAIS_CODE:?}"
        pushd deployments/cluster-api/bootstrap
            pushd helm/gaia-dmp

                mkdir charts/zeppelin
                pushd charts/zeppelin

                    gedit Chart.yaml &

                        ....
                        ....

                    mkdir templates
                    pushd templates

                        #
                        # Grab a copy from the Apache Zeppelin repo.
                        wget 'https://raw.githubusercontent.com/apache/zeppelin/master/k8s/zeppelin-server.yaml'

                        #
                        # Edit to ad dour tweaks.
                        gedit zeppelin-server.yaml &

                            ....
                            ....

                popd
            popd
        popd
    popd


# -----------------------------------------------------
# -----------------------------------------------------
# Deploy our modified Helm chart.
#[root@ansibler]

    helm upgrade \
        --wait \
        --debug \
        --kubeconfig "${workclusterconf:?}" \
        'gaia-dmp' \
        '/deployments/cluster-api/bootstrap/helm/gaia-dmp' \
        --install

    >   history.go:56: [debug] getting history for release gaia-dmp
    >   upgrade.go:144: [debug] preparing upgrade for gaia-dmp
    >   upgrade.go:152: [debug] performing update for gaia-dmp
    >   upgrade.go:324: [debug] creating upgraded release for gaia-dmp
    >   client.go:338: [debug] checking 10 resources for changes
    >   client.go:617: [debug] Looks like there are no changes for Namespace "gaia-dmp"
    >   client.go:617: [debug] Looks like there are no changes for ServiceAccount "dashboard-admin-account"
    >   client.go:359: [debug] Created a new ServiceAccount called "zeppelin-server" in default
    >   client.go:359: [debug] Created a new ConfigMap called "zeppelin-server-conf-map" in default
    >   client.go:359: [debug] Created a new ConfigMap called "zeppelin-server-conf" in default
    >   client.go:359: [debug] Created a new ClusterRole called "zeppelin-server-role" in
    >   client.go:617: [debug] Looks like there are no changes for ClusterRoleBinding "dashboard-admin-binding"
    >   client.go:359: [debug] Created a new RoleBinding called "zeppelin-server-role-binding" in default
    >   client.go:359: [debug] Created a new Service called "zeppelin-server" in default
    >   client.go:359: [debug] Created a new Deployment called "zeppelin-server" in default
    >   upgrade.go:396: [debug] waiting for release gaia-dmp resources (created: 7 updated: 3  deleted: 0)
    >   wait.go:48: [debug] beginning wait for 10 resources with timeout of 5m0s
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ....
    >   ....
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   upgrade.go:436: [debug] warning: Upgrade "gaia-dmp" failed: timed out waiting for the condition
    >   Error: UPGRADE FAILED: timed out waiting for the condition
    >   helm.go:84: [debug] timed out waiting for the condition
    >   UPGRADE FAILED
    >   main.newUpgradeCmd.func2
    >   	/builddir/build/BUILD/helm-3.11.1/_build/src/helm.sh/helm/v3/cmd/helm/upgrade.go:203
    >   github.com/spf13/cobra.(*Command).execute
    >   	/usr/share/gocode/src/github.com/spf13/cobra/command.go:916
    >   github.com/spf13/cobra.(*Command).ExecuteC
    >   	/usr/share/gocode/src/github.com/spf13/cobra/command.go:1044
    >   github.com/spf13/cobra.(*Command).Execute
    >   	/usr/share/gocode/src/github.com/spf13/cobra/command.go:968
    >   main.main
    >   	/builddir/build/BUILD/helm-3.11.1/_build/src/helm.sh/helm/v3/cmd/helm/helm.go:83
    >   runtime.main
    >   	/usr/lib/golang/src/runtime/proc.go:250
    >   runtime.goexit
    >   	/usr/lib/golang/src/runtime/asm_amd64.s:1594


    #
    # Try again ... because it might have cached the images ?
    #

    >   history.go:56: [debug] getting history for release gaia-dmp
    >   upgrade.go:144: [debug] preparing upgrade for gaia-dmp
    >   upgrade.go:152: [debug] performing update for gaia-dmp
    >   upgrade.go:324: [debug] creating upgraded release for gaia-dmp
    >   client.go:338: [debug] checking 10 resources for changes
    >   client.go:617: [debug] Looks like there are no changes for Namespace "gaia-dmp"
    >   client.go:617: [debug] Looks like there are no changes for ServiceAccount "dashboard-admin-account"
    >   client.go:617: [debug] Looks like there are no changes for ServiceAccount "zeppelin-server"
    >   client.go:617: [debug] Looks like there are no changes for ConfigMap "zeppelin-server-conf-map"
    >   client.go:617: [debug] Looks like there are no changes for ConfigMap "zeppelin-server-conf"
    >   client.go:617: [debug] Looks like there are no changes for ClusterRole "zeppelin-server-role"
    >   client.go:617: [debug] Looks like there are no changes for ClusterRoleBinding "dashboard-admin-binding"
    >   client.go:617: [debug] Looks like there are no changes for RoleBinding "zeppelin-server-role-binding"
    >   client.go:617: [debug] Looks like there are no changes for Service "zeppelin-server"
    >   client.go:626: [debug] Patch Deployment "zeppelin-server" in namespace default
    >   upgrade.go:396: [debug] waiting for release gaia-dmp resources (created: 0 updated: 10  deleted: 0)
    >   wait.go:48: [debug] beginning wait for 10 resources with timeout of 5m0s
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ....
    >   ....
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   upgrade.go:436: [debug] warning: Upgrade "gaia-dmp" failed: timed out waiting for the condition
    >   Error: UPGRADE FAILED: timed out waiting for the condition
    >   helm.go:84: [debug] timed out waiting for the condition
    >   UPGRADE FAILED
    >   main.newUpgradeCmd.func2
    >   	/builddir/build/BUILD/helm-3.11.1/_build/src/helm.sh/helm/v3/cmd/helm/upgrade.go:203
    >   github.com/spf13/cobra.(*Command).execute
    >   	/usr/share/gocode/src/github.com/spf13/cobra/command.go:916
    >   github.com/spf13/cobra.(*Command).ExecuteC
    >   	/usr/share/gocode/src/github.com/spf13/cobra/command.go:1044
    >   github.com/spf13/cobra.(*Command).Execute
    >   	/usr/share/gocode/src/github.com/spf13/cobra/command.go:968
    >   main.main
    >   	/builddir/build/BUILD/helm-3.11.1/_build/src/helm.sh/helm/v3/cmd/helm/helm.go:83
    >   runtime.main
    >   	/usr/lib/golang/src/runtime/proc.go:250
    >   runtime.goexit
    >   	/usr/lib/golang/src/runtime/asm_amd64.s:1594

    #
    # Nope, still failing at the point where it loads the Zeppelin image.
    #
    # Watching Events for zeppelin-server-c77867949-lv6gr Pod.
    #

    >   ....
    >   Failed to pull image "zeppelin-server:0.11.0-SNAPSHOT":
    >       rpc error:
    >           code = Unknown
    >           desc = failed to pull and unpack image "docker.io/library/zeppelin-server:0.11.0-SNAPSHOT":
    >               failed to resolve reference "docker.io/library/zeppelin-server:0.11.0-SNAPSHOT":
    >               pull access denied, repository does not exist or may require authorization:
    >               server message:
    >                   insufficient_scope:
    >                       authorization failed....
    >   ....

    #
    # Because 'zeppelin-server:0.11.0-SNAPSHOT' isn't in the Docker registry.
    # Understandable, we are taking 'zeppelin-server.yaml' from the HEAD in GitHub, so it is likely to be one step ahead.
    #
    # Checked the public registry and  'zeppelin:0.10.1' is the latest.
    # https://hub.docker.com/r/apache/zeppelin/tags
    #
    # Checked the code and the interpreter image is configutable,
    # but the main Zeppelin image is hard coded.
    #
    # There is/was an issue, but it the commit doesn't fix the problem it just moves it on a bit.
    # https://issues.apache.org/jira/browse/ZEPPELIN-5191
    #

    source "${HOME}/aglais.env"

    pushd "${AGLAIS_CODE:?}"
        pushd deployments/cluster-api/bootstrap
            pushd helm/gaia-dmp
                pushd charts/zeppelin
                    pushd templates

                        less 'zeppelin-server.yaml'

    >     ....
    >     ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: spark:2.4.5
    >     ZEPPELIN_K8S_CONTAINER_IMAGE: zeppelin-interpreter:0.11.0-SNAPSHOT
    >     ....

    >         ....
    >         containers:
    >         - name: zeppelin-server
    >           image: zeppelin-server:0.11.0-SNAPSHOT
    >         ....

# -----------------------------------------------------
# Edit the template to use a .
#[user@desktop]

    source "${HOME}/aglais.env"

    pushd "${AGLAIS_CODE:?}"
        pushd deployments/cluster-api/bootstrap
            pushd helm/gaia-dmp
                pushd charts/zeppelin
                    pushd templates

                        gedit 'zeppelin-server.yaml' &

    >     ....
    >     ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: "{{ .Values.zeppelin.spark.image.name }}"
    >     ZEPPELIN_K8S_CONTAINER_IMAGE: "{{ .Values.zeppelin.interpreter.image.name }}"
    >     ....

    >         ....
    >         containers:
    >         - name: zeppelin-server
    >           image: "{{ .Values.zeppelin.server.image.name }}"
    >         ....


# -----------------------------------------------------
# Deploy our modified Helm chart.
#[root@ansibler]

    helm upgrade \
        --wait \
        --debug \
        --kubeconfig "${workclusterconf:?}" \
        'gaia-dmp' \
        '/deployments/cluster-api/bootstrap/helm/gaia-dmp' \
        --install

    >   history.go:56: [debug] getting history for release gaia-dmp
    >   upgrade.go:144: [debug] preparing upgrade for gaia-dmp
    >   upgrade.go:152: [debug] performing update for gaia-dmp
    >   upgrade.go:324: [debug] creating upgraded release for gaia-dmp
    >   client.go:338: [debug] checking 10 resources for changes
    >   client.go:617: [debug] Looks like there are no changes for Namespace "gaia-dmp"
    >   client.go:617: [debug] Looks like there are no changes for ServiceAccount "dashboard-admin-account"
    >   client.go:617: [debug] Looks like there are no changes for ServiceAccount "zeppelin-server"
    >   client.go:626: [debug] Patch ConfigMap "zeppelin-server-conf-map" in namespace default
    >   client.go:617: [debug] Looks like there are no changes for ConfigMap "zeppelin-server-conf"
    >   client.go:617: [debug] Looks like there are no changes for ClusterRole "zeppelin-server-role"
    >   client.go:617: [debug] Looks like there are no changes for ClusterRoleBinding "dashboard-admin-binding"
    >   client.go:617: [debug] Looks like there are no changes for RoleBinding "zeppelin-server-role-binding"
    >   client.go:617: [debug] Looks like there are no changes for Service "zeppelin-server"
    >   client.go:626: [debug] Patch Deployment "zeppelin-server" in namespace default
    >   upgrade.go:396: [debug] waiting for release gaia-dmp resources (created: 0 updated: 10  deleted: 0)
    >   wait.go:48: [debug] beginning wait for 10 resources with timeout of 5m0s
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ready.go:277: [debug] Deployment is not ready: default/zeppelin-server. 0 out of 1 expected pods are ready
    >   ....
    >   ....
    >   upgrade.go:159: [debug] updating status for upgraded release for gaia-dmp
    >   Release "gaia-dmp" has been upgraded. Happy Helming!
    >   NAME: gaia-dmp
    >   LAST DEPLOYED: Tue Aug 22 11:57:50 2023
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 5
    >   TEST SUITE: None
    >   USER-SUPPLIED VALUES:
    >   {}
    >   
    >   COMPUTED VALUES:
    >   dashboard-admin:
    >     global: {}
    >   gaia-dmp:
    >     global: {}
    >     zeppelin:
    >       interpreter:
    >         image:
    >           name: apache/zeppelin:0.10.1
    >       server:
    >         image:
    >           name: apache/zeppelin:0.10.1
    >       spark:
    >         image:
    >           name: spark:2.4.5
    >   
    >   HOOKS:
    >   MANIFEST:
    >   ---
    >   # Source: gaia-dmp/templates/namespace.yaml
    >   apiVersion: v1
    >   kind: Namespace
    >   metadata:
    >     name: gaia-dmp
    >   ---
    >   # Source: gaia-dmp/charts/dashboard-admin/templates/dashboard-admin.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: dashboard-admin-account
    >     namespace: gaia-dmp
    >   ---
    >   # Source: gaia-dmp/charts/gaia-dmp/templates/zeppelin-server.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: zeppelin-server
    >   ---
    >   # Source: gaia-dmp/charts/gaia-dmp/templates/zeppelin-server.yaml
    >   #
    >   # Based on an original from the Apache Zeppelin project.
    >   # https://github.com/apache/zeppelin/blob/ed958b538d67539cc8bc232668cce1163f51c468/k8s/zeppelin-server.yaml
    >   #
    >   # Licensed to the Apache Software Foundation (ASF) under one or more
    >   # contributor license agreements.  See the NOTICE file distributed with
    >   # this work for additional information regarding copyright ownership.
    >   # The ASF licenses this file to You under the Apache License, Version 2.0
    >   # (the "License"); you may not use this file except in compliance with
    >   # the License.  You may obtain a copy of the License at
    >   #
    >   #    http://www.apache.org/licenses/LICENSE-2.0
    >   #
    >   # Unless required by applicable law or agreed to in writing, software
    >   # distributed under the License is distributed on an "AS IS" BASIS,
    >   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    >   # See the License for the specific language governing permissions and
    >   # limitations under the License.
    >   #
    >   apiVersion: v1
    >   kind: ConfigMap
    >   metadata:
    >     name: zeppelin-server-conf-map
    >   data:
    >     # 'serviceDomain' is a Domain name to use for accessing Zeppelin UI.
    >     # Should point IP address of 'zeppelin-server' service.
    >     #
    >     # Wildcard subdomain need to be point the same IP address to access service inside of Pod (such as SparkUI).
    >     # i.e. if service domain is 'local.zeppelin-project.org', DNS configuration should make 'local.zeppelin-project.org' and '*.local.zeppelin-project.org' point the same address.
    >     #
    >     # Default value is 'local.zeppelin-project.org' while it points 127.0.0.1 and `kubectl port-forward zeppelin-server` will give localhost to connects.
    >     # If you have your ingress controller configured to connect to `zeppelin-server` service and have a domain name for it (with wildcard subdomain point the same address), you can replace serviceDomain field with your own domain.
    >     SERVICE_DOMAIN: local.zeppelin-project.org:8080
    >     ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: "spark:2.4.5"
    >     ZEPPELIN_K8S_CONTAINER_IMAGE: "apache/zeppelin:0.10.1"
    >     ZEPPELIN_HOME: /opt/zeppelin
    >     ZEPPELIN_SERVER_RPC_PORTRANGE: 12320:12320
    >     # default value of 'master' property for spark interpreter.
    >     SPARK_MASTER: k8s://https://kubernetes.default.svc
    >     # default value of 'SPARK_HOME' property for spark interpreter.
    >     SPARK_HOME: /spark
    >   ---
    >   # Source: gaia-dmp/charts/gaia-dmp/templates/zeppelin-server.yaml
    >   apiVersion: v1
    >   kind: ConfigMap
    >   metadata:
    >     name: zeppelin-server-conf
    >   data:
    >     nginx.conf: |
    >       daemon off;
    >       worker_processes auto;
    >       events {
    >         worker_connections 1024;
    >       }
    >       http {
    >         map $http_upgrade $connection_upgrade {
    >           default upgrade;
    >           '' close;
    >         }
    >   
    >         # first server block will be default. Proxy zeppelin server.
    >         server {
    >           listen 80;
    >           location / {
    >             proxy_pass http://localhost:8080;
    >             proxy_set_header Host $host;
    >             proxy_http_version 1.1;
    >             proxy_set_header Upgrade $http_upgrade;
    >             proxy_set_header Connection $connection_upgrade;
    >             proxy_redirect http://localhost $scheme://SERVICE_DOMAIN;
    >           }
    >         }
    >   
    >         # match request domain [port]-[service].[serviceDomain]
    >         # proxy extra service such as spark-ui
    >         server {
    >           listen 80;
    >           server_name "~(?<svc_port>[0-9]+)-(?<svc_name>[^.]*)\.(.*)";
    >           location / {
    >             resolver 127.0.0.1:53 ipv6=off;
    >             proxy_pass http://$svc_name.NAMESPACE.svc:$svc_port;
    >             proxy_set_header Host $host;
    >             proxy_http_version 1.1;
    >             proxy_set_header Upgrade $http_upgrade;
    >             proxy_set_header Connection $connection_upgrade;
    >             proxy_redirect http://localhost $scheme://SERVICE_DOMAIN;
    >   
    >             # redirect rule for spark ui. 302 redirect response misses port number of service domain
    >             proxy_redirect ~(http:[/]+[0-9]+[-][^-]+[-][^.]+)[^/]+(\/jobs.*) $1.SERVICE_DOMAIN$2;
    >           }
    >         }
    >       }
    >   ---
    >   # Source: gaia-dmp/charts/gaia-dmp/templates/zeppelin-server.yaml
    >   kind: ClusterRole
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: zeppelin-server-role
    >   rules:
    >   - apiGroups: [""]
    >     resources: ["pods", "services", "configmaps"]
    >     verbs: ["create", "get", "update", "patch", "list", "delete", "watch"]
    >   - apiGroups: ["rbac.authorization.k8s.io"]
    >     resources: ["roles", "rolebindings"]
    >     verbs: ["bind", "create", "get", "update", "patch", "list", "delete", "watch"]
    >   ---
    >   # Source: gaia-dmp/charts/dashboard-admin/templates/dashboard-admin.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: ClusterRoleBinding
    >   metadata:
    >     name: dashboard-admin-binding
    >     namespace: gaia-dmp
    >   subjects:
    >   - kind: ServiceAccount
    >     name: dashboard-admin-account
    >     namespace: gaia-dmp
    >   roleRef:
    >     kind: ClusterRole
    >     name: cluster-admin
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: gaia-dmp/charts/gaia-dmp/templates/zeppelin-server.yaml
    >   kind: RoleBinding
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: zeppelin-server-role-binding
    >     namespace: default
    >   subjects:
    >   - kind: ServiceAccount
    >     name: zeppelin-server
    >   roleRef:
    >     kind: ClusterRole
    >     name: zeppelin-server-role
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: gaia-dmp/charts/gaia-dmp/templates/zeppelin-server.yaml
    >   kind: Service
    >   apiVersion: v1
    >   metadata:
    >     name: zeppelin-server
    >   spec:
    >     ports:
    >       - name: http
    >         port: 80
    >       - name: rpc            # port name is referenced in the code. So it shouldn't be changed.
    >         port: 12320
    >     selector:
    >       app.kubernetes.io/name: zeppelin-server
    >   ---
    >   # Source: gaia-dmp/charts/gaia-dmp/templates/zeppelin-server.yaml
    >   apiVersion: apps/v1
    >   kind: Deployment
    >   metadata:
    >     name: zeppelin-server
    >     labels:
    >       app.kubernetes.io/name: zeppelin-server
    >   spec:
    >     replicas: 1
    >     selector:
    >       matchLabels:
    >         app.kubernetes.io/name: zeppelin-server
    >     strategy:
    >       type: RollingUpdate
    >     template:
    >       metadata:
    >         labels:
    >           app.kubernetes.io/name: zeppelin-server
    >       spec:
    >         serviceAccountName: zeppelin-server
    >         volumes:
    >         - name: nginx-conf
    >           configMap:
    >             name: zeppelin-server-conf
    >             items:
    >             - key: nginx.conf
    >               path: nginx.conf
    >         containers:
    >         - name: zeppelin-server
    >           image: "apache/zeppelin:0.10.1"
    >           command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/zeppelin.sh"]
    >           lifecycle:
    >             preStop:
    >               exec:
    >                 # SIGTERM triggers a quick exit; gracefully terminate instead
    >                 command: ["sh", "-c", "ps -ef | grep org.apache.zeppelin.server.ZeppelinServer | grep -v grep | awk '{print $2}' | xargs kill"]
    >           ports:
    >           - name: http
    >             containerPort: 8080
    >           - name: https
    >             containerPort: 8443
    >           - name: rpc
    >             containerPort: 12320
    >           env:
    >           - name: POD_UID
    >             valueFrom:
    >               fieldRef:
    >                 apiVersion: v1
    >                 fieldPath: metadata.uid
    >           - name: POD_NAME
    >             valueFrom:
    >               fieldRef:
    >                 apiVersion: v1
    >                 fieldPath: metadata.name
    >           envFrom:
    >           - configMapRef:
    >               name: zeppelin-server-conf-map
    >         # volumeMounts:
    >         #  - name: zeppelin-server-notebook-volume     # configure this to persist notebook
    >         #    mountPath: /zeppelin/notebook
    >         #  - name: zeppelin-server-conf                # configure this to persist Zeppelin configuration
    >         #    mountPath: /zeppelin/conf
    >         #  - name: zeppelin-server-custom-k8s          # configure this to mount customized Kubernetes spec for interpreter
    >         #    mountPath: /zeppelin/k8s
    >         - name: zeppelin-server-gateway
    >           image: nginx:1.14.0
    >           command: ["/bin/sh", "-c"]
    >           env:
    >           - name: SERVICE_DOMAIN
    >             valueFrom:
    >               configMapKeyRef:
    >                 name: zeppelin-server-conf-map
    >                 key: SERVICE_DOMAIN
    >           args:
    >             - cp -f /tmp/conf/nginx.conf /etc/nginx/nginx.conf;
    >               sed -i -e "s/SERVICE_DOMAIN/$SERVICE_DOMAIN/g" /etc/nginx/nginx.conf;
    >               sed -i -e "s/NAMESPACE/$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)/g" /etc/nginx/nginx.conf;
    >               cat /etc/nginx/nginx.conf;
    >               /usr/sbin/nginx
    >           volumeMounts:
    >             - name: nginx-conf
    >               mountPath: /tmp/conf
    >           lifecycle:
    >             preStop:
    >               exec:
    >                 # SIGTERM triggers a quick exit; gracefully terminate instead
    >                 command: ["/usr/sbin/nginx", "-s", "quit"]
    >         - name: dnsmasq  # nginx requires dns resolver for dynamic dns resolution
    >           image: "janeczku/go-dnsmasq:release-1.0.5"
    >           args:
    >             - --listen
    >             - "127.0.0.1:53"
    >             - --default-resolver
    >             - --append-search-domains
    >             - --hostsfile=/etc/hosts
    >             - --verbose
    >   ---
    >   # Source: gaia-dmp/charts/dashboard-admin/templates/dashboard-admin.yaml
    >   #
    >   # <meta:header>
    >   #   <meta:licence>
    >   #     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
    >   #
    >   #     This information is free software: you can redistribute it and/or modify
    >   #     it under the terms of the GNU General Public License as published by
    >   #     the Free Software Foundation, either version 3 of the License, or
    >   #     (at your option) any later version.
    >   #
    >   #     This information is distributed in the hope that it will be useful,
    >   #     but WITHOUT ANY WARRANTY; without even the implied warranty of
    >   #     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    >   #     GNU General Public License for more details.
    >   #
    >   #     You should have received a copy of the GNU General Public License
    >   #     along with this program.  If not, see <http://www.gnu.org/licenses/>.
    >   #   </meta:licence>
    >   # </meta:header>
    >   #
    >   # AIMetrics: []
    >   #
    >   ---
    >   # Source: gaia-dmp/templates/namespace.yaml
    >   #
    >   # <meta:header>
    >   #   <meta:licence>
    >   #     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
    >   #
    >   #     This information is free software: you can redistribute it and/or modify
    >   #     it under the terms of the GNU General Public License as published by
    >   #     the Free Software Foundation, either version 3 of the License, or
    >   #     (at your option) any later version.
    >   #
    >   #     This information is distributed in the hope that it will be useful,
    >   #     but WITHOUT ANY WARRANTY; without even the implied warranty of
    >   #     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    >   #     GNU General Public License for more details.
    >   #
    >   #     You should have received a copy of the GNU General Public License
    >   #     along with this program.  If not, see <http://www.gnu.org/licenses/>.
    >   #   </meta:licence>
    >   # </meta:header>
    >   #
    >   # AIMetrics: []
    >   #

    #
    # Wow, it worked :-)
    #

# -----------------------------------------------------
# -----------------------------------------------------
# Launch browser pointed at the dashboard via the proxy.
#[user@desktop]

    firefox \
        --new-window \
        'http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:https/proxy/#/login' \
        &

# -----------------------------------------------------
# Generate a token.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        ansibler-blue \
            bash -c \
                '
                source /deployments/cluster-api/bootstrap/ansible/files/aglais/bin/loadconfig ;\
                kubectl \
                    --kubeconfig "${workclusterconf:?}" \
                    --namespace "gaia-dmp" \
                    create token \
                        "dashboard-admin-account"
                '
    >   ....
    >   ....


