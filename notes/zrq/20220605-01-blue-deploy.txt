#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Deployment used to run the concurrent tests.

    Result:

        Work in progress ..

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase='arcus'
    cloudname='iris-gaia-blue'
    configname=zeppelin-54.86-spark-6.26.43


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   ....
    >   ....

    #
    # Fails with SSH errors.
    #

# -----------------------------------------------------
# SELinux rules are preventing the SSH client in the container from accessing the SSH agent socket on laptop.
#[root@ansibler]

    ssh -v zeppelin

    >   OpenSSH_8.8p1, OpenSSL 3.0.0 7 sep 2021
    >   debug1: Reading configuration data /root/.ssh/config
    >   debug1: /root/.ssh/config line 31: Applying options for zeppelin
    >   ....
    >   ....
    >   debug1: Connecting to 128.232.222.170 [128.232.222.170] port 22.
    >   debug1: Connection established.
    >   ....
    >   ....
    >   debug1: Host '128.232.222.170' is known and matches the ED25519 host key.
    >   debug1: Found key in /root/.ssh/known_hosts:1
    >   ....
    >   ....
    >   debug1: Next authentication method: publickey
    >   debug1: Trying private key: /root/.ssh/id_rsa
    >   debug1: Trying private key: /root/.ssh/id_dsa
    >   debug1: Trying private key: /root/.ssh/id_ecdsa
    >   debug1: Trying private key: /root/.ssh/id_ecdsa_sk
    >   debug1: Trying private key: /root/.ssh/id_ed25519
    >   debug1: Trying private key: /root/.ssh/id_ed25519_sk
    >   debug1: Trying private key: /root/.ssh/id_xmss
    >   debug1: No more authentication methods to try.
    >   fedora@128.232.222.170: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).


    >   SELinux is preventing ssh from connectto access on the unix_stream_socket /run/user/1000/keyring/ssh.
    >   
    >   *****  Plugin catchall (100. confidence) suggests   **************************
    >   
    >   If you believe that ssh should be allowed connectto access on the ssh unix_stream_socket by default.
    >   Then you should report this as a bug.
    >   You can generate a local policy module to allow this access.
    >   Do
    >   allow this access for now by executing:
    >   # ausearch -c 'ssh' --raw | audit2allow -M my-ssh
    >   # semodule -X 300 -i my-ssh.pp
    >   
    >   Additional Information:
    >   Source Context                system_u:system_r:container_t:s0:c5,c38
    >   Target Context                unconfined_u:unconfined_r:unconfined_t:s0-
    >                                 s0:c0.c1023
    >   Target Objects                /run/user/1000/keyring/ssh [ unix_stream_socket ]
    >   Source                        ssh
    >   Source Path                   ssh
    >   Port                          <Unknown>
    >   Host                          fedora
    >   Source RPM Packages
    >   Target RPM Packages
    >   SELinux Policy RPM            selinux-policy-targeted-36.10-1.fc36.noarch
    >   Local Policy RPM              selinux-policy-targeted-36.10-1.fc36.noarch
    >   Selinux Enabled               True
    >   Policy Type                   targeted
    >   Enforcing Mode                Enforcing
    >   Host Name                     fedora
    >   Platform                      Linux fedora 5.17.12-300.fc36.x86_64 #1 SMP
    >                                 PREEMPT Mon May 30 16:56:53 UTC 2022 x86_64 x86_64
    >   Alert Count                   6
    >   First Seen                    2022-06-05 23:50:31 BST
    >   Last Seen                     2022-06-06 00:30:09 BST
    >   Local ID                      af7b1ea4-8999-44eb-b262-63580fb19ae9
    >   
    >   Raw Audit Messages
    >   type=AVC msg=audit(1654471809.349:356): avc:  denied  { connectto } for  pid=7310 comm="ssh" path="/run/user/1000/keyring/ssh" scontext=system_u:system_r:container_t:s0:c5,c38 tcontext=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 tclass=unix_stream_socket permissive=0
    >   
    >   Hash: ssh,container_t,unconfined_t,unix_stream_socket,connectto


# -----------------------------------------------------
# Alllow SSH client in a container access to our SSH agent.
#[user@laptop]

    sudo ausearch -c 'ssh' --raw | audit2allow -M container-ssh

    sudo semodule -X 300 -i container-ssh.pp


# -----------------------------------------------------
# Try again ....
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase='arcus'
    cloudname='iris-gaia-blue'
    configname=zeppelin-54.86-spark-6.26.43


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   ....
    >   ....
    >   real    49m14.575s
    >   user    13m36.205s
    >   sys     2m25.241s



