#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Run tests to verify the Spark3 plot issues are fixed.
        https://github.com/wfau/aglais/pull/590

    Result:

        Spark3 mathplotlib works.
        Imported notebooks have code names.


# -----------------------------------------------------
# Fetch changes from the branch owner's repo.
#[user@desktop]

    pullowner=stvoutsin
    pullbranch=issue-upgrade-spark-3

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git remote -v

        git fetch "${pullowner:?}"

    popd

    >   origin      git@github.com:Zarquan/aglais.git (fetch)
    >   origin      git@github.com:Zarquan/aglais.git (push)
    >   stvoutsin   git@github.com:stvoutsin/aglais.git (fetch)
    >   stvoutsin   git@github.com:stvoutsin/aglais.git (push)
    >   upstream    git@github.com:wfau/aglais.git (fetch)
    >   upstream    git@github.com:wfau/aglais.git (push)

    >   remote: Enumerating objects: 11, done.
    >   remote: Counting objects: 100% (11/11), done.
    >   remote: Compressing objects: 100% (5/5), done.
    >   remote: Total 6 (delta 4), reused 2 (delta 0), pack-reused 0
    >   Unpacking objects: 100% (6/6), 494 bytes | 164.00 KiB/s, done.
    >   From github.com:stvoutsin/aglais
    >      7a3354b..f358293  issue-upgrade-spark-3 -> stvoutsin/issue-upgrade-spark-3


# -----------------------------------------------------
# Create a new branch based on the current master.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        branchname=PR-590-test
        prevbranch=$(git branch --show-current)
        testbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout master
        git checkout -b "${testbranch:?}"

    popd

    >   Switched to a new branch '20211202-zrq-PR-590-test'


# -----------------------------------------------------
# Merge the branch we want to test.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git merge "${pullowner:?}/${pullbranch:?}"

    popd

    >   Merge made by the 'recursive' strategy.
    >    deployments/common/zeppelin/interpreter.json                   | 589 +++++++++++++++++++++++++++------------------------------
    >    deployments/hadoop-yarn/ansible/27-install-zeppelin.yml        |  12 ++
    >    deployments/hadoop-yarn/ansible/34-setup-shuffler.yml          |   2 +
    >    deployments/hadoop-yarn/ansible/config/cclake-large-06.yml     |  10 +-
    >    deployments/hadoop-yarn/ansible/config/cclake-medium-04.yml    |  13 +-
    >    deployments/hadoop-yarn/ansible/config/medium-04.yml           |  10 +-
    >    deployments/hadoop-yarn/bin/start-zeppelin.sh                  |   2 +-
    >    notes/stv/20211011-Spark3-zeppelin-0.9.2.txt                   | 220 +++++++++++++++++++++
    >    notes/stv/20211013-Spark3-zeppelin-0.10.0-permission-issue.txt | 253 +++++++++++++++++++++++++
    >    notes/stv/20211015-Spark3-zeppelin-0.10.0.txt                  | 151 +++++++++++++++
    >    notes/stv/20211018-Zeppelin-0.10-Spark-3-test-01.txt           | 154 +++++++++++++++
    >    notes/stv/20211019-Zeppelin-0.10-Spark-3-test-01.txt           | 121 ++++++++++++
    >    notes/stv/20211020-debug-job-manager.txt                       |  59 ++++++
    >    13 files changed, 1265 insertions(+), 331 deletions(-)
    >    create mode 100644 notes/stv/20211011-Spark3-zeppelin-0.9.2.txt
    >    create mode 100644 notes/stv/20211013-Spark3-zeppelin-0.10.0-permission-issue.txt
    >    create mode 100644 notes/stv/20211015-Spark3-zeppelin-0.10.0.txt
    >    create mode 100644 notes/stv/20211018-Zeppelin-0.10-Spark-3-test-01.txt
    >    create mode 100644 notes/stv/20211019-Zeppelin-0.10-Spark-3-test-01.txt
    >    create mode 100644 notes/stv/20211020-debug-job-manager.txt


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --publish 8088:8088 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2021.08.25 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudname=gaia-dev


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    3m42.772s
    >   user    1m16.280s
    >   sys     0m10.131s


# -----------------------------------------------------
# Create everything, using the (old) medium config.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            'cclake-medium-04' \
            'test' \
        | tee /tmp/create.log

    >   real    290m57.733s
    >   user    61m48.364s
    >   sys     8m30.814s

    #
    # Note the results come in after everything has completed.
    # So once it starts the tests, skip to setting up the monitoring and come back to collect the results at the end.
    #

    >   ....
    >   ....
    >   TASK [Run benchmarker] **************************************************************************
    >   changed: [localhost] => {
    >       "changed": true,
    >       "cmd": ["python3", "/tmp/run-test.py"],
    >       "delta": "4:15:00.037185",
    >       "end": "2021-12-03 07:14:43.659184",
    >       "rc": 0,
    >       "start": "2021-12-03 02:59:43.621999",
    >       "stderr": "",
    >       "stderr_lines": [],
    >       "stdout": "Test completed after: 15299.70 seconds ...",
    >       "stdout_lines": [
    >           "Test completed after: 15299.70 seconds",
    >           ....
    >           ]
    >       }
    >
    >   PLAY RECAP **************************************************************************************
    >   localhost : ok=9    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

    >   Test completed after: 15299.70 seconds
    >       {
    >       'SetUp': {
    >           'totaltime': '40.38',
    >           'status': 'SUCCESS',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'Mean_proper_motions_over_the_sky': {
    >           'totaltime': '62.88',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'Source_counts_over_the_sky.json': {
    >           'totaltime': '19.24',
    >           'status': 'SUCCESS',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'Good_astrometric_solutions_via_ML_Random_Forrest_classifier': {
    >           'totaltime': '563.59',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'QC_cuts_dev.json': {
    >           'totaltime': '6600.10',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'WD_detection_dev.json': {
    >           'totaltime': '8013.50',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           }
    >       }


# -----------------------------------------------------
# -----------------------------------------------------
# Setup a SSH tunnel SOCKS proxy.
# https://www.digitalocean.com/community/tutorials/how-to-route-web-traffic-securely-without-a-vpn-using-a-socks-tunnel
# Running 'htop' on the Zeppelin node to keep the connection alive.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        ansibler \
            bash -c \
            '
            ssh \
                -t \
                -D "3000"  \
                zeppelin \
                    "
                    htop
                    "
            '


# -----------------------------------------------------
# Login to the Zeppelin UI using FoxyProxy SOCKS proxy.
#[user@desktop]

    firefox --new-window 'http://zeppelin:8080/' &


# -----------------------------------------------------
# Login to the Spark UI using FoxyProxy SOCKS proxy.
#[user@desktop]

    firefox --new-window 'http://master01:8088/cluster' &


# -----------------------------------------------------
# Login to Grafana UI using FoxyProxy SOCKS proxy.
#[user@desktop]

    firefox --new-window 'http://monitor:3000/login' &

        Create our Prometheus data source.
        http://monitor:3000/datasources/new

            URL: http://monitor:9090/
            scrape: 1s

        Import our dashboards from local disc.
        http://monitor:3000/dashboard/import

            deployments/common/grafana/20210705-02-grafana-dash.json
            deployments/common/grafana/node-exporter-v20201010-1633446087511.json

            http://monitor:3000/d/34S3C8k7z/my-first-dash&refresh=5s
            http://monitor:3000/d/xfpJB9FGz/1-node-exporter-for-prometheus-dashboard-en-v20201010?orgId=1&refresh=5s


# -----------------------------------------------------

    Zeppelin main page, after tests completed
    Screenshot at 2021-12-03 11-16-26.png

    Using ML to define an astrometrically clean sample of stars
    Screenshot at 2021-12-03 11-20-58.png

    HEALPix density map
    Screenshot at 2021-12-03 11-22-17.png

    Mean RA proper motion plot
    Screenshot at 2021-12-03 11-21-45.png

    Training a Random Forest to identify White Dwarf Stars
    Screenshot at 2021-12-03 11-19-31.png


# -----------------------------------------------------

    Spark UI
    Screenshot at 2021-12-03 11-16-53.png

    Grafana
    Screenshot at 2021-12-03 11-17-55.png

    Grafana
    Screenshot at 2021-12-03 11-18-21.png


# -----------------------------------------------------
# -----------------------------------------------------

    #
    # Approve and merge the PR on GitHub.
    # https://github.com/wfau/aglais/pull/590
    #

# -----------------------------------------------------
# -----------------------------------------------------
# Delete our local branch.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git checkout master
        git branch

--START--
....
....
--END--


        git branch -d ${testbranch:?}

--START--
....
....
--END--


        git branch -D ${testbranch:?}

--START--
....
....
--END--

    popd


# -----------------------------------------------------
# Fetch the merge result from upstream.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git fetch upstream

--START--
....
....
--END--


        git merge 'upstream/master'

--START--
....
....
--END--


        git status

--START--
....
....
--END--


        git push

--START--
....
....
--END--

    popd















