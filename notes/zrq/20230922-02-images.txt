#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: []
#

    Target:

        Create kube images for K8s worker nodes.

    Result:

        Work in progress ...

# -----------------------------------------------------

    Kuberneres image builder.
    https://image-builder.sigs.k8s.io/introduction

    Remote build on openstack.
    https://image-builder.sigs.k8s.io/capi/providers/openstack-remote

    Quickstart
    https://image-builder.sigs.k8s.io/capi/quickstart.html



# -----------------------------------------------------
# Run the image-builder client container.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --entrypoint bash \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        registry.k8s.io/scl-image-builder/cluster-node-image-builder-amd64:v0.1.19


        openstack image list

    >   bash: openstack: command not found

        #
        # So the openstack command line isn't installed inside the container.
        # Not good.
        #
        #
        #

# -----------------------------------------------------
# Try using our bootstrap node ..
#[user@desktop]

    ssh fedora@128.232.226.9


# -----------------------------------------------------
# Clone the image-builder code.
#[user@bootstrap]

    sudo dnf install -y git

    pushd /opt

        sudo mkdir builder
        sudo chmod a+w builder
        pushd builder

            git clone git@github.com:kubernetes-sigs/image-builder.git

        popd
    popd

# -----------------------------------------------------
# Install qemu toolkit.
#[user@bootstrap]

    sudo dnf install -y \
        make \
        unzip \
        qemu-kvm \
        qemu-img \
        virt-install \
        libvirt \
        libvirt-client

    #Unknowns
        libvirt-daemon-system
        virtinst
        cpu-checker
        libguestfs-tools
        libosinfo-bin

    sudo systemctl enable libvirtd
    sudo systemctl start  libvirtd
    sudo systemctl status libvirtd

    >   ....
    >   Sep 22 03:51:43 iris-gaia-red-20230922-bootstrap-node libvirtd[17408]: Unable to open /dev/kvm: No such file or directory
    >   ....


    sudo modprobe kvm-intel

    >   modprobe: ERROR: could not insert 'kvm_intel': Operation not supported


    grep -E '^flags.*(vmx|svm)' /proc/cpuinfo

    >   -


    #
    # Looks like the Openstack VM won't let me run a nested VM.
    # Not a suprise, but worth a try ...
    #

    #
    # Two options, 1) run the build on Openstack.
    # Needs the openstack client libraries installed.
    # Their docker container doesn't have the openstack client libraries installed.
    # Our client container doesn't have the packer libraries installed.
    #
    # 2) install all the libraries on desktop and run the qemu build locally.
    # .. give this a try.
    #

    Setting up libvirt on Fedora desktop
    https://developer.fedoraproject.org/tools/virtualization/setting-up-fedora-workstation-domain-on-libvirt.html

    Openstack image builder (KVM and qemu)
    https://image-builder.sigs.k8s.io/capi/providers/openstack





