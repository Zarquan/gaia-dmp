#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Deleting loadbalancers using the command line.

    Result:

        Work in progress ...


    References:

        Listeners for your Classic Load Balancer
        https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html

            A listener is a process that checks for connection requests. It is configured with a
            protocol and a port for front-end (client to load balancer) connections, and a protocol
            and a port for back-end (load balancer to back-end instance) connections.
            ....
            ....

        Listeners for your Application Load Balancers
        https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html

            A listener is a process that checks for connection requests, using the protocol and port
            that you configure. The rules that you define for a listener determine how the load balancer
            routes requests to its registered targets.
            ....
            ....



# -----------------------------------------------------
# Try deleting our loadbalancer.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        loadbalancer list

    >   +--------------------------------------+---------------------------------------------------+----------------------------------+-------------+---------------------+------------------+----------+
    >   | id                                   | name                                              | project_id                       | vip_address | provisioning_status | operating_status | provider |
    >   +--------------------------------------+---------------------------------------------------+----------------------------------+-------------+---------------------+------------------+----------+
    >   | 11a1a868-277e-4025-b684-d3cdceeee2d4 | k8s-clusterapi-cluster-default-green-frog-kubeapi | 0dd8cc5ee5a7455c8748cc06d04c93c3 | 10.6.0.170  | ACTIVE              | ONLINE           | amphora  |
    >   | 5216cc84-c36d-43a7-b23a-375f05b3bb7f | k8s-clusterapi-cluster-default-brown-toad-kubeapi | 0dd8cc5ee5a7455c8748cc06d04c93c3 | 10.6.0.236  | ACTIVE              | ONLINE           | amphora  |
    >   +--------------------------------------+---------------------------------------------------+----------------------------------+-------------+---------------------+------------------+----------+


    openstack \
        --os-cloud "${cloudname:?}" \
        loadbalancer delete \
            '11a1a868-277e-4025-b684-d3cdceeee2d4'

    >   Validation failure: Cannot delete Load Balancer 11a1a868-277e-4025-b684-d3cdceeee2d4 - it has children (HTTP 400) (Request-ID: req-5a8548e4-5729-41c1-96f3-c9d9816f0af9)


    openstack \
        --os-cloud "${cloudname:?}" \
        loadbalancer show \
            '11a1a868-277e-4025-b684-d3cdceeee2d4'

    >   +---------------------+----------------------------------------------------------------------+
    >   | Field               | Value                                                                |
    >   +---------------------+----------------------------------------------------------------------+
    >   | admin_state_up      | True                                                                 |
    >   | availability_zone   | None                                                                 |
    >   | created_at          | 2023-04-13T14:14:53                                                  |
    >   | description         | Created by cluster-api-provider-openstack cluster default-green-frog |
    >   | flavor_id           | None                                                                 |
    >   | id                  | 11a1a868-277e-4025-b684-d3cdceeee2d4                                 |
    >   | listeners           | 886dc9e8-39a0-4197-a49c-f31412b2f84c                                 |
    >   | name                | k8s-clusterapi-cluster-default-green-frog-kubeapi                    |
    >   | operating_status    | ONLINE                                                               |
    >   | pools               | 551b031c-e89a-4aa5-a8b8-051f1be8a979                                 |
    >   | project_id          | 0dd8cc5ee5a7455c8748cc06d04c93c3                                     |
    >   | provider            | amphora                                                              |
    >   | provisioning_status | ACTIVE                                                               |
    >   | updated_at          | 2023-04-13T14:16:06                                                  |
    >   | vip_address         | 10.6.0.170                                                           |
    >   | vip_network_id      | ae30f196-30ef-44d1-81a3-081b8d0e571a                                 |
    >   | vip_port_id         | 351c250e-c560-4e4c-9f30-548ef253999c                                 |
    >   | vip_qos_policy_id   | None                                                                 |
    >   | vip_subnet_id       | b808096e-e564-471e-954d-c9991972a73d                                 |
    >   | tags                |                                                                      |
    >   +---------------------+----------------------------------------------------------------------+


    openstack \
        --os-cloud "${cloudname:?}" \
        loadbalancer listener \
            list

    >   +--------------------------------------+--------------------------------------+--------------------------------------------------------+----------------------------------+----------+---------------+----------------+
    >   | id                                   | default_pool_id                      | name                                                   | project_id                       | protocol | protocol_port | admin_state_up |
    >   +--------------------------------------+--------------------------------------+--------------------------------------------------------+----------------------------------+----------+---------------+----------------+
    >   | 886dc9e8-39a0-4197-a49c-f31412b2f84c | 551b031c-e89a-4aa5-a8b8-051f1be8a979 | k8s-clusterapi-cluster-default-green-frog-kubeapi-6443 | 0dd8cc5ee5a7455c8748cc06d04c93c3 | TCP      |          6443 | True           |
    >   | b5898e88-f4b9-4de8-b793-5de392fb00a5 | 63af66b1-2a5c-4c73-a73f-616e8ee817f9 | k8s-clusterapi-cluster-default-brown-toad-kubeapi-6443 | 0dd8cc5ee5a7455c8748cc06d04c93c3 | TCP      |          6443 | True           |
    >   +--------------------------------------+--------------------------------------+--------------------------------------------------------+----------------------------------+----------+---------------+----------------+


    openstack \
        --os-cloud "${cloudname:?}" \
        project list

    >   +----------------------------------+-----------------+
    >   | ID                               | Name            |
    >   +----------------------------------+-----------------+
    >   | 0dd8cc5ee5a7455c8748cc06d04c93c3 | iris-gaia-red   |
    >   | de5ddc6b4d1e445bb73e45c7b8971673 | iris-gaia-green |
    >   | e216e6b502134b6185380be6ccd0bf09 | iris-gaia-data  |
    >   | e918a13fed2648758175a15fac083569 | iris-gaia-blue  |
    >   +----------------------------------+-----------------+


    #
    # Cloud name isn't the same as project.
    # We are using 'iris-gaia-red-admin' which has admin access to 'iris-gaia-red'.
    #

    #
    # Try listing our loadbalancer listeners from another cloud (project).
    #

    openstack \
        --os-cloud 'iris-gaia-green' \
        loadbalancer listener list

    >   Policy does not allow this request to be performed. (HTTP 403) (Request-ID: req-f851cba4-8c13-453e-91ff-aef8dbefbc29)

    #
    # Snafu'd because we need the unrestricted admin token to access loadbalancers.
    # Let's assume we can't see, or delete, load balancers from other projects.
    # TODO Create credentials for the other projects and test this assumption.
    #

# -----------------------------------------------------
# Try deleting our load balancer listeners.
#[root@ansibler]

    echo ""
    echo "---- ----"
    echo "Deleting load balancer listeners"

    for listenerid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer listener \
                list \
                    --format json \
        | jq -r '.[] | .id'
        )
    do
        echo "- Deleting listener [${listenerid}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer listener \
                delete \
                    "${listenerid:?}"
    done

    >   Deleting load balancer listeners
    >   - Deleting listener [886dc9e8-39a0-4197-a49c-f31412b2f84c]
    >   - Deleting listener [b5898e88-f4b9-4de8-b793-5de392fb00a5]


# -----------------------------------------------------
# Try deleting our load balancers.
#[root@ansibler]

    echo ""
    echo "---- ----"
    echo "Deleting load balancers"

    for balancerid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer \
                list \
                    --format json \
        | jq -r '.[] | .id'
        )
    do
        echo "- Deleting load balancer [${balancerid}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer \
                delete \
                    "${balancerid:?}"
    done

    >   - Deleting load balancer [11a1a868-277e-4025-b684-d3cdceeee2d4]
    >   Validation failure: Cannot delete Load Balancer 11a1a868-277e-4025-b684-d3cdceeee2d4 - it has children (HTTP 400) (Request-ID: req-0c959293-812f-4528-a9b4-b82a5bc27635)
    >   - Deleting load balancer [5216cc84-c36d-43a7-b23a-375f05b3bb7f]
    >   Validation failure: Cannot delete Load Balancer 5216cc84-c36d-43a7-b23a-375f05b3bb7f - it has children (HTTP 400) (Request-ID: req-f6a30c2e-a453-4013-9c21-613ae8ce6e69)

    #
    # Still attached to something ...
    #
    # Is this it ?
    # https://bugs.launchpad.net/horizon/+bug/1603458
    #   To delete an LBaaSv2 loadbalancer, you must remove all the members from the pool,
    #   then delete the pool, then delete the listener, then you can delete the loadbalancer.
    #   ....
    #

# -----------------------------------------------------
# Try deleting our load balancer pools.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        loadbalancer pool \
            list

    >   +--------------------------------------+--------------------------------------------------------+----------------------------------+---------------------+----------+--------------+----------------+
    >   | id                                   | name                                                   | project_id                       | provisioning_status | protocol | lb_algorithm | admin_state_up |
    >   +--------------------------------------+--------------------------------------------------------+----------------------------------+---------------------+----------+--------------+----------------+
    >   | 551b031c-e89a-4aa5-a8b8-051f1be8a979 | k8s-clusterapi-cluster-default-green-frog-kubeapi-6443 | 0dd8cc5ee5a7455c8748cc06d04c93c3 | ACTIVE              | TCP      | ROUND_ROBIN  | True           |
    >   | 63af66b1-2a5c-4c73-a73f-616e8ee817f9 | k8s-clusterapi-cluster-default-brown-toad-kubeapi-6443 | 0dd8cc5ee5a7455c8748cc06d04c93c3 | ACTIVE              | TCP      | ROUND_ROBIN  | True           |
    >   +--------------------------------------+--------------------------------------------------------+----------------------------------+---------------------+----------+--------------+----------------+

    echo ""
    echo "---- ----"
    echo "Deleting load balancer pools"

    for poolid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer pool \
                list \
                    --format json \
        | jq -r '.[] | .id'
        )
    do
        echo "- Deleting pool [${poolid}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer pool \
                delete \
                    "${poolid:?}"
    done

    >   Deleting load balancer pools
    >   - Deleting pool [551b031c-e89a-4aa5-a8b8-051f1be8a979]
    >   - Deleting pool [63af66b1-2a5c-4c73-a73f-616e8ee817f9]


# -----------------------------------------------------
# Try deleting our load balancers.
#[root@ansibler]

    echo ""
    echo "---- ----"
    echo "Deleting load balancers"

    for balancerid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer \
                list \
                    --format json \
        | jq -r '.[] | .id'
        )
    do
        echo "- Deleting load balancer [${balancerid}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            loadbalancer \
                delete \
                    "${balancerid:?}"
    done

    >   Deleting load balancers
    >   - Deleting load balancer [11a1a868-277e-4025-b684-d3cdceeee2d4]
    >   - Deleting load balancer [5216cc84-c36d-43a7-b23a-375f05b3bb7f]

    #
    # This way we delete *all* the listeners and *all* the pools before we delete the load balancers.
    # Alternatively we could start with a load balancer, list and delete it's listeners and it's pools.
    #



