#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: []
#

    Target:

        Try again .. see if Kubernetes have fixed their versions.

    Result:

        Work in progress ...

# -----------------------------------------------------
# Start a new client.
#[user@desktop]

    source "${HOME}/aglais.env"

    agclient red

    >   ---- ---- ----
    >   File [agclient]
    >   Path [/var/local/projects/WFAU/gaia-dmp/github-zrq/bin]
    >   ---- ---- ----
    >   Cloud name  [iris-gaia-red]
    >   Client name [ansibler-red]
    >   ---- ---- ----
    >   ....
    >   ....


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    /deployments/openstack/bin/delete-all.sh \
        "${cloudname:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Create everything.
#[root@ansibler]

    ansible-playbook \
        --inventory 'bootstrap,' \
        '/deployments/cluster-api/bootstrap/ansible/00-create-all.yml'

    >   ....
    >   ....
    >   TASK [Install the Openstack provider] *****************************************************************************
    >   fatal: [bootstrap]: FAILED! => {
    >       "changed": true,
    >       "cmd": "
    >           clusterctl init \
    >               --kubeconfig \"/opt/aglais/iris-gaia-red-20230919-kind.yml\" \
    >               --infrastructure openstack
    >           ",
    >       "delta": "0:02:04.707372",
    >       "end": "2023-09-19 04:59:29.853345",
    >       "msg": "non-zero return code",
    >       "rc": 1,
    >       "start": "2023-09-19 04:57:25.145973",
    >       "stderr": "Fetching providers\nError: failed to get provider components for the \"openstack\" provider: failed to read \"infrastructure-components.yaml\" from provider's repository \"infrastructure-openstack\": failed to get GitHub release v0.8.0: failed to read release \"v0.8.0\": GET https://api.github.com/repos/kubernetes-sigs/cluster-api-provider-openstack/releases/tags/v0.8.0: 404 Not Found []",
    >       "stderr_lines": [
    >           "Fetching providers",
    >           "Error: failed to get provider components for the \"openstack\" provider:
    >               failed to read \"infrastructure-components.yaml\" from provider's repository \"infrastructure-openstack\":
    >               failed to get GitHub release v0.8.0:
    >               failed to read release \"v0.8.0\":
    >               GET https://api.github.com/repos/kubernetes-sigs/cluster-api-provider-openstack/releases/tags/v0.8.0: 404 Not Found []
    >           "
    >           ],
    >       "stdout": "",
    >       "stdout_lines": []
    >       }

    #
    # Nope, not fixed yet ...
    #
    # Try again 7hrs later.
    #


# -----------------------------------------------------
# -----------------------------------------------------
# Start a new client.
#[user@desktop]

    source "${HOME}/aglais.env"

    agclient red

    >   ---- ---- ----
    >   File [agclient]
    >   Path [/var/local/projects/WFAU/gaia-dmp/github-zrq/bin]
    >   ---- ---- ----
    >   Cloud name  [iris-gaia-red]
    >   Client name [ansibler-red]
    >   ---- ---- ----
    >   ....
    >   ....


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    /deployments/openstack/bin/delete-all.sh \
        "${cloudname:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Create everything.
#[root@ansibler]

    ansible-playbook \
        --inventory 'bootstrap,' \
        '/deployments/cluster-api/bootstrap/ansible/00-create-all.yml'

    >   ....
    >   ....
    >   PLAY RECAP *********************************************************************
    >   bootstrap                  : ok=57   changed=45   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   localhost                  : ok=35   changed=26   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

    #
    # OK, that worked.
    #

# -----------------------------------------------------
# Check our work cluster status.
#[root@ansibler]

    source /deployments/cluster-api/bootstrap/ansible/files/aglais/bin/loadconfig

    kubectl \
        --kubeconfig "${workclusterconf:?}" \
        cluster-info

    >   Kubernetes control plane is running at https://128.232.226.164:6443
    >   CoreDNS is running at https://128.232.226.164:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
    >   ....
    >   ....


    kubectl \
        --kubeconfig "${workclusterconf:?}" \
        --output yaml \
        version

    >   clientVersion:
    >     buildDate: "2023-05-18T00:00:00Z"
    >     compiler: gc
    >     gitCommit: e770bdbb87cccdc2daa790ecd69f40cf4df3cc9d
    >     gitTreeState: archive
    >     gitVersion: v1.25.10
    >     goVersion: go1.19.9
    >     major: "1"
    >     minor: "25"
    >     platform: linux/amd64
    >   kustomizeVersion: v4.5.7
    >   serverVersion:
    >     buildDate: "2022-11-09T13:29:58Z"
    >     compiler: gc
    >     gitCommit: 872a965c6c6526caa949f0c6ac028ef7aff3fb78
    >     gitTreeState: clean
    >     gitVersion: v1.25.4
    >     goVersion: go1.19.3
    >     major: "1"
    >     minor: "25"
    >     platform: linux/amd64


# -----------------------------------------------------
# Deploy our gaia-dmp Helm chart.
#[root@ansibler]

    helm \
        dependency build \
            --kubeconfig "${workclusterconf:?}" \
            '/deployments/cluster-api/bootstrap/helm/gaia-dmp'

    >   Saving 2 charts
    >   Deleting outdated charts
    >   Error: open /deployments/cluster-api/bootstrap/helm/gaia-dmp/Chart.lock: read-only file system

    #
    # OMG Helm is such a crappy design !!
    # A mixture of original source code and temp files in the same directory.
    #   helm/gaia-dmp/Chart.yaml
    #   helm/gaia-dmp/Chart.lock
    #
    # Means we can't make the original source code read-only.
    #

    #
    # At the moment agclinet has this :

    podman run \
        ....
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        --tmpfs  "/deployments/cluster-api/bootstrap/helm/gaia-dmp/charts:rw" \
        --tmpfs  "/deployments/cluster-api/bootstrap/helm/gaia-dmp/tmpcharts:rw" \
        ....

    #
    # We can change it to use this :

    podman run \
        ....
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        --tmpfs  "/deployments/cluster-api/bootstrap/helm/gaia-dmp:rw" \
        ....

    #
    # Which means it will create a read-write tmpfs copy of /helm/gaia-dmp
    # Which works for final deployments, but it means edits on the host
    # during development won't update the files inside the container.
    #

# -----------------------------------------------------
# -----------------------------------------------------
# Start a new client.
#[user@desktop]

    source "${HOME}/aglais.env"

    agclient red

    >   ---- ---- ----
    >   File [agclient]
    >   Path [/var/local/projects/WFAU/gaia-dmp/github-zrq/bin]
    >   ---- ---- ----
    >   Cloud name  [iris-gaia-red]
    >   Client name [ansibler-red]
    >   ---- ---- ----
    >   ....
    >   ....


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    /deployments/openstack/bin/delete-all.sh \
        "${cloudname:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Create everything.
#[root@ansibler]

    ansible-playbook \
        --inventory 'bootstrap,' \
        '/deployments/cluster-api/bootstrap/ansible/00-create-all.yml'

    >   ....
    >   ....
    >   PLAY RECAP *********************************************************************
    >   bootstrap                  : ok=57   changed=45   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   localhost                  : ok=35   changed=26   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Check our work cluster status.
#[root@ansibler]

    source /deployments/cluster-api/bootstrap/ansible/files/aglais/bin/loadconfig

    kubectl \
        --kubeconfig "${workclusterconf:?}" \
        cluster-info

    >   Kubernetes control plane is running at https://128.232.226.219:6443
    >   CoreDNS is running at https://128.232.226.219:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy


    kubectl \
        --kubeconfig "${workclusterconf:?}" \
        --output yaml \
        version

    >   clientVersion:
    >     buildDate: "2023-05-18T00:00:00Z"
    >     compiler: gc
    >     gitCommit: e770bdbb87cccdc2daa790ecd69f40cf4df3cc9d
    >     gitTreeState: archive
    >     gitVersion: v1.25.10
    >     goVersion: go1.19.9
    >     major: "1"
    >     minor: "25"
    >     platform: linux/amd64
    >   kustomizeVersion: v4.5.7
    >   serverVersion:
    >     buildDate: "2022-11-09T13:29:58Z"
    >     compiler: gc
    >     gitCommit: 872a965c6c6526caa949f0c6ac028ef7aff3fb78
    >     gitTreeState: clean
    >     gitVersion: v1.25.4
    >     goVersion: go1.19.3
    >     major: "1"
    >     minor: "25"
    >     platform: linux/amd64


# -----------------------------------------------------
# Deploy our gaia-dmp Helm chart.
#[root@ansibler]

    helm \
        dependency build \
            --kubeconfig "${workclusterconf:?}" \
            '/deployments/cluster-api/bootstrap/helm/gaia-dmp'

    >   Saving 2 charts
    >   Deleting outdated charts


    ls -al /deployments/cluster-api/bootstrap/helm/gaia-dmp

    >   ....
    >   -rw-r--r--. 1 root root  288 Sep 19 12:08 Chart.lock
    >   -rw-r--r--. 1 root root 1462 Sep 19 11:55 Chart.yaml
    >   drwxr-xr-x. 2 root root   80 Sep 19 12:08 charts
    >   drwxr-xr-x. 4 root root   80 Sep 19 11:55 subcharts
    >   drwxr-xr-x. 2 root root   60 Sep 19 11:55 templates
    >   -rw-r--r--. 1 root root  906 Sep 19 11:55 values.yaml


    ls -al /deployments/cluster-api/bootstrap/helm/gaia-dmp/charts

    >   ....
    >   -rw-r--r--. 1 root root  964 Sep 19 12:08 dashboard-admin-0.0.1.tgz
    >   -rw-r--r--. 1 root root 3466 Sep 19 12:08 gaia-dmp-0.0.1.tgz

    #
    # So Helm has created a tar.gz of the charts in 'subcharts' and copied them into the 'charts' directory.
    #

    helm \
        upgrade \
            --wait \
            --kubeconfig "${workclusterconf:?}" \
            'gaia-dmp' \
            '/deployments/cluster-api/bootstrap/helm/gaia-dmp' \
            --install

    >   Release "gaia-dmp" does not exist. Installing it now.
    >   Error: An error occurred while checking for chart dependencies. You may need to run `helm dependency build` to fetch missing dependencies: found in Chart.yaml, but missing in charts/ directory: dashboard, zeppelin

    #
    # OK - dashboard in my fault.
    # The directory was 'dashboard' but the chart name is 'dashboard-admin'.
    # No idea why zeppelin failed.
    #


# -----------------------------------------------------
# -----------------------------------------------------
# Delete and create everything.
#[user@desktop]

    source "${HOME}/aglais.env"

    agclient red

        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

        >   ....
        >   ....


        ansible-playbook \
            --inventory 'bootstrap,' \
            '/deployments/cluster-api/bootstrap/ansible/00-create-all.yml'

        >   ....
        >   ....


# -----------------------------------------------------
# Deploy our gaia-dmp Helm chart.
#[root@ansibler]

    ls -al /deployments/cluster-api/bootstrap/helm/gaia-dmp

    >   -rw-r--r--. 1 root root 1498 Sep 19 12:53 Chart.yaml
    >   drwxr-xr-x. 4 root root   80 Sep 19 12:53 subcharts
    >   drwxr-xr-x. 2 root root   60 Sep 19 12:53 templates
    >   -rw-r--r--. 1 root root  906 Sep 19 12:53 values.yaml


    helm \
        dependency build \
            --kubeconfig "${workclusterconf:?}" \
            '/deployments/cluster-api/bootstrap/helm/gaia-dmp'

    >   Saving 2 charts
    >   Deleting outdated charts


    ls -al /deployments/cluster-api/bootstrap/helm/gaia-dmp

    >   -rw-r--r--. 1 root root  322 Sep 19 14:43 Chart.lock
    >   -rw-r--r--. 1 root root 1498 Sep 19 12:53 Chart.yaml
    >   drwxr-xr-x. 2 root root   80 Sep 19 14:43 charts
    >   drwxr-xr-x. 4 root root   80 Sep 19 12:53 subcharts
    >   drwxr-xr-x. 2 root root   60 Sep 19 12:53 templates
    >   -rw-r--r--. 1 root root  906 Sep 19 12:53 values.yaml


    cat /deployments/cluster-api/bootstrap/helm/gaia-dmp/Chart.lock

    >   dependencies:
    >   - name: gaia-dmp-dashboard
    >     repository: file://subcharts/gaia-dmp-dashboard
    >     version: 0.0.1
    >   - name: gaia-dmp-zeppelin
    >     repository: file://subcharts/gaia-dmp-zeppelin
    >     version: 0.0.1
    >   digest: sha256:5f7175dcf5527a07332dd6feb116afcdb178e498dffcc2de19bbf035cb62fc2b
    >   generated: "2023-09-19T14:43:12.0174849Z"


    ls -al /deployments/cluster-api/bootstrap/helm/gaia-dmp/charts

    >   -rw-r--r--. 1 root root  963 Sep 19 14:43 gaia-dmp-dashboard-0.0.1.tgz
    >   -rw-r--r--. 1 root root 3466 Sep 19 14:43 gaia-dmp-zeppelin-0.0.1.tgz


    helm \
        upgrade \
            --wait \
            --kubeconfig "${workclusterconf:?}" \
            'gaia-dmp' \
            '/deployments/cluster-api/bootstrap/helm/gaia-dmp' \
            --install

    >   Release "gaia-dmp" does not exist. Installing it now.
    >   NAME: gaia-dmp
    >   LAST DEPLOYED: Tue Sep 19 14:44:49 2023
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None


# -----------------------------------------------------
# -----------------------------------------------------
# Launch a kubectl proxy.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        ansibler-red \
            bash -c \
                '
                source /deployments/cluster-api/bootstrap/ansible/files/aglais/bin/loadconfig ;\
                kubectl \
                    --kubeconfig "${workclusterconf:?}" \
                    --address 0.0.0.0 \
                    proxy
                '

    >   Starting to serve on [::]:8001


# -----------------------------------------------------
# -----------------------------------------------------
# Generate a dashboard token.
#[root@ansibler]

    source /deployments/cluster-api/bootstrap/ansible/files/aglais/bin/loadconfig

    kubectl \
        --kubeconfig "${workclusterconf:?}" \
        --namespace "gaia-dmp" \
        create token \
            "dashboard-admin-account"

    >   ................

# -----------------------------------------------------
# -----------------------------------------------------
# Launch browser pointed at the dashboard.
#[user@desktop]

    firefox \
        --new-window \
        'http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:https/proxy/#/login' \
        &

    >   ....
    >   ....

# -----------------------------------------------------
# Launch browser pointed at Zeppelin.
#[user@desktop]

    firefox \
        --new-window \
        'http://localhost:8001/api/v1/namespaces/default/services/http:zeppelin-server:http/proxy/#/' \
        &

    >   ....
    >   "services \"zeppelin-server\" not found"
    >   ....

    #
    # Yay - it works :-)
    #











