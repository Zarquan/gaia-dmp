#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Clean deploy on red to test everything.

    Result:

        Success.
        Setting the password will generate a new hash.
        Leaving everything else unchanged.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase=arcus
    cloudname=iris-gaia-red
    configname=zeppelin-26.43-spark-3.26.43


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   real    41m37.162s
    >   user    14m52.149s
    >   sys     2m55.689s


# -----------------------------------------------------
# Create test users with specific fields.
#[root@ansibler]

    cat > "/tmp/test-user.yml" << EOF
testers:
  - name: "$(pwgen 8 1)"
    type: "test"
    role: "user"
    publickey: "my-key"
    password:  "my-pass"
    passhash:  "my-hash"
    data:
      size: 120
      uuid: "my-data-uuid"
EOF

    source /deployments/zeppelin/bin/create-user-tools.sh

    createyamlusers "/tmp/test-user.yml" "testers" \
    | tee /tmp/tester.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "Shooji0u",
    >           "type": "test",
    >           "publickey": "my-key",
    >           "linuxuid": "30002",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: adduser [Shooji0u] done",
    >               "PASS: mkdir [/home/Shooji0u/.ssh] done",
    >               "PASS: adding public key for [zepelin] done",
    >               "PASS: adding public key for [Shooji0u] done"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "Shooji0u",
    >           "type": "test",
    >           "role": "user",
    >           "password": "my-pass",
    >           "passhash": "$shiro1$SHA-256$500000$9SHGyX60I2CE+ZeW4Y5wsg==$j3X3puX91YICeI/Sp2mlwxRpzl85rha305kThb/dJ3g=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/Shooji0u",
    >           "owner": "Shooji0u",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/Shooji0u] done",
    >               "PASS: hdfs chown [/albert/Shooji0u] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "Shooji0u",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [Shooji0u] done",
    >               "PASS: Clone done [2GRTQZFUM][/Users/Shooji0u/examples/1. Start here]",
    >               "PASS: Clone done [2GRA39HCN][/Users/Shooji0u/examples/2. Data holdings]",
    >               "PASS: Clone done [2GQ6WMH9W][/Users/Shooji0u/examples/3. Source counts over the sky]",
    >               "PASS: Clone done [2GSNYBDWB][/Users/Shooji0u/examples/4. Mean proper motions over the sky]",
    >               "PASS: Clone done [2H2YRJCKM][/Users/Shooji0u/examples/5. Working with Gaia XP spectra]",
    >               "PASS: Clone done [2GZME59KY][/Users/Shooji0u/examples/6. Working with cross-matched surveys]",
    >               "PASS: Clone done [2GQDKZ59J][/Users/Shooji0u/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
    >               "PASS: Clone done [2GVXKC266][/Users/Shooji0u/examples/8. Tips and tricks]"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }


# -----------------------------------------------------
# Create test users with specific fields.
#[root@ansibler]

    cat > "/tmp/aaaa.yml" << EOF
testers:
  - name: "aaaa"
    password:  "my-pass"
    passhash:  "my-hash"
EOF

    source /deployments/zeppelin/bin/create-user-tools.sh

    createyamlusers "/tmp/aaaa.yml" "testers" \
    | tee /tmp/tester.json | jq '.'


    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "aaaa",
    >           "type": "test",
    >           "linuxuid": "30003",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: adduser [aaaa] done",
    >               "PASS: mkdir [/home/aaaa/.ssh] done",
    >               "PASS: adding public key for [zepelin] done",
    >               "SKIP: adding public key for [aaaa] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "aaaa",
    >           "type": "test",
    >           "role": "user",
    >           "password": "my-pass",
    >           "passhash": "$shiro1$SHA-256$500000$bgwwmWfhXl9iUFrLEQohew==$KSFI+h8DNlNYkiB4/GeCSWWUdF0zg6pdszqiz/EB+NU=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           ....
    >         },
    >         "notebooks": {
    >           "user": "aaaa",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [aaaa] done",
    >               ....
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

    #
    # Key things:
    # passgen skipped (password gven)
    # passhash ignored
    #   new hash generated
    #   database insert
    # notebooks cloned
    #


    createyamlusers "/tmp/aaaa.yml" "testers" \
    | tee /tmp/tester.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "aaaa",
    >           "type": "test",
    >           "linuxuid": "30004",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: adduser [aaaa] skipped (done)",
    >               "SKIP: mkdir [/home/aaaa/.ssh] skipped (done)",
    >               "SKIP: adding public key for [zeppelin] skipped (done)",
    >               "SKIP: adding public key for [aaaa] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "aaaa",
    >           "type": "test",
    >           "role": "user",
    >           "password": "my-pass",
    >           "passhash": "$shiro1$SHA-256$500000$2rCyE6bXGx+nnzCM4iMy9g==$xA1FlDkIvr6k8VaFw/VYQR9aew/goIC4IWJytKfr4+o=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           ....
    >         },
    >         "notebooks": {
    >           "user": "aaaa",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [aaaa] done",
    >               "SKIP: Examples found [8]"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

    #
    # Key things:
    # adduser skipped (already done)
    # passgen skipped (password gven)
    # passhash ignored
    #   new hash generated
    #       hash changes because salt changes
    #   database insert
    # notebooks skipped (found)
    #

    # Change the password
    cat > "/tmp/aaaa.yml" << EOF
testers:
  - name: "aaaa"
    password:  "my-new-pass"
    passhash:  "my-hash"
EOF

    createyamlusers "/tmp/aaaa.yml" "testers" \
    | tee /tmp/tester.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "aaaa",
    >           "type": "test",
    >           "home": "/home/aaaa",
    >           "publickey": "",
    >           "linuxuid": "30004",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: adduser [aaaa] skipped (done)",
    >               "SKIP: mkdir [/home/aaaa/.ssh] skipped (done)",
    >               "SKIP: adding public key for [zeppelin] skipped (done)",
    >               "SKIP: adding public key for [aaaa] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "aaaa",
    >           "type": "test",
    >           "role": "user",
    >           "password": "my-new-pass",
    >           "passhash": "$shiro1$SHA-256$500000$l4ibu6Wn69HuniyQG4A/0w==$lNMnSP5dXDUdO+rDgM3qawcqjyGer/aSUNiuq375G3M=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           ....
    >         },
    >         "notebooks": {
    >           "user": "aaaa",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [aaaa] done",
    >               "SKIP: Examples found [8]"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

    #
    # Key things:
    # adduser skipped (already done)
    # ssh key skipped (no key given)
    # passgen skipped (password gven)
    # passhash ignored
    #   new hash generated
    #       hash changes because salt changes
    #   database insert
    # notebooks skipped (found)
    #


    # Password only
    cat > "/tmp/bbbb.yml" << EOF
testers:
  - name: "bbbb"
    password:  "my-new-pass"
EOF

    createyamlusers "/tmp/bbbb.yml" "testers" \
    | tee /tmp/tester.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "bbbb",
    >           "type": "test",
    >           "home": "/home/bbbb",
    >           "publickey": "",
    >           "linuxuid": "30004",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: adduser [bbbb] done",
    >               "PASS: mkdir [/home/bbbb/.ssh] done",
    >               "PASS: adding public key for [zepelin] done",
    >               "SKIP: adding public key for [bbbb] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "bbbb",
    >           "type": "test",
    >           "role": "user",
    >           "password": "my-new-pass",
    >           "passhash": "$shiro1$SHA-256$500000$Zq8DHEPDijTeL3iQIYtekg==$TVm2zAHFfjvgzl7ecDUyoHxikdRX9XdcWepW29+fXYI=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/bbbb",
    >           "owner": "bbbb",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/bbbb] done",
    >               "PASS: hdfs chown [/albert/bbbb] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "bbbb",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [bbbb] done",
    >               "PASS: Clone done [2GRTQZFUM][/Users/bbbb/examples/1. Start here]",
    >               "PASS: Clone done [2GRA39HCN][/Users/bbbb/examples/2. Data holdings]",
    >               "PASS: Clone done [2GQ6WMH9W][/Users/bbbb/examples/3. Source counts over the sky]",
    >               "PASS: Clone done [2GSNYBDWB][/Users/bbbb/examples/4. Mean proper motions over the sky]",
    >               "PASS: Clone done [2H2YRJCKM][/Users/bbbb/examples/5. Working with Gaia XP spectra]",
    >               "PASS: Clone done [2GZME59KY][/Users/bbbb/examples/6. Working with cross-matched surveys]",
    >               "PASS: Clone done [2GQDKZ59J][/Users/bbbb/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
    >               "PASS: Clone done [2GVXKC266][/Users/bbbb/examples/8. Tips and tricks]"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

    #
    # Key things:
    # adduser done
    #   new linuxuid
    #   ssh key skipped (no key given)
    # passgen skipped (password gven)
    #   new hash generated
    #   database insert
    # notebooks cloned
    #


    # Passhash only
    cat > "/tmp/cccc.yml" << EOF
testers:
  - name: "cccd"
    passhash:  "my-pass-hash"
EOF

    createyamlusers "/tmp/cccc.yml" "testers" \
    | tee /tmp/tester.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "cccd",
    >           "type": "test",
    >           "linuxuid": "30006",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: adduser [cccd] done",
    >               "PASS: mkdir [/home/cccd/.ssh] done",
    >               "PASS: adding public key for [zepelin] done",
    >               "SKIP: adding public key for [cccd] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "cccd",
    >           "type": "test",
    >           "role": "user",
    >           "password": "",
    >           "passhash": "my-pass-hash",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (hash)",
    >               "SKIP: hashpass skipped (done)",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/cccd",
    >           "owner": "cccd",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/cccd] done",
    >               "PASS: hdfs chown [/albert/cccd] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "cccd",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: Notebooks skipped - null password"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

    #
    # Key things:
    # adduser done
    #   new linuxuid
    # passgen  skipped (hash gven)
    # passhash skipped (hash gven)
    #   database insert
    # notebooks skipped (no password)
    #


# -----------------------------------------------------
# Convert the JSON output back into a YAML entry.
#[root@ansibler]

    jq '
        {
        users: [
            .users[] |
                {
                name:      .linuxuser.name,
                type:      .linuxuser.type,
                publickey: (.linuxuser.publickey // ""),
                role:      .shirouser.role,
                passhash:  .shirouser.passhash
                }
            ]
        }
        ' /tmp/tester.json \
    | yq -P


# -----------------------------------------------------
# Create a single user.
#[root@ansibler]

    cat > "/tmp/users.yml" << EOF
users:
  - name:     "dddd"
    password: "my-pass"
EOF

    createyamlusers "/tmp/users.yml" "users" \
    | tee /tmp/output.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "dddd",
    >           "type": "test",
    >           "linuxuid": "30007",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: adduser [dddd] done",
    >               "PASS: mkdir [/home/dddd/.ssh] done",
    >               "PASS: adding public key for [zepelin] done",
    >               "SKIP: adding public key for [dddd] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "dddd",
    >           "type": "test",
    >           "role": "user",
    >           "password": "my-pass",
    >           "passhash": "$shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/dddd",
    >           "owner": "dddd",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/dddd] done",
    >               "PASS: hdfs chown [/albert/dddd] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "dddd",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [dddd] done",
    >               "PASS: Clone done [2GRTQZFUM][/Users/dddd/examples/1. Start here]",
    >               "PASS: Clone done [2GRA39HCN][/Users/dddd/examples/2. Data holdings]",
    >               "PASS: Clone done [2GQ6WMH9W][/Users/dddd/examples/3. Source counts over the sky]",
    >               "PASS: Clone done [2GSNYBDWB][/Users/dddd/examples/4. Mean proper motions over the sky]",
    >               "PASS: Clone done [2H2YRJCKM][/Users/dddd/examples/5. Working with Gaia XP spectra]",
    >               "PASS: Clone done [2GZME59KY][/Users/dddd/examples/6. Working with cross-matched surveys]",
    >               "PASS: Clone done [2GQDKZ59J][/Users/dddd/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
    >               "PASS: Clone done [2GVXKC266][/Users/dddd/examples/8. Tips and tricks]"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

# -----------------------------------------------------
# Convert the output into YAML.
#[root@ansibler]

    jq '
        {
        users: [
            .users[] |
                {
                name:      .linuxuser.name,
                type:      (.linuxuser.type // ""),
                linuxuid:  (.linuxuser.linuxuid // ""),
                publickey: (.linuxuser.publickey // ""),
                role:      (.shirouser.role // ""),
                password:  (.shirouser.pasword // ""),
                passhash:  (.shirouser.passhash // ""),
                }
            ]
        }
        ' /tmp/output.json \
    | yq -P \
    | tee /tmp/output.yml

    >   users:
    >     - name: dddd
    >       type: test
    >       linuxuid: "30007"
    >       publickey: ""
    >       role: user
    >       password: ""
    >       passhash: $shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=

    # Note - input had password output has passhash


# -----------------------------------------------------
# Start with the output and add another user.
#[root@ansibler]

    cp /tmp/output.yml /tmp/users.yml

    cat >> "/tmp/users.yml" << EOF
  - name:     "eeee"
    password: "my-pass"
EOF

    cat /tmp/users.yml

    >   users:
    >     - name: dddd
    >       type: test
    >       linuxuid: "30007"
    >       publickey: ""
    >       role: user
    >       password: ""
    >       passhash: $shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=
    >     - name:     "eeee"
    >       password: "my-pass"

    createyamlusers "/tmp/users.yml" \
    | tee /tmp/output.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "dddd",
    >           "type": "test",
    >           "linuxuid": "30007",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: adduser [dddd] skipped (done)",
    >               "SKIP: mkdir [/home/dddd/.ssh] skipped (done)",
    >               "SKIP: adding public key for [zeppelin] skipped (done)",
    >               "SKIP: adding public key for [dddd] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "dddd",
    >           "type": "test",
    >           "role": "user",
    >           "password": "",
    >           "passhash": "$shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (hash)",
    >               "SKIP: hashpass skipped (done)",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/dddd",
    >           "owner": "dddd",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/dddd] done",
    >               "PASS: hdfs chown [/albert/dddd] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "dddd",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: Notebooks skipped - null password"
    >             ]
    >           }
    >         }
    >       },
    >       {
    >         "linuxuser": {
    >           "name": "eeee",
    >           "type": "test",
    >           "linuxuid": "30008",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: adduser [eeee] done",
    >               "PASS: mkdir [/home/eeee/.ssh] done",
    >               "PASS: adding public key for [zepelin] done",
    >               "SKIP: adding public key for [eeee] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "eeee",
    >           "type": "test",
    >           "role": "user",
    >           "password": "my-pass",
    >           "passhash": "$shiro1$SHA-256$500000$EVB/e0D5JG8RXO72ytsTZQ==$KMX97AzhSUhJlzwSEpHmbb5384QSiJgcUSRanySvBBk=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/eeee",
    >           "owner": "eeee",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/eeee] done",
    >               "PASS: hdfs chown [/albert/eeee] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "eeee",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [eeee] done",
    >               "PASS: Clone done [2GRTQZFUM][/Users/eeee/examples/1. Start here]",
    >               "PASS: Clone done [2GRA39HCN][/Users/eeee/examples/2. Data holdings]",
    >               "PASS: Clone done [2GQ6WMH9W][/Users/eeee/examples/3. Source counts over the sky]",
    >               "PASS: Clone done [2GSNYBDWB][/Users/eeee/examples/4. Mean proper motions over the sky]",
    >               "PASS: Clone done [2H2YRJCKM][/Users/eeee/examples/5. Working with Gaia XP spectra]",
    >               "PASS: Clone done [2GZME59KY][/Users/eeee/examples/6. Working with cross-matched surveys]",
    >               "PASS: Clone done [2GQDKZ59J][/Users/eeee/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
    >               "PASS: Clone done [2GVXKC266][/Users/eeee/examples/8. Tips and tricks]"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

    # user eeee
    #   passgen  skipped (no pass given)
    #   passhash skipped (hash given)
    #   notebooks skipped (no pass given)
    # user dddd
    #   adduser done
    #   passgen  skipped (pass given)
    #   passhash done
    #   notebooks done

# -----------------------------------------------------
# Convert the output into YAML.
#[root@ansibler]

    json-yaml-users()
        {
        local jsonfile=${1:-'input JSON filename required'}
        local yamlfile=${2:-'output YAML filename required'}
        jq '
            {
            users: [
                .users[] |
                    {
                    name:      .linuxuser.name,
                    type:      (.linuxuser.type // ""),
                    role:      (.shirouser.role // ""),
                    linuxuid:  (.linuxuser.linuxuid // ""),
                    publickey: (.linuxuser.publickey // ""),
                    password:  (.shirouser.pasword // ""),
                    passhash:  (.shirouser.passhash // ""),
                    }
                ]
            }
            ' "${jsonfile}" \
        | yq -P \
        | tee "${yamlfile}"
        }

    json-yaml-users \
        /tmp/output.json \
        /tmp/output.yml


    >   users:
    >     - name: dddd
    >       type: test
    >       linuxuid: "30007"
    >       publickey: ""
    >       role: user
    >       password: ""
    >       passhash: $shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=
    >     - name: eeee
    >       type: test
    >       linuxuid: "30008"
    >       publickey: ""
    >       role: user
    >       password: ""
    >       passhash: $shiro1$SHA-256$500000$EVB/e0D5JG8RXO72ytsTZQ==$KMX97AzhSUhJlzwSEpHmbb5384QSiJgcUSRanySvBBk=


# -----------------------------------------------------
# Change password for eeee.
#[root@ansibler]

    yq '.users.[] |= (
        with (
            select(.name == "eeee") ;
                .password= "new-pass"
            )
        )
        ' /tmp/output.yml \
    | tee /tmp/input.yml

    >   users:
    >     - name: dddd
    >       type: test
    >       linuxuid: "30007"
    >       publickey: ""
    >       role: user
    >       password: ""
    >       passhash: $shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=
    >     - name: eeee
    >       type: test
    >       linuxuid: "30008"
    >       publickey: ""
    >       role: user
    >       password: "new-pass"
    >       passhash: $shiro1$SHA-256$500000$EVB/e0D5JG8RXO72ytsTZQ==$KMX97AzhSUhJlzwSEpHmbb5384QSiJgcUSRanySvBBk=

    createyamlusers "/tmp/input.yml" \
    | tee /tmp/output.json | jq '.'

    >   {
    >     "users": [
    >       {
    >         "linuxuser": {
    >           "name": "dddd",
    >           "type": "test",
    >           "linuxuid": "30007",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: adduser [dddd] skipped (done)",
    >               "SKIP: mkdir [/home/dddd/.ssh] skipped (done)",
    >               "SKIP: adding public key for [zeppelin] skipped (done)",
    >               "SKIP: adding public key for [dddd] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "dddd",
    >           "type": "test",
    >           "role": "user",
    >           "password": "",
    >           "passhash": "$shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (hash)",
    >               "SKIP: hashpass skipped (given)",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/dddd",
    >           "owner": "dddd",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/dddd] done",
    >               "PASS: hdfs chown [/albert/dddd] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "dddd",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: Notebooks skipped - null password"
    >             ]
    >           }
    >         }
    >       },
    >       {
    >         "linuxuser": {
    >           "name": "eeee",
    >           "type": "test",
    >           "linuxuid": "30008",
    >           "debug": {
    >             "script": "create-linux-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: adduser [eeee] skipped (done)",
    >               "SKIP: mkdir [/home/eeee/.ssh] skipped (done)",
    >               "SKIP: adding public key for [zeppelin] skipped (done)",
    >               "SKIP: adding public key for [eeee] skipped (no key)"
    >             ]
    >           }
    >         },
    >         "shirouser": {
    >           "name": "eeee",
    >           "type": "test",
    >           "role": "user",
    >           "password": "new-pass",
    >           "passhash": "$shiro1$SHA-256$500000$SQbueMRc7Vr07vmGrivhTA==$gIhtin1gFsMCrPpgLA/Vtrjq7zSDbPGzs3iBuGK/5Rs=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (given)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         "hdfsspace": {
    >           "path": "/albert/eeee",
    >           "owner": "eeee",
    >           "group": "supergroup",
    >           "debug": {
    >             "script": "create-hdfs-space.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: hdfs mkdir [/albert/eeee] done",
    >               "PASS: hdfs chown [/albert/eeee] done"
    >             ]
    >           }
    >         },
    >         "notebooks": {
    >           "user": "eeee",
    >           "debug": {
    >             "script": "clone-notebooks.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "PASS: Login [eeee] done",
    >               "SKIP: Examples found [8]"
    >             ]
    >           }
    >         }
    >       }
    >     ]
    >   }

    #
    # user dddd
    #   "SKIP: adduser [dddd] skipped (done)",
    #   "SKIP: passgen skipped (none)",
    #   "SKIP: hashpass skipped (given)",
    # user eeee
    #   "SKIP: adduser [eeee] skipped (done)",
    #   "SKIP: passgen skipped (given)",
    #   "PASS: hashpass done",
    #

    #
    # Setting the password will generate a new hash.
    # Leaving everything else unchanged.
    #


# -----------------------------------------------------
# Test with a passphrase.
# https://www.useapassphrase.com/
#[root@ansibler]

    yq '.users.[] |= (
        with (
            select(.name == "eeee") ;
                .password= "outbound shack gauntlet scuba"
            )
        )
        ' /tmp/output.yml \
    | tee /tmp/input.yml

    createyamlusers "/tmp/input.yml" \
    | tee /tmp/output.json | jq '.'


    >   {
    >     "users": [
    >       {
    >         ....
    >         "shirouser": {
    >           "name": "eeee",
    >           "type": "test",
    >           "role": "user",
    >           "password": "outbound shack gauntlet scuba",
    >           "passhash": "$shiro1$SHA-256$500000$JywMewwpvQv2slTXmdmBEA==$u+ESSZtHZAn3MoCWl82JgB8p+/od1kMQKklCTYc+Rik=",
    >           "debug": {
    >             "script": "create-shiro-user.sh",
    >             "result": "PASS",
    >             "messages": [
    >               "SKIP: passgen skipped (done)",
    >               "PASS: hashpass done",
    >               "PASS: database INSERT done"
    >             ]
    >           }
    >         },
    >         ....
    >       }
    >     ]
    >   }


    json-yaml-users \
        /tmp/output.json \
        /tmp/output.yml

    >   users:
    >     - name: dddd
    >       type: test
    >       role: user
    >       linuxuid: "30007"
    >       publickey: ""
    >       password: ""
    >       passhash: $shiro1$SHA-256$500000$OT1TRjhmPSeqmrBq3Nd0fw==$XaQsuaKtG/7FCq9RDAAmNCyfAe68TeV/ZcKocnOS2aQ=
    >     - name: eeee
    >       type: test
    >       role: user
    >       linuxuid: "30008"
    >       publickey: ""
    >       password: ""
    >       passhash: $shiro1$SHA-256$500000$JywMewwpvQv2slTXmdmBEA==$u+ESSZtHZAn3MoCWl82JgB8p+/od1kMQKklCTYc+Rik=


