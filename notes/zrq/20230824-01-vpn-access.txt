#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: []
#

    Target:

        Use a vpn client in a container to connect to Edinburgh.

    Result:

        Some success with the openfortivpn client.
        https://github.com/adrienverge/openfortivpn

        Packaged with HAProxy in a container.
        https://github.com/jeffre/openfortivpn-haproxy

        Success:

            We can connect to Edinburgh using the openfortivpn client in a virtual machine.
            We can connect to Edinburgh using the openfortivpn client in a Docker (root) container.
            Issues using the openfortivpn client in a Podman (rootless) container.


# -----------------------------------------------------
# Allow containers to use devices.
#[user@desktop]

    sudo \
        setsebool -P container_use_devices 1


# -----------------------------------------------------
# Launch a new container.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --device /dev/ppp \
        --device /dev/net/tun \
        --cap-add NET_ADMIN \
        --security-opt "label=disable" \
        fedora \
            bash

    >   ....
    >   ....



# -----------------------------------------------------
# Install the openfortivpn client.
#[root@container]

    dnf -y install openfortivpn

    >   ....
    >   ....


# -----------------------------------------------------
# Try accessing a protected page.
#[root@container]

    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'http://www.insurance.finance.ed.ac.uk'

    >   curl: (28) Failed to connect to www.insurance.finance.ed.ac.uk port 80 after 128913 ms: Couldn't connect to server


# -----------------------------------------------------
# Configure the openfortivpn client.
#[root@container]

    cat > /etc/openfortivpn/my-config << EOF
host = remote.net.ed.ac.uk
port = 8443
username = dmorris8
password = ########
set-dns = 1
set-routes = 1
EOF


    openfortivpn \
        --config /etc/openfortivpn/my-config

    >   ....
    >   Couldn't open the /dev/ppp device: No such file or directory
    >   /usr/sbin/pppd: You need to create the /dev/ppp device node by
    >   executing the following command as root:
    >   	mknod /dev/ppp c 108 0
    >   ....


    mknod /dev/ppp c 108 0

    >   mknod: /dev/ppp: Operation not permitted

name: dmorris8
pass: ########
pass: ########


# -----------------------------------------------------
# -----------------------------------------------------

    Try in a DigitalOcean VM.

    ssh root@138.68.191.125

    dnf -y install openfortivpn

    cat > /etc/openfortivpn/my-config << EOF
host = remote.net.ed.ac.uk
port = 8443
username = dmorris8
password = ########
set-dns = 1
set-routes = 1
EOF

    openfortivpn \
        --config /etc/openfortivpn/my-config

    >   ....
    >   Couldn't open the /dev/ppp device: No such device or address
    >   /usr/sbin/pppd: Please load the ppp_generic kernel module.
    >   
    >   ERROR:  read: Input/output error
    >   INFO:   Cancelling threads...
    >   INFO:   Cleanup, joining threads...
    >   ERROR:  pppd: The kernel does not support PPP, for example, the PPP kernel driver is not included or cannot be loaded.
    >   ....


    modprobe ppp_generic

    >   modprobe: FATAL: Module ppp_generic not found in directory /lib/modules/6.2.9-300.fc38.x86_64


    dnf install kernel-modules

    >   ....
    >   ....


    modprobe ppp_generic

    >   modprobe: FATAL: Module ppp_generic not found in directory /lib/modules/6.2.9-300.fc38.x86_64


    reboot

    >   ....
    >   ....


    ssh root@138.68.191.125

    modprobe ppp_generic

    openfortivpn \
        --config /etc/openfortivpn/my-config

    >   INFO:   Connected to gateway.
    >   INFO:   Authenticated.
    >   INFO:   Remote gateway has allocated a VPN.
    >   Using interface ppp0
    >   Connect: ppp0 <--> /dev/pts/1
    >   INFO:   Got addresses: [10.65.192.53], ns [129.215.205.191, 129.215.70.239]
    >   INFO:   Negotiation complete.
    >   INFO:   Negotiation complete.
    >   local  IP address 10.65.192.53
    >   remote IP address 169.254.2.1
    >   INFO:   Interface ppp0 is UP.
    >   INFO:   Setting new routes...
    >   ....
    >   ....

    #
    # .. annnnd ssh connection dies.
    #


    ssh root@138.68.191.125

    >   ssh: connect to host 138.68.191.125 port 22: Connection timed out

    #
    # Can't login, because ssh is borken.
    #


# -----------------------------------------------------
# -----------------------------------------------------

    Create a new DigitalOcean VM.

    ssh root@206.189.124.176

    dnf -y install openfortivpn

    dnf -y install kernel-modules

    reboot

    ssh root@206.189.124.176

    lsmod | grep 'ppp'

    modprobe ppp_generic

    lsmod | grep 'ppp'

    >   ppp_generic            57344  0
    >   slhc                   16384  1 ppp_generic

    cat > /etc/openfortivpn/my-config << EOF
host = remote.net.ed.ac.uk
port = 8443
username = dmorris8
password = ########
set-dns = 1
set-routes = 0
EOF

    openfortivpn \
        --config /etc/openfortivpn/my-config

    >   INFO:   Connected to gateway.
    >   INFO:   Authenticated.
    >   INFO:   Remote gateway has allocated a VPN.
    >   Using interface ppp0
    >   Connect: ppp0 <--> /dev/pts/1
    >   INFO:   Got addresses: [10.65.192.11], ns [129.215.205.191, 129.215.70.239]
    >   INFO:   Negotiation complete.
    >   local  IP address 10.65.192.11
    >   remote IP address 169.254.2.1
    >   INFO:   Interface ppp0 is UP.
    >   INFO:   Adding VPN nameservers...
    >   INFO:   Tunnel is up and running.
    >   ....
    >   ....


# -----------------------------------------------------

    Login via ssh.

    ssh root@206.189.124.176


# -----------------------------------------------------
# Add the DNS clients.
#[root@digital-ocean]

    dnf install -y bind-utils

    >   ....
    >   ....


    dig www.insurance.finance.ed.ac.uk

    >   ;; communications error to 129.215.205.191#53: timed out
    >   ;; communications error to 129.215.205.191#53: timed out
    >   ;; communications error to 129.215.205.191#53: timed out
    >   ;; communications error to 129.215.70.239#53: timed out
    >   ....
    >   ....

    >   ....
    >   ;; ANSWER SECTION:
    >   www.insurance.finance.ed.ac.uk.	480 IN	A	10.70.20.247
    >   ....
    >   ....


# -----------------------------------------------------
# Check our routing table.
#[root@digital-ocean]

    ip route

    >   default via 206.189.112.1 dev eth0 proto static metric 100
    >   10.16.0.0/16 dev eth0 proto kernel scope link src 10.16.0.5 metric 100
    >   10.106.0.0/20 dev eth1 proto kernel scope link src 10.106.0.2 metric 101
    >   169.254.2.1 dev ppp0 proto kernel scope link src 10.65.192.11
    >   206.189.112.0/20 dev eth0 proto kernel scope link src 206.189.124.176 metric 100

    ip route del 10.16.0.0/16 dev eth0
    ip route del 10.106.0.0/20 dev eth1

    ip route add 10.0.0.0/8 dev ppp0
    ip route add 129.215.0.0/16 dev ppp0

    ip route

    >   default via 206.189.112.1 dev eth0 proto static metric 100
    >   10.0.0.0/8 dev ppp0 scope link
    >   129.215.0.0/16 dev ppp0 scope link
    >   169.254.2.1 dev ppp0 proto kernel scope link src 10.65.192.11
    >   206.189.112.0/20 dev eth0 proto kernel scope link src 206.189.124.176 metric 100


# -----------------------------------------------------
# Try accessing the protected page.
#[root@digital-ocean]

    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'https://www.insurance.finance.ed.ac.uk'

    >   HTTP/1.1 302 Found
    >   Content-Type: text/html; charset=iso-8859-1
    >   Connection: keep-alive
    >   Date: Thu, 24 Aug 2023 05:24:00 GMT
    >   Server: Apache
    >   Location: https://www.ease.ed.ac.uk/cosign.cgi?cosign-eucsCosign-www.insurance.finance.ed.ac.uk&https://www.insurance.finance.ed.ac.uk/
    >   Set-Cookie: RCKBMHKB=027ff8be59-56fd-481ATXQmJYCJ-E101vxsPm7chGpVTi4uUI4H2BBqVxYHxBp1BmS9wPfDuaTxPJwMKkriY; path=/; SameSite=None; Secure

    #
    # Works ...
    #

    #
    # Can we setup a SOCKS proxy that listens on the 206.189.124.176 interface
    # and routes via the ppp0 interface.
    #
    # openfortivpn-haproxy ?
    # https://github.com/jeffre/openfortivpn-haproxy
    # https://hub.docker.com/r/yoff/openfortivpn
    #
    # https://github.com/adrienverge/openfortivpn
    #
    # White list of routes.
    # https://github.com/adrienverge/openfortivpn/wiki#how-to-add-specific-routes-using-pppd
    #

    #
    # We want to be able to tell Firefox to use the proxy
    # for a specific set of domain names.
    #
    # Firefox connects to the proxy, which makes
    # a request via the VPN.
    #

    #
    # We want to be able to route Openstack API calls via the proxy and VPN.
    # Starting with our client container.
    # Nice if we could have the VPN in a container.
    # Otherwise, a separate VM running 'in the cloud'.
    #



# -----------------------------------------------------
# Try the ready packaged container in Docker rather than Podman.
# https://hub.docker.com/r/andreipoe/openfortivpn
#[user@desktop]

    cat > /tmp/openfortivpn.config << EOF
host = remote.net.ed.ac.uk
port = 8443
username = dmorris8
password = ########
set-dns = 0
set-routes = 0
EOF

    docker \
        run \
        --rm \
        --tty \
        --interactive \
        --device /dev/ppp \
        --cap-add NET_ADMIN \
        -p '1111:1111' \
        -e 'REMOTE_ADDR=10.70.20.247:443' \
        -v '/tmp/openfortivpn.config:/etc/openfortivpn/config:ro,z' \
        yoff/openfortivpn

    >   INFO:   Connected to gateway.
    >   INFO:   Authenticated.
    >   INFO:   Remote gateway has allocated a VPN.
    >   Using interface ppp0
    >   Connect: ppp0 <--> /dev/pts/1
    >   INFO:   Got addresses: [10.65.192.14], ns [129.215.205.191, 129.215.70.239]
    >   INFO:   negotiation complete
    >   INFO:   negotiation complete
    >   local  IP address 10.65.192.14
    >   remote IP address 192.0.2.1
    >   INFO:   Interface ppp0 is UP.
    >   INFO:   Tunnel is up and running.

    docker ps

    >   CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS          PORTS                                       NAMES
    >   a8d8ceda3e51   yoff/openfortivpn   "/docker-entrypoint.…"   23 seconds ago   Up 22 seconds   0.0.0.0:1111->1111/tcp, :::1111->1111/tcp   ecstatic_chatelet


    docker exec \
        --tty \
        --interactive \
            ecstatic_chatelet \
            bash

    curl \
        --head \
        --verbose \
        --insecure \
        --no-progress-meter \
        'https://127.0.0.1:1111'

    >   *   Trying 127.0.0.1:1111...
    >   * TCP_NODELAY set
    >   * Connected to 127.0.0.1 (127.0.0.1) port 1111 (#0)
    >   * ALPN, offering h2
    >   * ALPN, offering http/1.1
    >   * successfully set certificate verify locations:
    >   *   CAfile: /etc/ssl/certs/ca-certificates.crt
    >     CApath: none
    >   * TLSv1.3 (OUT), TLS handshake, Client hello (1):
    >   
    >   * OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to 127.0.0.1:1111
    >   * Closing connection 0
    >   curl: (35) OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to 127.0.0.1:1111

    #
    # Check the HAProxy config.
    #

    ps -ef

    >   PID   USER     TIME  COMMAND
    >       1 root      0:00 openfortivpn
    >       8 root      0:00 [haproxy]
    >       9 haproxy   0:00 haproxy -f /etc/haproxy/haproxy.cfg
    >      13 root      0:00 /usr/sbin/pppd 115200 :192.0.2.1 noipdefault noaccomp noauth default-asyncmap nopcomp receive-all nodefa
    >      20 root      0:00 bash
    >      28 root      0:00 ps -ef


    cat /etc/haproxy/haproxy.cfg

    >   global
    >           user haproxy
    >           group haproxy
    >           daemon
    >           maxconn 4096
    >   
    >   defaults
    >           mode    tcp
    >           balance leastconn
    >           timeout client      300ms
    >           timeout server      30000ms
    >           timeout tunnel      12h
    >           timeout connect     30000ms
    >           retries 3
    >   
    >   frontend fr_server1
    >           bind 0.0.0.0:1111
    >           default_backend bk_server1
    >   
    >   backend bk_server1
    >           server srv1 10.70.20.247:443 maxconn 2048

    #
    # Check the routing tables.
    #

    ip route

    >   default via 172.17.0.1 dev eth0
    >   172.17.0.0/16 dev eth0 scope link  src 172.17.0.2
    >   192.0.2.1 dev ppp0 scope link  src 10.65.192.14

    #
    # Add a route for the target address.
    #

    ip route add 10.70.20.247 dev ppp0
    ip route

    >   default via 172.17.0.1 dev eth0
    >   10.70.20.247 dev ppp0 scope link
    >   172.17.0.0/16 dev eth0 scope link  src 172.17.0.2
    >   192.0.2.1 dev ppp0 scope link  src 10.65.192.14

    #
    # Try the target again.
    #

    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'https://127.0.0.1:1111'

    >   HTTP/1.1 200 OK
    >   Content-Type: text/html;charset=UTF-8
    >   Connection: keep-alive
    >   Date: Fri, 25 Aug 2023 11:27:59 GMT
    >   Server: Apache
    >   Set-Cookie: ....

    #
    # Yay, works inside the container.
    #

    #
    # Try direct without the HAProxy.
    #

    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'https://10.70.20.247/'

    >   HTTP/1.1 200 OK
    >   Content-Type: text/html;charset=UTF-8
    >   Connection: keep-alive
    >   Date: Fri, 25 Aug 2023 11:30:03 GMT
    >   Server: Apache
    >   Set-Cookie: ....


    #
    # Try using the HAProxy from outside the container.
    #

    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'https://localhost:1111'

    >   HTTP/1.1 200 OK
    >   Content-Type: text/html;charset=UTF-8
    >   Connection: keep-alive
    >   Date: Fri, 25 Aug 2023 11:31:38 GMT
    >   Server: Apache
    >   Set-Cookie: ....



# -----------------------------------------------------
# Try using Podman.
# https://hub.docker.com/r/andreipoe/openfortivpn
#[user@desktop]

    cat > /tmp/openfortivpn.config << EOF
host = remote.net.ed.ac.uk
port = 8443
username = dmorris8
password = ########
set-dns = 0
set-routes = 0
EOF

    podman \
        run \
        --rm \
        --tty \
        --interactive \
        --device /dev/ppp \
        --cap-add NET_ADMIN \
        -p '1111:1111' \
        -e 'REMOTE_ADDR=10.70.20.247:443' \
        -v '/tmp/openfortivpn.config:/etc/openfortivpn/config:ro,z' \
        yoff/openfortivpn

    >   INFO:   Connected to gateway.
    >   INFO:   Authenticated.
    >   INFO:   Remote gateway has allocated a VPN.
    >   Couldn't open the /dev/ppp device: Permission denied
    >   /usr/sbin/pppd: You need to create the /dev/ppp device node by
    >   executing the following command as root:
    >   	mknod /dev/ppp c 108 0
    >   
    >   ERROR:  read: I/O error
    >   INFO:   Cancelling threads...
    >   ERROR:  pppd: The kernel does not support PPP, for example, the PPP kernel driver is not included or cannot be loaded.
    >   INFO:   Terminated pppd.
    >   INFO:   Closed connection to gateway.
    >   INFO:   Logged out.

    #
    # openfortivpn is trying to access /dev/ppp
    # but access to /dev/ppp on the host is limited to root,
    # and root inside the container is not root on the host.
    # (*) which is the whole point of rootless containers.
    #

    ls -al /dev/ppp

    >   crw-------. 1 root root 108, 0 Aug 24 05:51 /dev/ppp

    #
    # If we omit the device reference in the call,
    # openfortivpn tries to access /dev/ppp from
    # inside the container, same problem ..
    #

    podman \
        run \
        --rm \
        --tty \
        --interactive \
        --cap-add NET_ADMIN \
        -p '1111:1111' \
        -e 'REMOTE_ADDR=10.70.20.247:443' \
        -v '/tmp/openfortivpn.config:/etc/openfortivpn/config:ro,z' \
        yoff/openfortivpn

    >   INFO:   Connected to gateway.
    >   INFO:   Authenticated.
    >   INFO:   Remote gateway has allocated a VPN.
    >   Couldn't open the /dev/ppp device: No such file or directory
    >   /usr/sbin/pppd: You need to create the /dev/ppp device node by
    >   executing the following command as root:
    >   	mknod /dev/ppp c 108 0
    >   
    >   ERROR:  read: I/O error
    >   INFO:   Cancelling threads...
    >   ERROR:  pppd: The kernel does not support PPP, for example, the PPP kernel driver is not included or cannot be loaded.
    >   INFO:   Terminated pppd.
    >   INFO:   Closed connection to gateway.
    >   INFO:   Logged out.

    #
    # Summary.
    # The VPN client is designed to create a transparent link
    # from the local network to the remote network.
    # In the process it creates a network device
    # .......
    #

