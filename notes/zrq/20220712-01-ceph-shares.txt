#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Automate creating ceph shares.

    Result:

        Work in progress ...



    testnames=(
        Hamar
        Carclop
        Halda
        Jaden
        Mavaca
        Franilley
        Masonania
        Webbbron
        Granwaler
        )

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase=arcus
    cloudname=iris-gaia-red
    configname=zeppelin-26.43-spark-3.26.43


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

--START--
....
....
--END--


# -----------------------------------------------------
# Create some test users.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    testnames=(
        Hamar
        Carclop
        )

    createarrayusers \
        "${testnames[@]}" \
    | tee /tmp/testusers.json \
    | jq '.'

--START--
{
  "users": [
    {
      "linuxuser": {
        "name": "Hamar",
        "type": "test",
        "linuxuid": "20001",
        "debug": {
          "script": "create-linux-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: adduser [Hamar] done",
            "PASS: mkdir [/home/Hamar/.ssh] done",
            "PASS: adding public key for [zepelin] done",
            "SKIP: adding public key for [Hamar] skipped (no key)"
          ]
        }
      },
      "shirouser": {
        "name": "Hamar",
        "type": "test",
        "role": "user",
        "password": "nongoe1ieChezoPh5voh",
        "passhash": "$shiro1$SHA-256$500000$+edR4a++Ht+1fT0FcPv0RQ==$Wa9yygstbwP7v2GNJs/pdd5twjyJkjlifcPm8b20rrI=",
        "debug": {
          "script": "create-shiro-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: passgen done",
            "PASS: hashpass done",
            "PASS: database INSERT done"
          ]
        }
      },
      "hdfsspace": {
        "path": "/albert/Hamar",
        "owner": "Hamar",
        "group": "supergroup",
        "debug": {
          "script": "create-hdfs-space.sh",
          "result": "PASS",
          "messages": [
            "PASS: hdfs mkdir [/albert/Hamar] done",
            "PASS: hdfs chown [/albert/Hamar] done"
          ]
        }
      },
      "notebooks": {
        "user": "Hamar",
        "debug": {
          "script": "clone-notebooks.sh",
          "result": "PASS",
          "messages": [
            "SKIP: Notebooks skipped - null password"
          ]
        }
      }
    },
    {
      "linuxuser": {
        "name": "Carclop",
        "type": "test",
        "linuxuid": "20002",
        "debug": {
          "script": "create-linux-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: adduser [Carclop] done",
            "PASS: mkdir [/home/Carclop/.ssh] done",
            "PASS: adding public key for [zepelin] done",
            "SKIP: adding public key for [Carclop] skipped (no key)"
          ]
        }
      },
      "shirouser": {
        "name": "Carclop",
        "type": "test",
        "role": "user",
        "password": "Eepheeb3iezoorohph3g",
        "passhash": "$shiro1$SHA-256$500000$cSSLEivWu8xq/WAZQJPfkw==$0JSvRrWCjNfhL7TYRp4jib9N2ZdB6FPHhYfPBXHVcpk=",
        "debug": {
          "script": "create-shiro-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: passgen done",
            "PASS: hashpass done",
            "PASS: database INSERT done"
          ]
        }
      },
      "hdfsspace": {
        "path": "/albert/Carclop",
        "owner": "Carclop",
        "group": "supergroup",
        "debug": {
          "script": "create-hdfs-space.sh",
          "result": "PASS",
          "messages": [
            "PASS: hdfs mkdir [/albert/Carclop] done",
            "PASS: hdfs chown [/albert/Carclop] done"
          ]
        }
      },
      "notebooks": {
        "user": "Carclop",
        "debug": {
          "script": "clone-notebooks.sh",
          "result": "PASS",
          "messages": [
            "SKIP: Notebooks skipped - null password"
          ]
        }
      }
    }
  ]
}
--END--

    #
    # Fail - create-shiro created a new password, but it didn't get passed to clone-notebooks
    # bugfix ....
    # Try againa
    #

    source /deployments/zeppelin/bin/create-user-tools.sh

    testnames=(
        Halda
        Jaden
        )

    createarrayusers \
        "${testnames[@]}" \
    | tee /tmp/testusers.json \
    | jq '.'

--START--
{
  "users": [
    {
      "linuxuser": {
        "name": "Halda",
        "type": "test",
        "linuxuid": "20003",
        "debug": {
          "script": "create-linux-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: adduser [Halda] done",
            "PASS: mkdir [/home/Halda/.ssh] done",
            "PASS: adding public key for [zepelin] done",
            "SKIP: adding public key for [Halda] skipped (no key)"
          ]
        }
      },
      "hdfsspace": {
        "path": "/albert/Halda",
        "owner": "Halda",
        "group": "supergroup",
        "debug": {
          "script": "create-hdfs-space.sh",
          "result": "PASS",
          "messages": [
            "PASS: hdfs mkdir [/albert/Halda] done",
            "PASS: hdfs chown [/albert/Halda] done"
          ]
        }
      },
      "shirouser": {
        "name": "Halda",
        "type": "test",
        "role": "user",
        "password": "iepheeneex3aapaih2oC",
        "passhash": "$shiro1$SHA-256$500000$kqula/PkGA/KkeYoKKhyxw==$zglkEyvSk7Gx3/fPGiGUJnNKWoWgguMRLsbOALsZQ6A=",
        "debug": {
          "script": "create-shiro-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: passgen done",
            "PASS: hashpass done",
            "PASS: database INSERT done"
          ]
        }
      },
      "notebooks": {
        "user": "Halda",
        "debug": {
          "script": "clone-notebooks.sh",
          "result": "PASS",
          "messages": [
            "PASS: Login [Halda] done",
            "PASS: Clone done [2GRTQZFUM][/Users/Halda/examples/1. Start here]",
            "PASS: Clone done [2GRA39HCN][/Users/Halda/examples/2. Data holdings]",
            "PASS: Clone done [2GQ6WMH9W][/Users/Halda/examples/3. Source counts over the sky]",
            "PASS: Clone done [2GSNYBDWB][/Users/Halda/examples/4. Mean proper motions over the sky]",
            "PASS: Clone done [2H2YRJCKM][/Users/Halda/examples/5. Working with Gaia XP spectra]",
            "PASS: Clone done [2GZME59KY][/Users/Halda/examples/6. Working with cross-matched surveys]",
            "PASS: Clone done [2GQDKZ59J][/Users/Halda/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
            "PASS: Clone done [2GVXKC266][/Users/Halda/examples/8. Tips and tricks]"
          ]
        }
      }
    },
    {
      "linuxuser": {
        "name": "Jaden",
        "type": "test",
        "linuxuid": "20004",
        "debug": {
          "script": "create-linux-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: adduser [Jaden] done",
            "PASS: mkdir [/home/Jaden/.ssh] done",
            "PASS: adding public key for [zepelin] done",
            "SKIP: adding public key for [Jaden] skipped (no key)"
          ]
        }
      },
      "hdfsspace": {
        "path": "/albert/Jaden",
        "owner": "Jaden",
        "group": "supergroup",
        "debug": {
          "script": "create-hdfs-space.sh",
          "result": "PASS",
          "messages": [
            "PASS: hdfs mkdir [/albert/Jaden] done",
            "PASS: hdfs chown [/albert/Jaden] done"
          ]
        }
      },
      "shirouser": {
        "name": "Jaden",
        "type": "test",
        "role": "user",
        "password": "oev4Fuu8ouxahpie7Sho",
        "passhash": "$shiro1$SHA-256$500000$CP2kSSjVuXLLZUTgRxHobA==$J7B59jBA1xs4nW59cgAAfkKzvr7TVVg33xEYVNFucGQ=",
        "debug": {
          "script": "create-shiro-user.sh",
          "result": "PASS",
          "messages": [
            "PASS: passgen done",
            "PASS: hashpass done",
            "PASS: database INSERT done"
          ]
        }
      },
      "notebooks": {
        "user": "Jaden",
        "debug": {
          "script": "clone-notebooks.sh",
          "result": "PASS",
          "messages": [
            "PASS: Login [Jaden] done",
            "PASS: Clone done [2GRTQZFUM][/Users/Jaden/examples/1. Start here]",
            "PASS: Clone done [2GRA39HCN][/Users/Jaden/examples/2. Data holdings]",
            "PASS: Clone done [2GQ6WMH9W][/Users/Jaden/examples/3. Source counts over the sky]",
            "PASS: Clone done [2GSNYBDWB][/Users/Jaden/examples/4. Mean proper motions over the sky]",
            "PASS: Clone done [2H2YRJCKM][/Users/Jaden/examples/5. Working with Gaia XP spectra]",
            "PASS: Clone done [2GZME59KY][/Users/Jaden/examples/6. Working with cross-matched surveys]",
            "PASS: Clone done [2GQDKZ59J][/Users/Jaden/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
            "PASS: Clone done [2GVXKC266][/Users/Jaden/examples/8. Tips and tricks]"
          ]
        }
      }
    }
  ]
}
--END--



# -----------------------------------------------------
# Experiment with our create-share script ...
#[root@ansibler]





