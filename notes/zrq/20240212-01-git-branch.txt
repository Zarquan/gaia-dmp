#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: []
#

    Target:

        Notes on how to create a new branch on a local git clone.
        People have their own ways of doing this, but this documents the method I use.

        I start by making a new branch of my personal fork on my local machine

        New changes are added to this local copy, and I run new deployments from here to test them.

        Once I'm happy with the changes I commit and push them to my personal fork on GitHub.

        Then I create a pull request on the main WFAU (uptream) repository to get them approved and merged.

        Once the pull request is approved and merged, I sync both my local copy and
        my personal fork on GitHub to contain the merged changes (next notes).

        Personal choice, I find it easier to do this manually using the command line.
        YMMV YourMilageMayVary.

    Result:

        A new git branch on my local machine ready to work on new changes.


# -----------------------------------------------------
# Start a new branch.
#[user@desktop]

    # Set the new branch name
    branchname=github-notes
    newbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git checkout master

        git checkout -b "${newbranch:?}"

        git push --set-upstream 'origin' "$(git branch --show-current)"

    popd


# -----------------------------------------------------
# Make changes on local machine.
#[user@desktop]

    ....
    ....


# -----------------------------------------------------
# Add changes and push to personal fork.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git add .
        git commit -m 'Notes on working with git command line (YMMV)'

        git push

    popd


# -----------------------------------------------------
# Create a PR and request review on GitHub ....
#[user@desktop]

    ....
    ....



