#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#


    Target:

        Command line script for creating a VM fails on iris-data
        Try the same commands on iris-blue to see.

        * Create our network and router.
        * Create a new VM.
        * Assign a floating IP address.

    Result:

        PASS
        Unexpected success - didin't find the bug I was expecting to see.


# -----------------------------------------------------
# Login using the command line client ..
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2021.08.25 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudname=iris-gaia-blue
    buildname="aglais-blue-$(date '+%Y%m%d')"
    builddate="$(date '+%Y%m%d:%H%M%S')"


# -----------------------------------------------------
# Create our SSH keypair.
#[root@ansibler]


    wget \
        -O "/tmp/${buildname:?}-keypair.pub" \
        'https://raw.githubusercontent.com/wfau/aglais/master/deployments/common/ssh/aglais-team-keys'

    >   ....
    >   ....
    >   2022-02-02 14:24:31 (6.28 MB/s) - ‘/tmp/aglais-blue-20220202-keypair.pub’ saved [1770/1770]


    openstack \
        --os-cloud "${cloudname:?}" \
        keypair create \
            --format json \
            --public-key "/tmp/${buildname:?}-keypair.pub" \
            "${buildname}-keypair" \
    | tee "/tmp/${buildname:?}-keypair.json" \
    | jq '{id, name, fingerprint}'

    aglaiskeypair=$(
        jq -r '.id' "/tmp/${buildname:?}-keypair.json"
        )

--START--
{
  "id": "aglais-blue-20220202-keypair",
  "name": "aglais-blue-20220202-keypair",
  "fingerprint": "2e:84:98:98:df:70:06:0e:4c:ed:bd:d4:d6:6b:eb:16"
}
--END--


# -----------------------------------------------------
# Create our internal network, subnet and router.
# https://docs.openstack.org/ocata/user-guide/cli-create-and-manage-networks.html
#[root@ansibler]

    aglaissubnetblock='10.12.0.0/24'

    openstack \
        --os-cloud "${cloudname:?}" \
        network create \
            --format json \
            "${buildname:?}-network" \
    | tee "/tmp/${buildname:?}-network.json" \
    | jq '{name, id, subnets}'

    aglaisnetworkid=$(
        jq -r '.id' "/tmp/${buildname:?}-network.json"
        )

--START--
{
  "name": "aglais-blue-20220202-network",
  "id": "cbd20c71-a741-4cf8-8be8-cae7960359bf",
  "subnets": []
}
--END--


    openstack \
        --os-cloud "${cloudname:?}" \
        subnet create \
            --format json \
            "${buildname:?}-subnet" \
            --network "${aglaisnetworkid:?}" \
            --dns-nameserver "131.111.12.20" \
            --dns-nameserver "131.111.8.42" \
            --subnet-range "${aglaissubnetblock:?}" \
    | tee "/tmp/${buildname:?}-subnet.json" \
    | jq '{name, id, cidr, gateway_ip, dns_nameservers, allocation_pools}'

    aglaissubnetid=$(
        jq -r '.id' "/tmp/${buildname:?}-subnet.json"
        )

--START--
{
  "name": "aglais-blue-20220202-subnet",
  "id": "d565fb63-2f8c-4a08-9c69-7176214eab3f",
  "cidr": "10.12.0.0/24",
  "gateway_ip": "10.12.0.1",
  "dns_nameservers": [
    "131.111.12.20",
    "131.111.8.42"
  ],
  "allocation_pools": [
    {
      "start": "10.12.0.2",
      "end": "10.12.0.254"
    }
  ]
}
--END--


    openstack \
        --os-cloud "${cloudname:?}" \
        router create \
            --format json \
            "${buildname:?}-router" \
    | tee "/tmp/${buildname:?}-router.json" \
    | jq '{name, id, routes}'

    aglaisrouterid=$(
        jq -r '.id' "/tmp/${buildname:?}-router.json"
        )

--START--
{
  "name": "aglais-blue-20220202-router",
  "id": "3303b18a-0aa8-4adc-a495-41ea96737cc8",
  "routes": []
}
--END--


# -----------------------------------------------------
# Link our router to the public internet and our private subnet.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        network list

--START--
+--------------------------------------+------------------------------+--------------------------------------+
| ID                                   | Name                         | Subnets                              |
+--------------------------------------+------------------------------+--------------------------------------+
| 410920fb-5714-4447-b26a-e7b06092fc62 | cephfs                       | 5699fb5d-8316-4b88-b889-b05c8a1ec975 |
| 57add367-d205-4030-a929-d75617a7c63e | CUDN-Internet                | 3fcaa5a5-ba8e-49a9-bf94-d87fbb0afc42 |
| cbd20c71-a741-4cf8-8be8-cae7960359bf | aglais-blue-20220202-network | d565fb63-2f8c-4a08-9c69-7176214eab3f |
+--------------------------------------+------------------------------+--------------------------------------+
--END--

    internet=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            network list \
                --format json \
        | jq -r '
            .[] | select(.Name == "CUDN-Internet") | .ID
            '
        )

    # Link our router to the public internet.
    openstack \
        --os-cloud "${cloudname:?}" \
        router set \
            "${aglaisrouterid:?}" \
            --external-gateway \
                "${internet:?}"

    # Link our router to our private subnet.
    openstack \
        --os-cloud "${cloudname:?}" \
        router add subnet \
            "${aglaisrouterid:?}" \
            "${aglaissubnetid:?}"

    openstack \
        --os-cloud "${cloudname:?}" \
        router show \
            --format json \
            "${aglaisrouterid:?}" \
    | tee "/tmp/${buildname:?}-router.json" \
    | jq '{name, id, routes, interfaces_info, external_gateway_info}'

--START--
{
  "name": "aglais-blue-20220202-router",
  "id": "3303b18a-0aa8-4adc-a495-41ea96737cc8",
  "routes": [],
  "interfaces_info": [
    {
      "port_id": "e78307a2-c6f8-4471-adfa-90aac957c401",
      "ip_address": "10.12.0.1",
      "subnet_id": "d565fb63-2f8c-4a08-9c69-7176214eab3f"
    }
  ],
  "external_gateway_info": {
    "network_id": "57add367-d205-4030-a929-d75617a7c63e",
    "enable_snat": true,
    "external_fixed_ips": [
      {
        "subnet_id": "3fcaa5a5-ba8e-49a9-bf94-d87fbb0afc42",
        "ip_address": "128.232.222.103"
      }
    ]
  }
}
--END--


# -----------------------------------------------------
# Get the ID of the Fedora image.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        image list

    >   +--------------------------------------+------------------------------+--------+
    >   | ID                                   | Name                         | Status |
    >   +--------------------------------------+------------------------------+--------+
    >   ....
    >   ....
    >   | 1779f380-780d-40d8-8052-b3acb91ed530 | Fedora-31-1.9                | active |
    >   | e62a71df-4bd2-4498-9eae-058ff476b5ad | Fedora-33-1.2                | active |
    >   | e5c23082-cc34-4213-ad31-ff4684657691 | Fedora-34.1.2                | active |
    >   | dcb41a5f-868a-4880-9fd5-04b95ab97c47 | FedoraAtomic29-20191126      | active |
    >   | a079781f-80b7-4d89-95ae-ef65bfb0834f | FedoraCoreOS33               | active |
    >   | 191d3d4d-60cc-4b87-b4a7-0a03cc48a51e | FedoraCoreOS34               | active |
    >   ....
    >   ....
    >   +--------------------------------------+------------------------------+--------+
    >

    imageid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            image list \
                --format json \
        | jq -r '.[] | select(.Name | test("Fedora-34.1.2")) | .ID'
        )


# -----------------------------------------------------
# Get the flavor ID.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        flavor list

    >   +--------------------------------------+--------------+-------+------+-----------+-------+-----------+
    >   | ID                                   | Name         |   RAM | Disk | Ephemeral | VCPUs | Is Public |
    >   +--------------------------------------+--------------+-------+------+-----------+-------+-----------+
    >   | 2e5dc624-1d3b-4da7-8107-cc2dd4cb5073 | vm.v1.large  | 32768 |   60 |         0 |     8 | True      |
    >   | 6793b213-5efa-4b51-96bf-1340ff066499 | vm.v1.xsmall |  2048 |   20 |         0 |     1 | True      |
    >   | 698a8d46-eceb-4c55-91ff-38286bf9eabb | vm.v1.tiny   |  1024 |   10 |         0 |     1 | True      |
    >   | 6b56d6e9-5397-4543-87fb-e0c0b6d47961 | vm.v1.small  | 16384 |   20 |         0 |     4 | True      |
    >   +--------------------------------------+--------------+-------+------+-----------+-------+-----------+

    flavorid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
        | jq -r '.[] | select(.Name == "vm.v1.tiny") | .ID'
        )


# -----------------------------------------------------
# Create a security group for our VM.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        security group create \
            --format json \
            "${buildname:?}-security" \
    | tee "/tmp/${buildname:?}-security.json" \
    | jq '{name, id}'

--START--
{
  "name": "aglais-blue-20220202-security",
  "id": "1c25baa3-e191-4281-bf67-967b57aad026"
}
--END--

    aglaissecgroupid=$(
        jq -r '.id' "/tmp/${buildname:?}-security.json"
        )

#   openstack \
#       --os-cloud "${cloudname:?}" \
#       security group rule create \
#           --egress \
#           --ethertype 'IPv4' \
#           --remote-ip '0.0.0.0/0' \
#           "${aglaissecgroupid:?}"
#
#   openstack \
#       --os-cloud "${cloudname:?}" \
#       security group rule create \
#           --egress \
#           --ethertype 'IPv6' \
#           --remote-ip '::/0' \
#           "${aglaissecgroupid:?}"

    openstack \
        --os-cloud "${cloudname:?}" \
        security group rule create \
            --ingress \
            --dst-port   22 \
            --protocol  'tcp' \
            --ethertype 'IPv4' \
            "${aglaissecgroupid:?}"

    openstack \
        --os-cloud "${cloudname:?}" \
        security group rule create \
            --ingress \
            --dst-port   22 \
            --protocol  'tcp' \
            --ethertype 'IPv6' \
            "${aglaissecgroupid:?}"


# -----------------------------------------------------
# Create our virtual machine.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        server create \
            --format json \
            --image "${imageid:?}" \
            --flavor "${flavorid:?}" \
            --network "${aglaisnetworkid:?}" \
            --key-name "${aglaiskeypair:?}" \
            --security-group "${aglaissecgroupid:?}" \
            "${buildname:?}-machine" \
    | tee "/tmp/${buildname:?}-machine.json" \
    | jq '{name, id, status, flavor, image, key_name}'

    vmident=$(
        jq -r '.id' "/tmp/${buildname:?}-machine.json"
        )

--START--
{
  "name": "aglais-blue-20220202-machine",
  "id": "5e720f6f-2d35-4ff3-907c-b5da978c1abf",
  "status": "BUILD",
  "flavor": "vm.v1.tiny (698a8d46-eceb-4c55-91ff-38286bf9eabb)",
  "image": "Fedora-34.1.2 (e5c23082-cc34-4213-ad31-ff4684657691)",
  "key_name": "aglais-blue-20220202-keypair"
}
--END--


# -----------------------------------------------------
# Create a public IP address and attach it to our VM.
#[root@ansibler]

    floatip=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            floating ip \
            create \
            --format json \
            "${internet:?}" \
        | jq -r '.floating_ip_address'
        )

    networkname=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            network show \
                --format json \
                "${aglaisnetworkid:?}" \
        | jq -r '.name'
        )

    privateip=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            server show \
                --format json \
                "${vmident:?}" \
        | jq -r ".addresses.\"${networkname:?}\"[0]"
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        server add \
            floating ip \
            --fixed-ip-address "${privateip:?}" \
            "${vmident:?}" \
            "${floatip:?}"

cat << EOF
Public  IP [${floatip}]
Private IP [${privateip}]
EOF

--START--
Public  IP [128.232.222.146]
Private IP [10.12.0.231]
--END--


# -----------------------------------------------------
# Test ssh access.
#[root@ansibler]

    ssh \
        fedora@${floatip:?} \
        '
        hostname
        date
        '

--START--
aglais-blue-20220202-machine
Wed Feb  2 14:57:49 UTC 2022
--END--

    #
    # OK .... so the instructions work on the blue network.
    # .. but not on the data network ?
    #
