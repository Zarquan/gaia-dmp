#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: []
#

    Target:

        Use a vpn client in a container to connect to Edinburgh.

    Result:

        OpenConnect works, but it needs extra capabilities.
            --cap-add NET_ADMIN,mknod \

        ocproxy looks like exactly what we need, but it doesn't work.
        If we can figure out why, it would be really useful.


# -----------------------------------------------------

    Investigating how to access /dev/ppp from inside a rootless container.
    Found a clue:

        https://github.com/adrienverge/openfortivpn/issues/895#issuecomment-862176240

            You might try openconnect which implements PPP instead of running pppd.
            It shouldn't need kernel PPP support.


    OpenConnect
    https://gitlab.com/openconnect/openconnect

        OpenConnect is an SSL VPN client initially created to support Cisco's AnyConnect SSL VPN.
        It has since been ported to support the Juniper SSL VPN (which is now known as Pulse Connect Secure),
        the Palo Alto Networks GlobalProtect SSL VPN the F5 Big-IP SSL VPN, and the Fortinet FortiGate SSL VPN.

    Connecting to the VPN
    https://www.infradead.org/openconnect/connecting.html

    Fortinet SSL VPN
    https://www.infradead.org/openconnect/fortinet.html

        Experimental support for Fortinet SSL VPN was added to OpenConnect in March 2021.
        It is also known as FortiGate in some documentation.
        It is a PPP-based protocol using the native PPP support which was merged into the 9.00 release.

    Fortinet mode is requested by adding --protocol=fortinet to the command line:

        openconnect --protocol=fortinet fortigate.example.com

# -----------------------------------------------------
# Launch a new container.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        fedora \
            bash

    dnf install openconnect

    openconnect \
        --verbose \
        --protocol fortinet \
        --user dmorris8 \
        remote.net.ed.ac.uk:8443

    >   GET https://remote.net.ed.ac.uk:8443/
    >   Connected to 192.41.103.209:8443
    >   SSL negotiation with remote.net.ed.ac.uk
    >   Connected to HTTPS on remote.net.ed.ac.uk with ciphersuite (TLS1.3)-(ECDHE-SECP384R1)-(RSA-PSS-RSAE-SHA256)-(AES-256-GCM)
    >   Password:
    >   POST https://remote.net.ed.ac.uk:8443/remote/logincheck
    >   GET https://remote.net.ed.ac.uk:8443/remote/fortisslvpn_xml?dual_stack=1
    >   DTLS is enabled on port 8443
    >   Server reports that reconnect-after-drop is not allowed. OpenConnect will not
    >   be able to reconnect if dead peer is detected. If reconnection DOES work,
    >   please report to <openconnect-devel@lists.infradead.org>
    >   Got IPv4 DNS server 129.215.205.191
    >   Got IPv4 DNS server 129.215.70.239
    >   Got Legacy IP address 10.65.193.75
    >   Idle timeout is 60 minutes.
    >   No split routes received; setting default Legacy IP route
    >   Established DTLS connection (using GnuTLS). Ciphersuite (DTLS1.2)-(ECDHE-SECP384R1)-(RSA-PSS-RSAE-SHA256)-(AES-256-GCM).
    >   svrhello status was "fail" rather than "ok"
    >   Failed to connect DTLS tunnel; using HTTPS instead (state 3).
    >   GET https://remote.net.ed.ac.uk:8443/remote/fortisslvpn_xml?dual_stack=1
    >   SSL negotiation with remote.net.ed.ac.uk
    >   Connected to HTTPS on remote.net.ed.ac.uk with ciphersuite (TLS1.3)-(ECDHE-SECP384R1)-(RSA-PSS-RSAE-SHA256)-(AES-256-GCM)
    >   Server reports that reconnect-after-drop is not allowed. OpenConnect will not
    >   be able to reconnect if dead peer is detected. If reconnection DOES work,
    >   please report to <openconnect-devel@lists.infradead.org>
    >   Got IPv4 DNS server 129.215.205.191
    >   Got IPv4 DNS server 129.215.70.239
    >   Got Legacy IP address 10.65.193.75
    >   Idle timeout is 60 minutes.
    >   No split routes received; setting default Legacy IP route
    >   Requesting calculated MTU of 65465
    >   Configured as 10.65.193.75, with SSL connected and DTLS in progress
    >   Session authentication will expire at Sat Aug 26 00:53:38 2023
    >   
    >   Failed to bind local tun device (TUNSETIFF): Inappropriate ioctl for device
    >   Set up tun device failed
    >   GET https://remote.net.ed.ac.uk:8443/remote/logout
    >   SSL negotiation with remote.net.ed.ac.uk
    >   Connected to HTTPS on remote.net.ed.ac.uk with ciphersuite (TLS1.3)-(ECDHE-SECP384R1)-(RSA-PSS-RSAE-SHA256)-(AES-256-GCM)
    >   Logout successful.
    >   Unrecoverable I/O error; exiting.

    #
    # Hmmm ... root permissions again.
    #

    >   ....
    >   mknod: /dev/net/tun: Operation not permitted
    >   Failed to bind local tun device (TUNSETIFF): Inappropriate ioctl for device
    >   Set up tun device failed
    >   ....

# -----------------------------------------------------

    GoogleFoo found a clue ..
    https://github.com/haugene/docker-transmission-openvpn/discussions/2393

        If you encounter this error:

            Creating TUN device /dev/net/tun
            mknod: /dev/net/tun: Operation not permitted

        you need to use --cap-add=NET_ADMIN,mknod and probably --device /dev/net/tun.

# -----------------------------------------------------
# Launch a new container.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --cap-add NET_ADMIN,mknod \
        fedora \
            bash

    dnf -y install openconnect

    openconnect \
        --verbose \
        --protocol fortinet \
        --user dmorris8 \
        remote.net.ed.ac.uk:8443

    >   ....
    >   Session authentication will expire at Sat Aug 26 01:14:36 2023
    >   
    >   mknod: /dev/net/tun: Operation not permitted
    >   Failed to bind local tun device (TUNSETIFF): Inappropriate ioctl for device
    >   ....



# -----------------------------------------------------
# Launch a new container.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --device /dev/net/tun \
        --cap-add NET_ADMIN,mknod \
        fedora \
            bash

    dnf -y install openconnect

    openconnect \
        --verbose \
        --protocol fortinet \
        --user dmorris8 \
        remote.net.ed.ac.uk:8443

    >   Sending our IPCP/id 1 config request to server
    >   PPP state transition from ESTABLISH to OPENED on TLS channel
    >   Received peer IPv4 address 192.41.103.209 from server
    >   Ack IPCP/id 1 config from server
    >   PPP state transition from OPENED to NETWORK on TLS channel
    >   Configured as 10.65.193.42, with SSL connected and DTLS in progress
    >   Session authentication will expire at Sat Aug 26 01:26:25 2023
    >   
    >   Failed to open /dev/vhost-net: No such file or directory
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   ....
    >   ....


    podman exec -it \
        keen_williams \
            bash


    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'https://10.70.20.247/'

    >   HTTP/1.1 200 OK
    >   Content-Type: text/html;charset=UTF-8
    >   Connection: keep-alive
    >   Date: Fri, 25 Aug 2023 13:28:57 GMT
    >   Server: Apache
    >   Set-Cookie: RCKBMHKB=027ff8be59-56fd-48JNYY966SieA3_JzBD1lMEB14TEyeR2OIgxIcMTg4_KLGtje_frmduEmcEogUr4RbjvM; path=/; SameSite=None; Secure


    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'http://www.insurance.finance.ed.ac.uk/'

    >   HTTP/1.1 301 Moved Permanently
    >   Content-Type: text/html
    >   Content-Length: 1742
    >   Connection: keep-alive
    >   Location: https://www.insurance.finance.ed.ac.uk/


    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'https://www.insurance.finance.ed.ac.uk/'

    >   HTTP/1.1 302 Found
    >   Content-Type: text/html; charset=iso-8859-1
    >   Connection: keep-alive
    >   Date: Fri, 25 Aug 2023 13:30:06 GMT
    >   Server: Apache
    >   Location: https://www.ease.ed.ac.uk/cosign.cgi?cosign-eucsCosign-www.insurance.finance.ed.ac.uk&https://www.insurance.finance.ed.ac.uk/
    >   Set-Cookie: ....

    #
    # Yay - it works :-)
    #

    #
    # Check the network config.
    #

    ip route

    >   default dev tun0 scope link
    >   10.0.2.0/24 dev tap0 proto kernel scope link src 10.0.2.100
    >   192.41.103.209 via 10.0.2.2 dev tap0


    ifconfig

    >   lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
    >       inet 127.0.0.1  netmask 255.0.0.0
    >       inet6 ::1  prefixlen 128  scopeid 0x10<host>
    >       loop  txqueuelen 1000  (Local Loopback)
    >       RX packets 0  bytes 0 (0.0 B)
    >       RX errors 0  dropped 0  overruns 0  frame 0
    >       TX packets 0  bytes 0 (0.0 B)
    >       TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    >   
    >   tap0: flags=67<UP,BROADCAST,RUNNING>  mtu 65520
    >       inet 10.0.2.100  netmask 255.255.255.0  broadcast 10.0.2.255
    >       inet6 fe80::2477:69ff:fe53:66e1  prefixlen 64  scopeid 0x20<link>
    >       ether 26:77:69:53:66:e1  txqueuelen 1000  (Ethernet)
    >       RX packets 41478  bytes 139770445 (133.2 MiB)
    >       RX errors 0  dropped 0  overruns 0  frame 0
    >       TX packets 18402  bytes 1274300 (1.2 MiB)
    >       TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    >   
    >   tun0: flags=4305<UP,POINTOPOINT,RUNNING,NOARP,MULTICAST>  mtu 65465
    >       inet 10.65.193.42  netmask 255.255.255.255  destination 10.65.193.42
    >       inet6 fe80::bfec:450a:3b25:eae7  prefixlen 64  scopeid 0x20<link>
    >       unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)
    >       RX packets 6569  bytes 9674329 (9.2 MiB)
    >       RX errors 0  dropped 0  overruns 0  frame 0
    >       TX packets 2625  bytes 148319 (144.8 KiB)
    >       TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

    #
    # OK, works ...
    #


# -----------------------------------------------------

    This is interesting ...

    Running as non-root user
    https://www.infradead.org/openconnect/nonroot.html

    In particular ..

    SOCKS / port-forwarding proxy

        An alternative option which doesn't require any root access at all,
        is simply not to create the tun device and modify the system's network
        configuration.
        Instead, OpenConnect can spawn a user-supplied program, passing all
        data traffic through a UNIX socket to that program.

        This option can be used in conjunction with a userspace TCP stack such
        as lwip to provide SOCKS access to the VPN, without requiring root
        privileges at all.

        SOCKS proxy implementions suitable for being used from OpenConnect include:

            ocproxy
            https://github.com/cernekee/ocproxy

            tunsocks
            https://github.com/russdill/tunsocks

# -----------------------------------------------------
# Launch a new container (without extra privileges).
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --name vpn-connect \
        --interactive \
        fedora \
            bash

        dnf install -y \
            ocproxy \
            openconnect

        openconnect \
            --verbose \
            --user dmorris8 \
            --protocol fortinet \
            --script-tun \
            --script 'ocproxy -D 11080' \
            remote.net.ed.ac.uk:8443

    >   ....
    >   ....
    >   Configured as 10.65.192.15, with SSL connected and DTLS in progress
    >   Session authentication will expire at Sat Aug 26 06:11:34 2023
    >   Failed to open /dev/vhost-net: No such file or directory
    >   ....
    >   ....

    podman exec \
        --tty \
        --interactive \
        vpn-connect \
            bash


        curl \
            --head \
            --insecure \
            --no-progress-meter \
            --socks5 '127.0.0.1:11080' \
            'https://www.insurance.finance.ed.ac.uk/'


    >   ....
    >   ....
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   Attempt new DTLS connection
    >   UDP SO_SNDBUF: 425984
    >   Established DTLS connection (using GnuTLS). Ciphersuite (DTLS1.2)-(ECDHE-SECP384R1)-(RSA-PSS-RSAE-SHA256)-(AES-256-GCM).
    >   svrhello status was "fail" rather than "ok"
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   ....
    >   ....

    #
    # Possibly relates to this ..
    # https://bugzilla.redhat.com/show_bug.cgi?id=2221507
    # SELinux is preventing openconnect from read, write access on the chr_file vhost-net.

        I have no idea why openconnect tries to access vhost.
        This has appeared after upgrading to openconnect-9.12-1.fc38;
        earlier versions did not show any security alert.


    dnf info openconnect

    >   Last metadata expiration check: 0:25:59 ago on Fri Aug 25 18:10:55 2023.
    >   Installed Packages
    >   Name         : openconnect
    >   Version      : 9.12
    >   Release      : 1.fc38
    >   Architecture : x86_64
    >   Size         : 3.8 M
    >   Source       : openconnect-9.12-1.fc38.src.rpm
    >   Repository   : @System
    >   From repo    : updates
    >   Summary      : Open multi-protocol SSL VPN client
    >   URL          : http://www.infradead.org/openconnect.html
    >   License      : LGPLv2+
    >   Description  : This package provides a multi-protocol VPN client for Cisco
    >                : AnyConnect, Juniper SSL VPN, Pulse/Ivanti Pulse Connect Secure,
    >                : F5 BIG-IP, Fortinet Palo Alto Networks GlobalProtect SSL VPN,
    >                : Array Networks SSL VPN.


# -----------------------------------------------------
# Launch a new container (with acces to /dev/vhost-net).
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --name vpn-connect \
        --device /dev/vhost-net \
        --interactive \
        fedora \
            bash

        dnf install -y \
            ocproxy \
            openconnect

        openconnect \
            --verbose \
            --user dmorris8 \
            --protocol fortinet \
            --script-tun \
            --script 'ocproxy -D 11080' \
            remote.net.ed.ac.uk:8443

    >   ....
    >   ....
    >   Configured as 10.65.192.15, with SSL disconnected and DTLS established
    >   Session authentication will expire at Sat Aug 26 06:42:26 2023
    >   
    >   Detected virtual address range 0x1000-0x7ffffffff000
    >   Failed to set vring #0 RX backend: Socket operation on non-socket
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   ....
    >   ....

    podman exec \
        --tty \
        --interactive \
        vpn-connect \
            bash

        curl \
            --head \
            --insecure \
            --no-progress-meter \
            --socks5 '127.0.0.1:11080' \
            'https://www.insurance.finance.ed.ac.uk/'

    >   ....
    >   ....
    >   Send PPP echo request as DPD
    >   warning: start_connection: tcp_connect() returned -4
    >   Send PPP echo request as DPD
    >   ....
    >   ....


# -----------------------------------------------------
# Launch a new container (with older version of Fedora).
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --name vpn-connect \
        --device /dev/vhost-net \
        --interactive \
        fedora:37 \
            bash

        dnf info openconnect

    >   ....
    >   Name         : openconnect
    >   Version      : 9.01
    >   ....


        dnf install -y \
            ocproxy \
            openconnect

        openconnect \
            --verbose \
            --user dmorris8 \
            --protocol fortinet \
            --script-tun \
            --script 'ocproxy -D 11080' \
            remote.net.ed.ac.uk:8443


    >   ....
    >   ....
    >   Configured as 10.65.192.77, with SSL connected and DTLS in progress
    >   Session authentication will expire at Sat Aug 26 06:56:20 2023
    >   
    >   Not using vhost-net due to low queue length 10
    >   Send PPP echo request as DPD
    >   ....
    >   ....
    >   Attempt new DTLS connection
    >   UDP SO_SNDBUF: 425984
    >   Established DTLS connection (using GnuTLS). Ciphersuite (DTLS1.2)-(ECDHE-SECP384R1)-(RSA-PSS-RSAE-SHA256)-(AES-256-GCM).
    >   svrhello status was "fail" rather than "ok"
    >   ....
    >   ....


    podman exec \
        --tty \
        --interactive \
        vpn-connect \
            bash

        curl \
            --head \
            --insecure \
            --no-progress-meter \
            --socks5 '127.0.0.1:11080' \
            'https://www.insurance.finance.ed.ac.uk/'

    >   ....
    >   warning: start_connection: tcp_connect() returned -4
    >   ....

    #
    # Start openconnect with --no-dtls and the 'svrhello status ...' warnings go away,
    # but the '.. start_connection: tcp_connect() returned -4' warnings still happen.
    #

    #
    # Looks like the tcp_connect() warnings are comming from ocproxy.
    # https://github.com/cernekee/ocproxy/blob/c98f06d942970cdf35dd66ab46840f7d6d567b60/src/ocproxy.c#L541
    #


# -----------------------------------------------------
# Launch an older version of Fedora, with privileges.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --name vpn-connect \
        --privileged \
        --interactive \
        fedora:37 \
            bash

        dnf install -y \
            ocproxy \
            openconnect

        openconnect \
            --verbose \
            --user dmorris8 \
            --protocol fortinet \
            --script-tun \
            --script 'ocproxy -D 11080' \
            remote.net.ed.ac.uk:8443

    >   ....
    >   ....
    >   Configured as 10.65.192.13, with SSL connected and DTLS in progress
    >   Session authentication will expire at Sat Aug 26 10:59:12 2023
    >   
    >   Not using vhost-net due to low queue length 10
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   ....
    >   ....


    podman exec \
        --tty \
        --interactive \
        vpn-connect \
            bash

        curl \
            --head \
            --insecure \
            --no-progress-meter \
            --socks5 '127.0.0.1:11080' \
            'https://www.insurance.finance.ed.ac.uk/'

    >   ....
    >   warning: start_connection: tcp_connect() returned -4
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Try running it in a DigitalOcen VM rather than a container.
#[user@desktop]

    ssh root@159.65.81.125

        dnf install -y \
            ocproxy \
            openconnect

        openconnect \
            --verbose \
            --user dmorris8 \
            --protocol fortinet \
            --script-tun \
            --script 'ocproxy -D 11080' \
            remote.net.ed.ac.uk:8443


    ssh root@159.65.81.125

        curl \
            --head \
            --insecure \
            --no-progress-meter \
            --socks5 '127.0.0.1:11080' \
            'https://www.insurance.finance.ed.ac.uk/'


    >   ....
    >   ....
    >   Attempt new DTLS connection
    >   UDP SO_SNDBUF: 28660
    >   Send PPP echo request as DPD
    >   Established DTLS connection (using GnuTLS). Ciphersuite (DTLS1.2)-(ECDHE-SECP384R1)-(RSA-PSS-RSAE-SHA256)-(AES-256-GCM).
    >   svrhello status was "fail" rather than "ok"
    >   ....
    >   ....
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   ....
    >   ....
    >   warning: start_connection: tcp_connect() returned -4
    >   ....
    >   ....

    #
    # So nothing to do with containerization.
    # Happens in a full stack virtual machine too.
    #


# -----------------------------------------------------
# -----------------------------------------------------
# Check the working version still works.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --name vpn-connect \
        --device /dev/net/tun \
        --cap-add NET_ADMIN,mknod \
        fedora \
            bash

    dnf -y install openconnect

    openconnect \
        --verbose \
        --protocol fortinet \
        --user dmorris8 \
        remote.net.ed.ac.uk:8443


    >   ....
    >   ....
    >   Configured as 10.65.192.33, with SSL disconnected and DTLS established
    >   Session authentication will expire at Sat Aug 26 11:31:07 2023
    >   
    >   Failed to open /dev/vhost-net: No such file or directory
    >   ....
    >   ....
    >   Send PPP echo request as DPD
    >   Send PPP echo request as DPD
    >   ....
    >   ....


    podman exec -it \
        vpn-connect \
            bash

    curl \
        --head \
        --insecure \
        --no-progress-meter \
        'https://www.insurance.finance.ed.ac.uk/'

    >   HTTP/1.1 302 Found
    >   Content-Type: text/html; charset=iso-8859-1
    >   Connection: keep-alive
    >   Date: Fri, 25 Aug 2023 23:31:33 GMT
    >   Server: Apache

    #
    # Yep, still works.
    # So it is something to do with ocproxy.
    #
    # TODO - try out tunsocks
    # https://github.com/russdill/tunsocks
    #


