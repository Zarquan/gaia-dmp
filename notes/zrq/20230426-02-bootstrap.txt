#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Nuke from orbit and try again ....

    Result:

        Work in progress ...


# -----------------------------------------------------
# Jump to our desktop in Devon.
#[user@laptop]

    ssh methionine

    >   Last login: Mon Apr 24 11:34:25 2023 from 2001:8b0:be72:d4eb:5054:ff:fe00:702
    >   ....


# -----------------------------------------------------
# Check which platform is live.
#[user@desktop]

    ssh fedora@live.gaia-dmp.uk \
        '
        date
        hostname
        '

    >   Wed 26 Apr 15:18:42 UTC 2023
    >   iris-gaia-green-20230308-zeppelin


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    #
    # Live is green, selecting red for the deployment.
    # Using the 'admin' credentials to allow access to loadbalancers etc.
    #

    source "${HOME:?}/aglais.env"

    agcolour=red

    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}-admin

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --env "cloudname=${cloudname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    2m13.032s
    >   user    1m0.990s
    >   sys     0m6.446s


# -----------------------------------------------------
# Add YAML editor role to our client container.
# TODO Add this to the Ansible client.
# https://github.com/wfau/atolmis/issues/30
#[root@ansibler]

    ansible-galaxy install kwoodson.yedit

    >   ....
    >   ....


# -----------------------------------------------------
# Create our deployment settings.
#[root@ansibler]

    deployname=${cloudname:?}-$(date '+%Y%m%d')
    deploydate=$(date '+%Y%m%dT%H%M%S')

    statusyml='/opt/aglais/aglais-status.yml'
    if [ ! -e "$(dirname ${statusyml})" ]
    then
        mkdir "$(dirname ${statusyml})"
    fi
    rm -f "${statusyml}"
    touch "${statusyml}"

    yq eval \
        --inplace \
        "
        .aglais.deployment.type = \"cluster-api\"   |
        .aglais.deployment.name = \"${deployname}\" |
        .aglais.deployment.date = \"${deploydate}\" |
        .aglais.openstack.cloud.name = \"${cloudname}\"
        " "${statusyml}"

    cat /opt/aglais/aglais-status.yml

    >   aglais:
    >     deployment:
    >       type: cluster-api
    >       name: iris-gaia-red-admin-20230426
    >       date: 20230426T152538
    >     openstack:
    >       cloud:
    >         name: iris-gaia-red-admin


# -----------------------------------------------------
# Create our bootstrap components.
#[root@ansibler]

    inventory=/deployments/cluster-api/bootstrap/ansible/config/inventory.yml

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/01-create-keypair.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/02-create-network.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/03-create-bootstrap.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/04-config-ansible.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/05-install-aglais.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/06-install-docker.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/07-install-kubectl.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/08-install-kind.yml'

#   ansible-playbook \
#       --inventory "${inventory:?}" \
#       '/deployments/cluster-api/bootstrap/ansible/09-install-helm.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/10-install-clusterctl.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/11-install-yq.yml'

    cat /opt/aglais/aglais-status.yml

    >   aglais:
    >     deployment:
    >       date: 20230426T152538
    >       name: iris-gaia-red-admin-20230426
    >       type: cluster-api
    >     openstack:
    >       cloud:
    >         name: iris-gaia-red-admin
    >       keypairs:
    >         team:
    >           fingerprint: 2e:84:98:98:df:70:06:0e:4c:ed:bd:d4:d6:6b:eb:16
    >           id: iris-gaia-red-admin-20230426-keypair
    >           name: iris-gaia-red-admin-20230426-keypair
    >       networks:
    >         external:
    >           network:
    >             id: 57add367-d205-4030-a929-d75617a7c63e
    >             name: CUDN-Internet
    >         internal:
    >           network:
    >             id: b5f1a19e-e4a3-4414-93c8-643a8a999795
    >             name: iris-gaia-red-admin-20230426-internal-network
    >           router:
    >             id: ab2f6cd1-c017-43cb-b27c-b6f1e5474997
    >             name: iris-gaia-red-admin-20230426-internal-router
    >           subnet:
    >             cidr: 10.10.0.0/16
    >             id: a337ad4f-21b5-48b8-8fa1-3b9003fed065
    >             name: iris-gaia-red-admin-20230426-internal-subnet
    >       servers:
    >         bootstrap:
    >           float:
    >             external: 128.232.226.178
    >             id: 46231508-06a7-4e28-baee-fb692ea7d347
    >             internal: 10.10.3.35
    >           server:
    >             address:
    >               ipv4: 10.10.3.35
    >             flavor:
    >               name: gaia.vm.cclake.2vcpu
    >             hostname: bootstrap
    >             id: a54061f3-e096-4ffc-ac08-1aa482b89310
    >             image:
    >               id: e5c23082-cc34-4213-ad31-ff4684657691
    >               name: Fedora-34.1.2
    >             name: iris-gaia-red-admin-20230426-bootstrap


# -----------------------------------------------------
# -----------------------------------------------------
# Login to the bootstrap node as root.
#[user@desktop]

    podman exec \
        -it \
        ansibler-red \
            bash

        ssh bootstrap

            sudo su -

    #
    # We could prefix everything with sudo, but it gets very boring.
    #


# -----------------------------------------------------
# Install Helm on the bootstrap node.
# https://helm.sh/docs/intro/install/
# https://github.com/helm/helm/releases
#[root@bootstrap]

    #
    # We still need to do this because our incude task doesn't handle tar files yet.
    #

    helmarch=linux-amd64
    helmversion=3.11.2
    helmtarfile=helm-v${helmversion}-${helmarch}.tar.gz
    helmtmpfile=/tmp/${helmtarfile:?}
    helmbinary=helm-${helmversion:?}

    curl \
        --location \
        --no-progress-meter \
        --output "${helmtmpfile:?}" \
        "https://get.helm.sh/${helmtarfile:?}"

    tar \
        --gzip \
        --extract \
        --directory /tmp \
        --file "${helmtmpfile:?}"

    pushd /usr/local/bin
        mv "/tmp/${helmarch:?}/helm" "${helmbinary:?}"
        chown 'root:root' "${helmbinary:?}"
        chmod 'u=rwx,g=rx,o=rx' "${helmbinary:?}"
        ln -s "${helmbinary:?}" 'helm'
    popd


# -----------------------------------------------------
# Create our initial Kind cluster.
# https://github.com/kubernetes-sigs/kind/pull/2478#issuecomment-1214656908
#[root@bootstrap]

    kind create cluster --retain

    >   Creating cluster "kind" ...
    >    ✓ Ensuring node image (kindest/node:v1.25.3) 🖼
    >    ✓ Preparing nodes 📦
    >    ✓ Writing configuration 📜
    >    ✓ Starting control-plane 🕹️
    >    ✓ Installing CNI 🔌
    >    ✓ Installing StorageClass 💾
    >   ....
    >   ....


# -----------------------------------------------------
# Create our Openstack management cluster
# https://cluster-api-openstack.sigs.k8s.io/getting-started.html#initialization-for-common-providers
# https://github.com/stackhpc/capi-helm-charts/tree/main/charts/openstack-cluster#prerequisites
#[root@bootstrap]

    clusterctl init --infrastructure openstack

    >   Fetching providers
    >   Installing cert-manager Version="v1.11.0"
    >   Waiting for cert-manager to be available...
    >   Installing Provider="cluster-api" Version="v1.4.1" TargetNamespace="capi-system"
    >   Installing Provider="bootstrap-kubeadm" Version="v1.4.1" TargetNamespace="capi-kubeadm-bootstrap-system"
    >   Installing Provider="control-plane-kubeadm" Version="v1.4.1" TargetNamespace="capi-kubeadm-control-plane-system"
    >   Installing Provider="infrastructure-openstack" Version="v0.7.1" TargetNamespace="capo-system"
    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Extract the settings we need.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        token issue \
            --format json \
    | tee /tmp/ostoken.json   \
    | jq '.'

    >   {
    >     "expires": "2023-04-26T16:41:00+0000",
    >     "id": "gAAAAABk....anW9vZZv",
    >     "project_id": "0dd8cc5ee5a7455c8748cc06d04c93c3",
    >     "user_id": "5fa0c97a6dd14e01a3c7d91dad5c6b17"
    >   }

    osuserident=$(
        jq -r '.user_id' '/tmp/ostoken.json'
        )

    osprojectid=$(
        jq -r '.project_id' '/tmp/ostoken.json'
        )

    ctrlnodeflavor=gaia.vm.cclake.4vcpu
    nodenodeflavor=gaia.vm.cclake.4vcpu

    keypair=$(
        yq '.aglais.openstack.keypairs.team.name' /opt/aglais/aglais-status.yml
        )

    externalnet=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            network list \
                --external \
                --format json \
        | jq -r ".[] | select(.Name == \"CUDN-Internet\") | .ID"
        )

    cat > /tmp/openstack-settings.env << EOF
export OPENSTACK_CLOUD=${cloudname:?}

export OPENSTACK_USER_ID=${osuserident:?}
export OPENSTACK_PROJECT_ID=${osprojectid:?}

export OPENSTACK_SSH_KEY_NAME=${keypair:?}
export OPENSTACK_EXTERNAL_NETWORK_ID=${externalnet:?}

export OPENSTACK_NODE_MACHINE_FLAVOR=${nodenodeflavor}
export OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR=${ctrlnodeflavor}

export KUBERNETES_VERSION=1.25.4
export OPENSTACK_IMAGE_NAME=gaia-dmp-ubuntu-2004-kube-v1.25.4

export OPENSTACK_FAILURE_DOMAIN=nova

# Use the Cambridge DNS servers.
# https://www.dns.cam.ac.uk/servers/rec.html
export OPENSTACK_DNS_NAMESERVERS=131.111.8.42

EOF


# -----------------------------------------------------
# Transfer the Openstack settings to our bootstrap node.
#[root@ansibler]

    scp \
        /tmp/openstack-settings.env \
        bootstrap:/tmp/openstack-settings.env

    ssh bootstrap \
        '
        sudo mkdir -p \
            /etc/aglais
        sudo install \
            /tmp/openstack-settings.env \
            /etc/aglais/openstack-settings.env
        '


# -----------------------------------------------------
# Transfer a copy of our clouds.yaml file.
#[root@ansibler]

    scp \
        /etc/openstack/clouds.yaml \
        bootstrap:/tmp/openstack-clouds.yaml

    ssh bootstrap \
        '
        sudo mkdir -p \
            /etc/aglais
        sudo install \
            /tmp/openstack-clouds.yaml \
            /etc/aglais/openstack-clouds.yaml
        '


# -----------------------------------------------------
# -----------------------------------------------------
# Load the Openstack settings from our client.
#[root@bootstrap]

    source /etc/aglais/openstack-settings.env

cat << EOF
OPENSTACK_CLOUD [${OPENSTACK_CLOUD}]
OPENSTACK_USER_ID [${OPENSTACK_USER_ID}]
OPENSTACK_PROJECT_ID [${OPENSTACK_PROJECT_ID}]
OPENSTACK_IMAGE_NAME [${OPENSTACK_IMAGE_NAME}]
EOF

    >   OPENSTACK_CLOUD [iris-gaia-red-admin]
    >   OPENSTACK_USER_ID [5fa0c97a6dd14e01a3c7d91dad5c6b17]
    >   OPENSTACK_PROJECT_ID [0dd8cc5ee5a7455c8748cc06d04c93c3]
    >   OPENSTACK_IMAGE_NAME [gaia-dmp-ubuntu-2004-kube-v1.25.4]

# -----------------------------------------------------
# Edit our clouds.yaml file to disable TLS certificate checks.
# https://docs.openstack.org/os-client-config/latest/user/configuration.html#ssl-settings
#[root@bootstrap]

    yq eval \
        --inplace \
        "
        .clouds.${OPENSTACK_CLOUD}.verify = false
        " '/etc/aglais/openstack-clouds.yaml'


# -----------------------------------------------------
# Edit our clouds.yaml file to add our project ID.
# https://github.com/stackhpc/capi-helm-charts/tree/main/charts/openstack-cluster#openstack-credentials
#[root@bootstrap]

    yq eval \
        --inplace \
        "
        .clouds.${OPENSTACK_CLOUD}.auth.project_id = \"${OPENSTACK_PROJECT_ID:?}\"
        " '/etc/aglais/openstack-clouds.yaml'


# -----------------------------------------------------
# Check our clouds.yaml file.
#[root@bootstrap]

    yq ".clouds.${OPENSTACK_CLOUD}" '/etc/aglais/openstack-clouds.yaml'

    >   auth:
    >     auth_url: https://arcus.openstack.hpc.cam.ac.uk:5000
    >     application_credential_id: "ef074975550a4fba889b807f679346c9"
    >     application_credential_secret: "eefoo2Oh Ik6Kohyu ayaeJi2R Eahaqu2v"
    >     project_id: 0dd8cc5ee5a7455c8748cc06d04c93c3
    >   region_name: "RegionOne"
    >   interface: "public"
    >   identity_api_version: 3
    >   auth_type: "v3applicationcredential"
    >   verify: false


# -----------------------------------------------------
# Create our cluster config.
# https://github.com/stackhpc/capi-helm-charts/tree/main/charts/openstack-cluster#managing-a-workload-cluster
#[root@bootstrap]

    touch '/etc/aglais/workload-cluster.yaml'

    yq eval \
        --inplace \
        "
        .cloudName = \"${OPENSTACK_CLOUD:?}\" |
        .kubernetesVersion = \"${KUBERNETES_VERSION:?}\" |
        .machineImage = \"${OPENSTACK_IMAGE_NAME:?}\" |
        .machineSSHKeyName = \"${OPENSTACK_SSH_KEY_NAME:?}\" |
        .controlPlane.machineFlavor = \"${OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR:?}\" |
        .dnsNameservers = \"${OPENSTACK_DNS_NAMESERVERS:?}\" |
        .externalNetworkId = \"${OPENSTACK_EXTERNAL_NETWORK_ID:?}\" |
        .nodeGroups.[0].name = \"md-0\" |
        .nodeGroups.[0].machineFlavor = \"${OPENSTACK_NODE_MACHINE_FLAVOR:?}\" |
        .nodeGroups.[0].machineCount = 4
        " '/etc/aglais/workload-cluster.yaml'

    yq '/etc/aglais/workload-cluster.yaml'

    >   cloudName: iris-gaia-red-admin
    >   kubernetesVersion: 1.25.4
    >   machineImage: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >   machineSSHKeyName: iris-gaia-red-admin-20230426-keypair
    >   controlPlane:
    >     machineFlavor: gaia.vm.cclake.4vcpu
    >   dnsNameservers: 131.111.8.42
    >   externalNetworkId: 57add367-d205-4030-a929-d75617a7c63e
    >   nodeGroups:
    >     - name: md-0
    >       machineFlavor: gaia.vm.cclake.4vcpu
    >       machineCount: 4


# -----------------------------------------------------
# Add the StackHPC Helm repos.
#[root@bootstrap]

    helm repo add \
        capi \
        https://stackhpc.github.io/capi-helm-charts

    >   "capi" has been added to your repositories


    helm repo add \
        capi-addons \
        https://stackhpc.github.io/cluster-api-addon-provider

    >   "capi-addons" has been added to your repositories


# -----------------------------------------------------
# Install the cluster-api-addon-provider.
#[root@bootstrap]

    helm install \
        cluster-api-addon-provider \
        capi-addons/cluster-api-addon-provider

    >   NAME: cluster-api-addon-provider
    >   LAST DEPLOYED: Wed Apr 26 15:46:42 2023
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None


# -----------------------------------------------------
# Initialise our cluster ...
#[root@bootstrap]

    CLUSTER_NAME=aglais-one

    helm install \
        "${CLUSTER_NAME:?}" \
        capi/openstack-cluster \
            --values '/etc/aglais/workload-cluster.yaml' \
            --values '/etc/aglais/openstack-clouds.yaml'

    >   NAME: aglais-one
    >   LAST DEPLOYED: Wed Apr 26 15:54:34 2023
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None

    kubectl \
        --namespace capo-system \
        logs \
            -l control-plane=capo-controller-manager \
            -c manager \
            --follow


    >   ....
    >   E0426 15:54:38.553321       1 controller.go:326] "Reconciler error" err="failed to reconcile external network: found 2 external networks, which should not happen" controller="openstackcluster" controllerGroup="infrastructure.cluster.x-k8s.io" controllerKind="OpenStackCluster" OpenStackCluster="default/aglais-one" namespace="default" name="aglais-one" reconcileID=d88a47ed-4181-44b1-b790-1b014006bbc0
    >   ....


    kubectl get OpenStackCluster

    >   NAME         CLUSTER      READY   NETWORK   SUBNET   BASTION IP   AGE
    >   aglais-one   aglais-one                                           2m22s


    kubectl get --output json OpenStackCluster

    >   {
    >       "apiVersion": "v1",
    >       "items": [
    >           {
    >               "apiVersion": "infrastructure.cluster.x-k8s.io/v1alpha6",
    >               "kind": "OpenStackCluster",
    >               "metadata": {
    >                   "annotations": {
    >                       "helm.sh/resource-policy": "keep",
    >                       "meta.helm.sh/release-name": "aglais-one",
    >                       "meta.helm.sh/release-namespace": "default"
    >                   },
    >                   "creationTimestamp": "2023-04-26T15:54:36Z",
    >                   "finalizers": [
    >                       "openstackcluster.infrastructure.cluster.x-k8s.io"
    >                   ],
    >                   "generation": 1,
    >                   "labels": {
    >                       "app.kubernetes.io/managed-by": "Helm",
    >                       "capi.stackhpc.com/cluster": "aglais-one",
    >                       "capi.stackhpc.com/infrastructure-provider": "openstack",
    >                       "capi.stackhpc.com/managed-by": "Helm",
    >                       "cluster.x-k8s.io/cluster-name": "aglais-one",
    >                       "helm.sh/chart": "openstack-cluster-0.1.0"
    >                   },
    >                   "name": "aglais-one",
    >                   "namespace": "default",
    >                   "ownerReferences": [
    >                       {
    >                           "apiVersion": "cluster.x-k8s.io/v1beta1",
    >                           "blockOwnerDeletion": true,
    >                           "controller": true,
    >                           "kind": "Cluster",
    >                           "name": "aglais-one",
    >                           "uid": "dbf34892-802f-4ad9-a29c-0ad7fe043401"
    >                       }
    >                   ],
    >                   "resourceVersion": "3621",
    >                   "uid": "6a10ae09-cfcc-4705-87f2-a77d6b69d732"
    >               },
    >               "spec": {
    >                   "allowAllInClusterTraffic": true,
    >                   "apiServerLoadBalancer": {
    >                       "enabled": true
    >                   },
    >                   "apiServerPort": 6443,
    >                   "cloudName": "openstack",
    >                   "controlPlaneEndpoint": {
    >                       "host": "",
    >                       "port": 0
    >                   },
    >                   "controlPlaneOmitAvailabilityZone": true,
    >                   "disableAPIServerFloatingIP": false,
    >                   "identityRef": {
    >                       "kind": "Secret",
    >                       "name": "aglais-one-cloud-credentials"
    >                   },
    >                   "managedSecurityGroups": true,
    >                   "network": {},
    >                   "nodeCidr": "192.168.3.0/24",
    >                   "subnet": {}
    >               }
    >           }
    >       ],
    >       "kind": "List",
    >       "metadata": {
    >           "resourceVersion": ""
    >       }
    >   }


    kubectl get --output yaml OpenStackCluster "${CLUSTER_NAME:?}"

    >   kind: OpenStackCluster
    >   metadata:
    >     annotations:
    >       helm.sh/resource-policy: keep
    >       meta.helm.sh/release-name: aglais-one
    >       meta.helm.sh/release-namespace: default
    >     creationTimestamp: "2023-04-26T15:54:36Z"
    >     finalizers:
    >     - openstackcluster.infrastructure.cluster.x-k8s.io
    >     generation: 1
    >     labels:
    >       app.kubernetes.io/managed-by: Helm
    >       capi.stackhpc.com/cluster: aglais-one
    >       capi.stackhpc.com/infrastructure-provider: openstack
    >       capi.stackhpc.com/managed-by: Helm
    >       cluster.x-k8s.io/cluster-name: aglais-one
    >       helm.sh/chart: openstack-cluster-0.1.0
    >     name: aglais-one
    >     namespace: default
    >     ownerReferences:
    >     - apiVersion: cluster.x-k8s.io/v1beta1
    >       blockOwnerDeletion: true
    >       controller: true
    >       kind: Cluster
    >       name: aglais-one
    >       uid: dbf34892-802f-4ad9-a29c-0ad7fe043401
    >     resourceVersion: "3621"
    >     uid: 6a10ae09-cfcc-4705-87f2-a77d6b69d732
    >   spec:
    >     allowAllInClusterTraffic: true
    >     apiServerLoadBalancer:
    >       enabled: true
    >     apiServerPort: 6443
    >     cloudName: openstack
    >     controlPlaneEndpoint:
    >       host: ""
    >       port: 0
    >     controlPlaneOmitAvailabilityZone: true
    >     disableAPIServerFloatingIP: false
    >     identityRef:
    >       kind: Secret
    >       name: aglais-one-cloud-credentials
    >     managedSecurityGroups: true
    >     network: {}
    >     nodeCidr: 192.168.3.0/24
    >     subnet: {}

    #
    # The OpenStackCluster hasn't been configured using our values.
    #

    >   ....
    >   spec:
    >     ....
    >     cloudName: openstack
    >     ....

    #
    # ....
    #

    yq '.' /etc/aglais/workload-cluster.yaml

    >   cloudName: iris-gaia-red-admin
    >   kubernetesVersion: 1.25.4
    >   machineImage: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >   machineSSHKeyName: iris-gaia-red-admin-20230426-keypair
    >   controlPlane:
    >     machineFlavor: gaia.vm.cclake.4vcpu
    >   dnsNameservers: 131.111.8.42
    >   externalNetworkId: 57add367-d205-4030-a929-d75617a7c63e
    >   nodeGroups:
    >     - name: md-0
    >       machineFlavor: gaia.vm.cclake.4vcpu
    >       machineCount: 4


    kubectl api-resources

    >   NAME                              SHORTNAMES   APIVERSION                                 NAMESPACED   KIND
    >   bindings                                       v1                                         true         Binding
    >   componentstatuses                 cs           v1                                         false        ComponentStatus
    >   configmaps                        cm           v1                                         true         ConfigMap
    >   endpoints                         ep           v1                                         true         Endpoints
    >   events                            ev           v1                                         true         Event
    >   limitranges                       limits       v1                                         true         LimitRange
    >   namespaces                        ns           v1                                         false        Namespace
    >   nodes                             no           v1                                         false        Node
    >   persistentvolumeclaims            pvc          v1                                         true         PersistentVolumeClaim
    >   persistentvolumes                 pv           v1                                         false        PersistentVolume
    >   pods                              po           v1                                         true         Pod
    >   podtemplates                                   v1                                         true         PodTemplate
    >   replicationcontrollers            rc           v1                                         true         ReplicationController
    >   resourcequotas                    quota        v1                                         true         ResourceQuota
    >   secrets                                        v1                                         true         Secret
    >   serviceaccounts                   sa           v1                                         true         ServiceAccount
    >   services                          svc          v1                                         true         Service
    >   challenges                                     acme.cert-manager.io/v1                    true         Challenge
    >   orders                                         acme.cert-manager.io/v1                    true         Order
    >   clusterresourcesetbindings                     addons.cluster.x-k8s.io/v1beta1            true         ClusterResourceSetBinding
    >   clusterresourcesets                            addons.cluster.x-k8s.io/v1beta1            true         ClusterResourceSet
    >   helmreleases                                   addons.stackhpc.com/v1alpha1               true         HelmRelease
    >   manifests                                      addons.stackhpc.com/v1alpha1               true         Manifests
    >   mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1            false        MutatingWebhookConfiguration
    >   validatingwebhookconfigurations                admissionregistration.k8s.io/v1            false        ValidatingWebhookConfiguration
    >   customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                    false        CustomResourceDefinition
    >   apiservices                                    apiregistration.k8s.io/v1                  false        APIService
    >   controllerrevisions                            apps/v1                                    true         ControllerRevision
    >   daemonsets                        ds           apps/v1                                    true         DaemonSet
    >   deployments                       deploy       apps/v1                                    true         Deployment
    >   replicasets                       rs           apps/v1                                    true         ReplicaSet
    >   statefulsets                      sts          apps/v1                                    true         StatefulSet
    >   tokenreviews                                   authentication.k8s.io/v1                   false        TokenReview
    >   localsubjectaccessreviews                      authorization.k8s.io/v1                    true         LocalSubjectAccessReview
    >   selfsubjectaccessreviews                       authorization.k8s.io/v1                    false        SelfSubjectAccessReview
    >   selfsubjectrulesreviews                        authorization.k8s.io/v1                    false        SelfSubjectRulesReview
    >   subjectaccessreviews                           authorization.k8s.io/v1                    false        SubjectAccessReview
    >   horizontalpodautoscalers          hpa          autoscaling/v2                             true         HorizontalPodAutoscaler
    >   cronjobs                          cj           batch/v1                                   true         CronJob
    >   jobs                                           batch/v1                                   true         Job
    >   kubeadmconfigs                                 bootstrap.cluster.x-k8s.io/v1beta1         true         KubeadmConfig
    >   kubeadmconfigtemplates                         bootstrap.cluster.x-k8s.io/v1beta1         true         KubeadmConfigTemplate
    >   certificaterequests               cr,crs       cert-manager.io/v1                         true         CertificateRequest
    >   certificates                      cert,certs   cert-manager.io/v1                         true         Certificate
    >   clusterissuers                                 cert-manager.io/v1                         false        ClusterIssuer
    >   issuers                                        cert-manager.io/v1                         true         Issuer
    >   certificatesigningrequests        csr          certificates.k8s.io/v1                     false        CertificateSigningRequest
    >   clusterclasses                    cc           cluster.x-k8s.io/v1beta1                   true         ClusterClass
    >   clusters                          cl           cluster.x-k8s.io/v1beta1                   true         Cluster
    >   machinedeployments                md           cluster.x-k8s.io/v1beta1                   true         MachineDeployment
    >   machinehealthchecks               mhc,mhcs     cluster.x-k8s.io/v1beta1                   true         MachineHealthCheck
    >   machinepools                      mp           cluster.x-k8s.io/v1beta1                   true         MachinePool
    >   machines                          ma           cluster.x-k8s.io/v1beta1                   true         Machine
    >   machinesets                       ms           cluster.x-k8s.io/v1beta1                   true         MachineSet
    >   providers                                      clusterctl.cluster.x-k8s.io/v1alpha3       true         Provider
    >   kubeadmcontrolplanes              kcp          controlplane.cluster.x-k8s.io/v1beta1      true         KubeadmControlPlane
    >   kubeadmcontrolplanetemplates                   controlplane.cluster.x-k8s.io/v1beta1      true         KubeadmControlPlaneTemplate
    >   leases                                         coordination.k8s.io/v1                     true         Lease
    >   endpointslices                                 discovery.k8s.io/v1                        true         EndpointSlice
    >   events                            ev           events.k8s.io/v1                           true         Event
    >   flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta2       false        FlowSchema
    >   prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta2       false        PriorityLevelConfiguration
    >   openstackclusters                 osc          infrastructure.cluster.x-k8s.io/v1alpha6   true         OpenStackCluster
    >   openstackclustertemplates         osct         infrastructure.cluster.x-k8s.io/v1alpha6   true         OpenStackClusterTemplate
    >   openstackmachines                 osm          infrastructure.cluster.x-k8s.io/v1alpha6   true         OpenStackMachine
    >   openstackmachinetemplates         osmt         infrastructure.cluster.x-k8s.io/v1alpha6   true         OpenStackMachineTemplate
    >   ipaddressclaims                                ipam.cluster.x-k8s.io/v1alpha1             true         IPAddressClaim
    >   ipaddresses                                    ipam.cluster.x-k8s.io/v1alpha1             true         IPAddress
    >   ingressclasses                                 networking.k8s.io/v1                       false        IngressClass
    >   ingresses                         ing          networking.k8s.io/v1                       true         Ingress
    >   networkpolicies                   netpol       networking.k8s.io/v1                       true         NetworkPolicy
    >   runtimeclasses                                 node.k8s.io/v1                             false        RuntimeClass
    >   poddisruptionbudgets              pdb          policy/v1                                  true         PodDisruptionBudget
    >   clusterrolebindings                            rbac.authorization.k8s.io/v1               false        ClusterRoleBinding
    >   clusterroles                                   rbac.authorization.k8s.io/v1               false        ClusterRole
    >   rolebindings                                   rbac.authorization.k8s.io/v1               true         RoleBinding
    >   roles                                          rbac.authorization.k8s.io/v1               true         Role
    >   extensionconfigs                  ext          runtime.cluster.x-k8s.io/v1alpha1          false        ExtensionConfig
    >   priorityclasses                   pc           scheduling.k8s.io/v1                       false        PriorityClass
    >   csidrivers                                     storage.k8s.io/v1                          false        CSIDriver
    >   csinodes                                       storage.k8s.io/v1                          false        CSINode
    >   csistoragecapacities                           storage.k8s.io/v1                          true         CSIStorageCapacity
    >   storageclasses                    sc           storage.k8s.io/v1                          false        StorageClass
    >   volumeattachments                              storage.k8s.io/v1                          false        VolumeAttachment

    kubectl get OpenStackCluster

    >   NAME         CLUSTER      READY   NETWORK   SUBNET   BASTION IP   AGE
    >   aglais-one   aglais-one                                           27m


    kubectl get OpenStackClusterTemplate --all-namespaces

    >   No resources found


    kubectl get \
        --all-namespaces z
            OpenStackMachine

    >   NAMESPACE   NAME                             CLUSTER      INSTANCESTATE   READY   PROVIDERID   MACHINE                                  AGE
    >   default     aglais-one-md-0-d7508522-6hnnq   aglais-one                                        aglais-one-md-0-59585664fbxzdj6j-m5zgp   31m
    >   default     aglais-one-md-0-d7508522-c5cgg   aglais-one                                        aglais-one-md-0-59585664fbxzdj6j-cbtcz   31m
    >   default     aglais-one-md-0-d7508522-tr7qq   aglais-one                                        aglais-one-md-0-59585664fbxzdj6j-m52n8   31m
    >   default     aglais-one-md-0-d7508522-tz6sl   aglais-one                                        aglais-one-md-0-59585664fbxzdj6j-nwm66   31m


    kubectl get \
         --all-namespaces \
            OpenStackMachineTemplate

    >   NAMESPACE   NAME                                AGE
    >   default     aglais-one-control-plane-d7508522   31m
    >   default     aglais-one-md-0-d7508522            31m


    kubectl get \
        --output yaml \
            OpenStackMachineTemplate \
                aglais-one-control-plane-d7508522

    >   apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
    >   kind: OpenStackMachineTemplate
    >   metadata:
    >     annotations:
    >       capi.stackhpc.com/template-checksum: d750852299a739a98a5737afd3322c91ee4220bd067371c1ff8cc9a6b48d03a9
    >       helm.sh/resource-policy: keep
    >       meta.helm.sh/release-name: aglais-one
    >       meta.helm.sh/release-namespace: default
    >     creationTimestamp: "2023-04-26T15:54:36Z"
    >     generation: 1
    >     labels:
    >       app.kubernetes.io/managed-by: Helm
    >       capi.stackhpc.com/cluster: aglais-one
    >       capi.stackhpc.com/component: control-plane
    >       capi.stackhpc.com/infrastructure-provider: openstack
    >       capi.stackhpc.com/managed-by: Helm
    >       helm.sh/chart: openstack-cluster-0.1.0
    >     name: aglais-one-control-plane-d7508522
    >     namespace: default
    >     ownerReferences:
    >     - apiVersion: cluster.x-k8s.io/v1beta1
    >       kind: Cluster
    >       name: aglais-one
    >       uid: dbf34892-802f-4ad9-a29c-0ad7fe043401
    >     resourceVersion: "3543"
    >     uid: ba12aa2b-5c47-43f9-8fc8-85f98e2ef72f
    >   spec:
    >     template:
    >       spec:
    >         cloudName: openstack
    >         flavor: gaia.vm.cclake.4vcpu
    >         identityRef:
    >           kind: Secret
    >           name: aglais-one-cloud-credentials
    >         image: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >         sshKeyName: iris-gaia-red-admin-20230426-keypair

    #
    # Not configured properly.
    #

    >   ....
    >   spec:
    >     template:
    >       spec:
    >         cloudName: openstack
    >         flavor: gaia.vm.cclake.4vcpu
    >         identityRef:
    >           kind: Secret
    >           name: aglais-one-cloud-credentials
    >         image: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >         sshKeyName: iris-gaia-red-admin-20230426-keypair
    >   ....

    #
    # It gets the flavor name and key name right, but cloud name is wrong.
    #



    kubectl get \
        --output yaml \
            OpenStackMachineTemplate \
                aglais-one-md-0-d7508522

    >   apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
    >   kind: OpenStackMachineTemplate
    >   metadata:
    >     annotations:
    >       capi.stackhpc.com/template-checksum: d750852299a739a98a5737afd3322c91ee4220bd067371c1ff8cc9a6b48d03a9
    >       helm.sh/resource-policy: keep
    >       meta.helm.sh/release-name: aglais-one
    >       meta.helm.sh/release-namespace: default
    >     creationTimestamp: "2023-04-26T15:54:36Z"
    >     generation: 1
    >     labels:
    >       app.kubernetes.io/managed-by: Helm
    >       capi.stackhpc.com/cluster: aglais-one
    >       capi.stackhpc.com/component: worker
    >       capi.stackhpc.com/infrastructure-provider: openstack
    >       capi.stackhpc.com/managed-by: Helm
    >       capi.stackhpc.com/node-group: md-0
    >       helm.sh/chart: openstack-cluster-0.1.0
    >     name: aglais-one-md-0-d7508522
    >     namespace: default
    >     ownerReferences:
    >     - apiVersion: cluster.x-k8s.io/v1beta1
    >       kind: Cluster
    >       name: aglais-one
    >       uid: dbf34892-802f-4ad9-a29c-0ad7fe043401
    >     resourceVersion: "3544"
    >     uid: 3ba172c8-baf3-4026-b924-6a523ef5ffe7
    >   spec:
    >     template:
    >       spec:
    >         cloudName: openstack
    >         flavor: gaia.vm.cclake.4vcpu
    >         identityRef:
    >           kind: Secret
    >           name: aglais-one-cloud-credentials
    >         image: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >         sshKeyName: iris-gaia-red-admin-20230426-keypair

    #
    # Not configured properly.
    #

    >   ....
    >   spec:
    >     template:
    >       spec:
    >         cloudName: openstack
    >         flavor: gaia.vm.cclake.4vcpu
    >   ....

    #
    # It gets the flavor name and key name right, but cloud name is wrong.
    #


    kubectl get \
        --output yaml \
            OpenStackMachine \
                aglais-one-md-0-d7508522-6hnnq

    >   apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
    >   kind: OpenStackMachine
    >   metadata:
    >     annotations:
    >       cluster.x-k8s.io/cloned-from-groupkind: OpenStackMachineTemplate.infrastructure.cluster.x-k8s.io
    >       cluster.x-k8s.io/cloned-from-name: aglais-one-md-0-d7508522
    >     creationTimestamp: "2023-04-26T15:54:37Z"
    >     finalizers:
    >     - openstackmachine.infrastructure.cluster.x-k8s.io
    >     generation: 1
    >     labels:
    >       capi.stackhpc.com/cluster: aglais-one
    >       capi.stackhpc.com/component: worker
    >       capi.stackhpc.com/node-group: md-0
    >       cluster.x-k8s.io/cluster-name: aglais-one
    >       cluster.x-k8s.io/deployment-name: aglais-one-md-0
    >       cluster.x-k8s.io/set-name: aglais-one-md-0-59585664fbxzdj6j
    >       machine-template-hash: 1514122096-dnrhr
    >     name: aglais-one-md-0-d7508522-6hnnq
    >     namespace: default
    >     ownerReferences:
    >     - apiVersion: cluster.x-k8s.io/v1beta1
    >       blockOwnerDeletion: true
    >       controller: true
    >       kind: Machine
    >       name: aglais-one-md-0-59585664fbxzdj6j-m5zgp
    >       uid: 6eb4b491-e739-48af-9b52-9cf0ffb3e616
    >     resourceVersion: "3676"
    >     uid: d9bddd6d-7b80-45fd-9027-bb40e7650da9
    >   spec:
    >     cloudName: openstack
    >     flavor: gaia.vm.cclake.4vcpu
    >     identityRef:
    >       kind: Secret
    >       name: aglais-one-cloud-credentials
    >     image: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >     sshKeyName: iris-gaia-red-admin-20230426-keypair
    >   status:
    >     conditions:
    >     - lastTransitionTime: "2023-04-26T15:54:38Z"
    >       reason: WaitingForClusterInfrastructure
    >       severity: Info
    >       status: "False"
    >       type: Ready
    >     - lastTransitionTime: "2023-04-26T15:54:38Z"
    >       reason: WaitingForClusterInfrastructure
    >       severity: Info
    >       status: "False"
    >       type: InstanceReady

    #
    # Not configured properly.
    #

    >   ....
    >   spec:
    >     cloudName: openstack
    >     flavor: gaia.vm.cclake.4vcpu
    >     identityRef:
    >       kind: Secret
    >       name: aglais-one-cloud-credentials
    >     image: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >     sshKeyName: iris-gaia-red-admin-20230426-keypair
    >   ....

    #
    # It gets the flavor name and key name right, but cloud name is wrong.
    #

# -----------------------------------------------------
# -----------------------------------------------------

    #
    # Check the settings in the STFC cloud config.
    #

    >   ....
    >   ....
    >   # The name of the cloud to use from the specified clouds.yaml
    >   cloudName: openstack
    >   ....
    >   ....
    >   # Settings for the OpenStack networking for the cluster
    >   clusterNetworking:
    >     # Custom nameservers to use for the hosts
    >     dnsNameservers:
    >       - 130.246.209.132
    >       - 130.246.209.163
    >       - 130.246.208.220
    >     externalNetworkId: External
    >   ....


# -----------------------------------------------------
# Update our cluster config.
#[root@bootstrap]

    yq eval \
        --inplace \
        "
        .clusterNetworking.dnsNameservers.[0] = \"${OPENSTACK_DNS_NAMESERVERS:?}\" |
        .clusterNetworking.externalNetworkId = \"${OPENSTACK_EXTERNAL_NETWORK_ID:?}\"
        " '/etc/aglais/workload-cluster.yaml'

    yq '/etc/aglais/workload-cluster.yaml'

    >   cloudName: iris-gaia-red-admin
    >   kubernetesVersion: 1.25.4
    >   machineImage: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >   machineSSHKeyName: iris-gaia-red-admin-20230426-keypair
    >   controlPlane:
    >     machineFlavor: gaia.vm.cclake.4vcpu
    >   dnsNameservers: 131.111.8.42
    >   externalNetworkId: 57add367-d205-4030-a929-d75617a7c63e
    >   nodeGroups:
    >     - name: md-0
    >       machineFlavor: gaia.vm.cclake.4vcpu
    >       machineCount: 4
    >   clusterNetworking:
    >     dnsNameservers:
    >       - 131.111.8.42
    >     externalNetworkId: 57add367-d205-4030-a929-d75617a7c63e


# -----------------------------------------------------
# Initialise another cluster ...
#[root@bootstrap]

    CLUSTER_NAME=aglais-two

    helm install \
        "${CLUSTER_NAME:?}" \
        capi/openstack-cluster \
            --values '/etc/aglais/workload-cluster.yaml' \
            --values '/etc/aglais/openstack-clouds.yaml'

    >   ....
    >   ....


    kubectl get cluster-api

    >   NAME                                                                   CLUSTER      BOOTSTRAP   TARGET NAMESPACE         RELEASE NAME                PHASE        REVISION   CHART NAME                           CHART VERSION   AGE
    >   helmrelease.addons.stackhpc.com/aglais-two-ccm-openstack               aglais-two   true        openstack-system         ccm-openstack               Deployed     1          openstack-cloud-controller-manager   1.3.0           6m24s
    >   helmrelease.addons.stackhpc.com/aglais-two-cni-calico                  aglais-two   true        tigera-operator          cni-calico                  Installing              tigera-operator                      v3.23.3         6m24s
    >   helmrelease.addons.stackhpc.com/aglais-two-csi-cinder                  aglais-two   true        openstack-system         csi-cinder                  Installing              openstack-cinder-csi                 2.2.0           6m24s
    >   helmrelease.addons.stackhpc.com/aglais-two-mellanox-network-operator   aglais-two   true        network-operator         mellanox-network-operator   Installing              network-operator                     1.3.0           6m24s
    >   helmrelease.addons.stackhpc.com/aglais-two-metrics-server              aglais-two   true        kube-system              metrics-server              Installing              metrics-server                       3.8.2           6m24s
    >   helmrelease.addons.stackhpc.com/aglais-two-node-feature-discovery      aglais-two   true        node-feature-discovery   node-feature-discovery      Installing              node-feature-discovery               0.11.2          6m24s
    >   helmrelease.addons.stackhpc.com/aglais-two-nvidia-gpu-operator         aglais-two   true        gpu-operator             nvidia-gpu-operator         Installing              gpu-operator                         v1.11.1         6m24s
    >   
    >   NAME                                                               CLUSTER      BOOTSTRAP   TARGET NAMESPACE   RELEASE NAME              PHASE      REVISION   AGE
    >   manifests.addons.stackhpc.com/aglais-two-cloud-config              aglais-two   true        openstack-system   cloud-config              Deployed   1          6m24s
    >   manifests.addons.stackhpc.com/aglais-two-csi-cinder-storageclass   aglais-two   true        openstack-system   csi-cinder-storageclass   Deployed   1          6m24s
    >   
    >   NAME                                                                        AGE
    >   kubeadmconfigtemplate.bootstrap.cluster.x-k8s.io/aglais-two-md-0-99910806   6m24s
    >   
    >   NAME                                                                      CLUSTER      AGE
    >   kubeadmconfig.bootstrap.cluster.x-k8s.io/aglais-two-control-plane-hfm9n   aglais-two   4m14s
    >   kubeadmconfig.bootstrap.cluster.x-k8s.io/aglais-two-md-0-99910806-jk2lg   aglais-two   6m24s
    >   kubeadmconfig.bootstrap.cluster.x-k8s.io/aglais-two-md-0-99910806-qjmmn   aglais-two   6m23s
    >   kubeadmconfig.bootstrap.cluster.x-k8s.io/aglais-two-md-0-99910806-vc5kf   aglais-two   6m23s
    >   kubeadmconfig.bootstrap.cluster.x-k8s.io/aglais-two-md-0-99910806-w5gtv   aglais-two   6m24s
    >   
    >   NAME                                                           CLUSTER      REPLICAS   READY   AVAILABLE   AGE     VERSION
    >   machineset.cluster.x-k8s.io/aglais-two-md-0-665bb9966dxjgxsd   aglais-two   4                              6m24s   v1.25.4
    >   
    >   NAME                                  PHASE          AGE     VERSION
    >   cluster.cluster.x-k8s.io/aglais-two   Provisioned    6m24s
    >   
    >   NAME                                                           CLUSTER      EXPECTEDMACHINES   MAXUNHEALTHY   CURRENTHEALTHY   AGE
    >   machinehealthcheck.cluster.x-k8s.io/aglais-two-control-plane   aglais-two   1                  100%                            6m24s
    >   machinehealthcheck.cluster.x-k8s.io/aglais-two-md-0            aglais-two   4                  100%                            6m24s
    >   
    >   NAME                                                              CLUSTER      NODENAME   PROVIDERID                                          PHASE         AGE     VERSION
    >   machine.cluster.x-k8s.io/aglais-two-control-plane-dwj68           aglais-two              openstack:///15fdd3e4-1519-4722-bddb-3ec5df344fb1   Provisioned   4m14s   v1.25.4
    >   machine.cluster.x-k8s.io/aglais-two-md-0-665bb9966dxjgxsd-sxl6r   aglais-two              openstack:///a8156f93-d529-4499-9720-7c06718b429e   Provisioned   6m23s   v1.25.4
    >   machine.cluster.x-k8s.io/aglais-two-md-0-665bb9966dxjgxsd-w4sfh   aglais-two              openstack:///eb5d45e2-7f09-4b95-9fa4-285fcee74a3a   Provisioned   6m24s   v1.25.4
    >   machine.cluster.x-k8s.io/aglais-two-md-0-665bb9966dxjgxsd-wnsc8   aglais-two              openstack:///17880f5f-bcb0-458a-8ad9-dce055bb7028   Provisioned   6m23s   v1.25.4
    >   machine.cluster.x-k8s.io/aglais-two-md-0-665bb9966dxjgxsd-wt7qs   aglais-two              openstack:///cae73418-39ee-4794-95a3-63b99fb280bd   Provisioned   6m23s   v1.25.4
    >   
    >   NAME                                                 CLUSTER      REPLICAS   READY   UPDATED   UNAVAILABLE   PHASE       AGE     VERSION
    >   machinedeployment.cluster.x-k8s.io/aglais-two-md-0   aglais-two   4                  4         4             ScalingUp   6m24s   v1.25.4
    >   
    >   NAME                                                                         CLUSTER      INITIALIZED   API SERVER AVAILABLE   REPLICAS   READY   UPDATED   UNAVAILABLE   AGE     VERSION
    >   kubeadmcontrolplane.controlplane.cluster.x-k8s.io/aglais-two-control-plane   aglais-two   true                                 1                  1         1             6m24s   v1.25.4
    >   
    >   NAME                                                          CLUSTER      READY   NETWORK                                SUBNET                                 BASTION IP   AGE
    >   openstackcluster.infrastructure.cluster.x-k8s.io/aglais-two   aglais-two   true    62af8865-9fbc-411a-85db-fdc073fa59f4   583827cc-497c-4669-9072-fdae4b28e7b4                6m24s
    >   
    >   NAME                                                                                       CLUSTER      INSTANCESTATE   READY   PROVIDERID                                          MACHINE                                  AGE
    >   openstackmachine.infrastructure.cluster.x-k8s.io/aglais-two-control-plane-7ce86d00-mt5fs   aglais-two   ACTIVE          true    openstack:///15fdd3e4-1519-4722-bddb-3ec5df344fb1   aglais-two-control-plane-dwj68           4m14s
    >   openstackmachine.infrastructure.cluster.x-k8s.io/aglais-two-md-0-7ce86d00-bmft9            aglais-two   ACTIVE          true    openstack:///17880f5f-bcb0-458a-8ad9-dce055bb7028   aglais-two-md-0-665bb9966dxjgxsd-wnsc8   6m23s
    >   openstackmachine.infrastructure.cluster.x-k8s.io/aglais-two-md-0-7ce86d00-gprcg            aglais-two   ACTIVE          true    openstack:///cae73418-39ee-4794-95a3-63b99fb280bd   aglais-two-md-0-665bb9966dxjgxsd-wt7qs   6m23s
    >   openstackmachine.infrastructure.cluster.x-k8s.io/aglais-two-md-0-7ce86d00-thlk8            aglais-two   ACTIVE          true    openstack:///a8156f93-d529-4499-9720-7c06718b429e   aglais-two-md-0-665bb9966dxjgxsd-sxl6r   6m23s
    >   openstackmachine.infrastructure.cluster.x-k8s.io/aglais-two-md-0-7ce86d00-zqzsp            aglais-two   ACTIVE          true    openstack:///eb5d45e2-7f09-4b95-9fa4-285fcee74a3a   aglais-two-md-0-665bb9966dxjgxsd-w4sfh   6m24s
    >   
    >   NAME                                                                                         AGE
    >   openstackmachinetemplate.infrastructure.cluster.x-k8s.io/aglais-two-control-plane-7ce86d00   6m24s
    >   openstackmachinetemplate.infrastructure.cluster.x-k8s.io/aglais-two-md-0-7ce86d00            6m24s

    kubectl get machinedeployment

    >   NAME              CLUSTER      REPLICAS   READY   UPDATED   UNAVAILABLE   PHASE       AGE   VERSION
    >   aglais-two-md-0   aglais-two   4                  4         4             ScalingUp   10m   v1.25.4


    kubectl get \
        OpenStackMachine

    >           OpenStackMachine
    >   NAME                                      CLUSTER      INSTANCESTATE   READY   PROVIDERID                                          MACHINE                                  AGE
    >   aglais-two-control-plane-7ce86d00-mt5fs   aglais-two   ACTIVE          true    openstack:///15fdd3e4-1519-4722-bddb-3ec5df344fb1   aglais-two-control-plane-dwj68           18m
    >   aglais-two-md-0-7ce86d00-222zw            aglais-two   ACTIVE          true    openstack:///1486e3ce-a38b-4d39-8ff9-67f3fded6326   aglais-two-md-0-665bb9966dxjgxsd-zvtxr   7m18s
    >   aglais-two-md-0-7ce86d00-6ffhr            aglais-two   ACTIVE          true    openstack:///2e21f25b-9b23-4386-b384-3223154b4d8b   aglais-two-md-0-665bb9966dxjgxsd-f25bt   7m18s
    >   aglais-two-md-0-7ce86d00-946b4            aglais-two   ACTIVE          true    openstack:///7b81e5c1-27c4-412a-a4c9-e78ac2643207   aglais-two-md-0-665bb9966dxjgxsd-wss47   7m17s
    >   aglais-two-md-0-7ce86d00-l2gjj            aglais-two   ACTIVE          true    openstack:///e495bc45-6c24-4dde-8f33-ac86e2214b33   aglais-two-md-0-665bb9966dxjgxsd-5wt8n   7m16s


    kubectl get \
        --output yaml \
            OpenStackMachine \
                aglais-two-md-0-7ce86d00-l2gjj

    >   apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
    >   kind: OpenStackMachine
    >   metadata:
    >     annotations:
    >       cluster.x-k8s.io/cloned-from-groupkind: OpenStackMachineTemplate.infrastructure.cluster.x-k8s.io
    >       cluster.x-k8s.io/cloned-from-name: aglais-two-md-0-7ce86d00
    >     creationTimestamp: "2023-04-26T17:30:34Z"
    >     finalizers:
    >     - openstackmachine.infrastructure.cluster.x-k8s.io
    >     generation: 2
    >     labels:
    >       capi.stackhpc.com/cluster: aglais-two
    >       capi.stackhpc.com/component: worker
    >       capi.stackhpc.com/node-group: md-0
    >       cluster.x-k8s.io/cluster-name: aglais-two
    >       cluster.x-k8s.io/deployment-name: aglais-two-md-0
    >       cluster.x-k8s.io/set-name: aglais-two-md-0-665bb9966dxjgxsd
    >       machine-template-hash: 2216655228-rpcz8
    >     name: aglais-two-md-0-7ce86d00-l2gjj
    >     namespace: default
    >     ownerReferences:
    >     - apiVersion: cluster.x-k8s.io/v1beta1
    >       blockOwnerDeletion: true
    >       controller: true
    >       kind: Machine
    >       name: aglais-two-md-0-665bb9966dxjgxsd-5wt8n
    >       uid: a2cb6ebc-4cd0-4398-8b07-83379a5ef16a
    >     resourceVersion: "32864"
    >     uid: 28ce4796-b072-493e-94f2-5372aee611ee
    >   spec:
    >     cloudName: openstack
    >     flavor: gaia.vm.cclake.4vcpu
    >     identityRef:
    >       kind: Secret
    >       name: aglais-two-cloud-credentials
    >     image: gaia-dmp-ubuntu-2004-kube-v1.25.4
    >     instanceID: e495bc45-6c24-4dde-8f33-ac86e2214b33
    >     providerID: openstack:///e495bc45-6c24-4dde-8f33-ac86e2214b33
    >     sshKeyName: iris-gaia-red-admin-20230426-keypair
    >   status:
    >     addresses:
    >     - address: 192.168.3.123
    >       type: InternalIP
    >     conditions:
    >     - lastTransitionTime: "2023-04-26T17:30:58Z"
    >       status: "True"
    >       type: Ready
    >     - lastTransitionTime: "2023-04-26T17:30:58Z"
    >       status: "True"
    >       type: InstanceReady
    >     instanceState: ACTIVE
    >     ready: true

    #
    # Still gets the cloud name wrong.
    #

    >   ....
    >   spec:
    >     cloudName: openstack
    >     flavor: gaia.vm.cclake.4vcpu
    >     ....


    clusterctl describe cluster ${CLUSTER_NAME:?}

    >   NAME                                                           READY  SEVERITY  REASON                       SINCE  MESSAGE
    >   Cluster/aglais-two                                             False  Warning   ScalingUp                    29m    Scaling up control plane to 3 replicas (actual 1)
    >   ├─ClusterInfrastructure - OpenStackCluster/aglais-two
    >   ├─ControlPlane - KubeadmControlPlane/aglais-two-control-plane  False  Warning   ScalingUp                    29m    Scaling up control plane to 3 replicas (actual 1)
    >   │ └─Machine/aglais-two-control-plane-dwj68                     False  Warning   NodeStartupTimeout           18m    Node failed to report startup in 10m0s
    >   └─Workers
    >     └─MachineDeployment/aglais-two-md-0                          False  Warning   WaitingForAvailableMachines  31m    Minimum availability requires 3 replicas, current 0 available
    >       └─4 Machines...                                            True                                          7m42s  See aglais-two-md-0-665bb9966dxjgxsd-bctnk, aglais-two-md-0-665bb9966dxjgxsd-d28mn, ...

# -----------------------------------------------------
# -----------------------------------------------------

    #
    # Another step closer ..
    #
    # Try again using commands from the STFC cloud example.
    # https://stfc-cloud-docs.readthedocs.io/en/latest/Kubernetes/CapiSetup.html#configuring-the-cluster

        helm repo add capi-addons https://stackhpc.github.io/cluster-api-addon-provider
        helm upgrade cluster-api-addon-provider capi-addons/cluster-api-addon-provider --install --version ">=0.1.0-dev.0.main.0,<0.1.0-dev.0.main.9999999999" --wait

        helm repo add capi https://stackhpc.github.io/capi-helm-charts
        helm upgrade $CLUSTER_NAME capi/openstack-cluster --install -f values.yaml -f clouds.yaml -f user-values.yaml -f flavors.yaml --wait



