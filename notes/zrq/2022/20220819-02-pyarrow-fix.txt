#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Fix an issue with the version of PyArrow.

        One of our dependencies includes PyArrow, without specifying the version.
        Latest release of PyArrow fails to compile.
        Result is our project fails to build, despite no changes to our dependencies list.

    Result:

        Work in progress ...

# -----------------------------------------------------

    >   ....
    >   ....
    >   TASK [Install the required Python packages] ************************************
    >   fatal: [zeppelin]: FAILED! => {
    >       "changed": false,
    >       "cmd": [
    >           "/usr/bin/python3",
    >           "-m",
    >           "pip.__main__",
    >           "install",
    >           "-r",
    >           "/tmp/requirements.txt"
    >           ],
    >       "msg": "stdout:
    >   Collecting git+https://github.com/wfau/gaiadmpsetup@v0.1.3 (from -r /tmp/requirements.txt (line 17))
    >     Cloning https://github.com/wfau/gaiadmpsetup (to revision v0.1.3) to ./pip-req-build-9veuk30j
    >   ....
    >   ....
    >   Collecting pyarrow>=0.10 (from koalas==1.8.2->-r /tmp/requirements.txt (line 15))
    >     Downloading https://files.pythonhosted.org/packages/80/2e/22fb489b4be6bc5c7202b7afd4ea3e941f9b1d79c0e3f59f64be8e92160d/pyarrow-9.0.0.tar.gz (873kB)
    >     Installing build dependencies: started
    >     Installing build dependencies: finished with status 'done'
    >     Getting requirements to build wheel: started
    >     Getting requirements to build wheel: finished with status 'done'
    >       Preparing wheel metadata: started
    >       Preparing wheel metadata: finished with status 'done'
    >   ....
    >   ....
    >   Building wheels for collected packages: hdbscan, pyarrow, argon2-cffi-bindings
    >     Building wheel for hdbscan (PEP 517): started
    >     Building wheel for hdbscan (PEP 517): finished with status 'done'
    >     Stored in directory: /root/.cache/pip/wheels/42/63/fb/314ad6c3b270887a3ecb588b8e5aac50b0fad38ff89bb6dff2
    >     Building wheel for pyarrow (PEP 517): started
    >     Building wheel for pyarrow (PEP 517): finished with status 'error'
    >     Running setup.py clean for pyarrow
    >     Building wheel for argon2-cffi-bindings (PEP 517): started
    >     Building wheel for argon2-cffi-bindings (PEP 517): finished with status 'done'
    >     Stored in directory: /root/.cache/pip/wheels/26/f9/3c/bbbffbf3f8fbe065773fdfba1a9ae8a40d317b03e9feffc93e
    >   Successfully built hdbscan argon2-cffi-bindings
    >   Failed to build pyarrow
    >
    >   :stderr:
    >   WARNING: Running pip install with root privileges is generally not a good idea. Try `python3 -m pip install --user` instead.
    >     Running command git clone -q https://github.com/wfau/gaiadmpsetup /tmp/pip-req-build-9veuk30j
    >     ERROR: Complete output from command /usr/bin/python3 /usr/lib/python3.7/site-packages/pip/_vendor/pep517/_in_process.py build_wheel /tmp/tmp_ulcuj98:
    >     ERROR: running bdist_wheel
    >     running build
    >     running build_py
    >     creating build
    >     creating build/lib.linux-x86_64-cpython-37
    >     creating build/lib.linux-x86_64-cpython-37/pyarrow
    >     copying pyarrow/benchmark.py -> build/lib.linux-x86_64-cpython-37/pyarrow
    >     copying pyarrow/__init__.py -> build/lib.linux-x86_64-cpython-37/pyarrow
    >     ....
    >     ....
    >     copying pyarrow/tests/data/parquet/v0.7.1.parquet -> build/lib.linux-x86_64-cpython-37/pyarrow/tests/data/parquet
    >     copying pyarrow/tests/data/parquet/v0.7.1.some-named-index.parquet -> build/lib.linux-x86_64-cpython-37/pyarrow/tests/data/parquet
    >     running build_ext
    >     creating /tmp/pip-install-s07zxiig/pyarrow/build/temp.linux-x86_64-cpython-37
    >     -- Running cmake for pyarrow
    >     cmake -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPython3_EXECUTABLE=/usr/bin/python3 \"\" -DPYARROW_BUILD_CUDA=off -DPYARROW_BUILD_SUBSTRAIT=off -DPYARROW_BUILD_FLIGHT=off -DPYARROW_BUILD_GANDIVA=off -DPYARROW_BUILD_DATASET=off -DPYARROW_BUILD_ORC=off -DPYARROW_BUILD_PARQUET=off -DPYARROW_BUILD_PARQUET_ENCRYPTION=off -DPYARROW_BUILD_PLASMA=off -DPYARROW_BUILD_GCS=off -DPYARROW_BUILD_S3=off -DPYARROW_BUILD_HDFS=off -DPYARROW_USE_TENSORFLOW=off -DPYARROW_BUNDLE_ARROW_CPP=off -DPYARROW_BUNDLE_BOOST=off -DPYARROW_GENERATE_COVERAGE=off -DPYARROW_BOOST_USE_SHARED=on -DPYARROW_PARQUET_USE_SHARED=on -DCMAKE_BUILD_TYPE=release /tmp/pip-install-s07zxiig/pyarrow
    >     error: command 'cmake' failed: No such file or directory: 'cmake'
    >     ----------------------------------------
    >     ERROR: Failed building wheel for pyarrow
    >   ERROR: Could not build wheels for pyarrow which use PEP 517 and cannot be installed directly
    >   "}

    #
    # Why has this changed !?
    # Is this anything to do with us ?
    #
    # Found the release history for pyarrow.
    # https://pypi.org/project/pyarrow/#history
    #

    version 9.0.0 released 3rd Aug 2022     <- THIS !!


# -----------------------------------------------------
# Create a new branch to work on.
#[user@desktop]

    branchname=pyarrow-version-fix

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        newbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout master

        git checkout -b "${newbranch:?}"

        git push --set-upstream 'origin' "$(git branch --show-current)"

    popd


# -----------------------------------------------------
# Fix the version of pyarrow.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        gedit deployments/common/pip/requirements.txt

            ....
        +   pyarrow==8.0.0
            koalas==1.8.2

    popd


# -----------------------------------------------------
# Check which cloud is live.
#[user@desktop]

    ssh fedora@live.aglais.uk \
        '
        date
        hostname
        '

    >   Fri 19 Aug 15:18:21 UTC 2022
    >   iris-gaia-blue-20220803-zeppelin


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    #
    # Starting a new pattern for creating the client container.
    # Working towards a launch-script.
    # https://github.com/wfau/aglais/issues/894

    source "${HOME:?}/aglais.env"

    agcolour=green

    agproxymap=3000:3000
    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}
    configname=zeppelin-26.43-spark-3.26.43

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "${agproxymap:?}" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   ....
    >   ....
    >   TASK [Install the required Python packages] ************************************
    >   changed: [zeppelin]
    >   changed: [worker01]
    >   changed: [worker02]
    >   changed: [worker03]
    >   changed: [master01]
    >   ....
    >   ....


