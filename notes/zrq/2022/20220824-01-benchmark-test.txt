#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Run some tests on our new deployment.

    Result:

        PASS - All the examples worked apart from one.
               The ERROR corresponds to the version of example 4 edited by SGoughKelly
               https://github.com/wfau/gaia-dmp/issues/977


# -----------------------------------------------------
# User the REST tools to run the user's examples.
#[root@ansibler]

    source /deployments/zeppelin/bin/zeppelin-rest-tools.sh

    zeppelinurl="http://localhost:8080"

    username=$(
        jq -r '
           .users[0].shirouser.name
           ' /tmp/test-users.json
        )

    userpass=$(
        jq -r '
           .users[0].shirouser.password
           ' /tmp/test-users.json
        )

    zeplogin "${username:?}" "${userpass:?}"

    >   {
    >     "status": "OK",
    >     "message": "",
    >     "body": {
    >       "principal": "Reyesfan",
    >       "ticket": "affcd77b-2c8f-4383-a9c7-6c6c43bc9807",
    >       "roles": "[]"
    >     }
    >   }


    testall "${username:?}" "${userpass:?}" \
    | tee /tmp/testall.txt

    head /tmp/testall.txt

    >   {
    >   "login": {
    >     "status": "OK",
    >     "message": "",
    >     "body": {
    >       "principal": "Reyesfan",
    >       "ticket": "affcd77b-2c8f-4383-a9c7-6c6c43bc9807",
    >       "roles": "[]"
    >     }
    >   },
    >   ....
    >   ....

    tail /tmp/testall.txt

    >   ....
    >   ....
    >       ,
    >       "duration": "0:0:0"
    >       }
    >       ],
    >   "duration": "0:0:19"
    >   }
    >   }
    >       ],
    >       "duration": "0:12:8"
    >   }


    jq '
        [
        .notebooks[].execute.paragraphs[] | {"title": .title, "status": .execute.status, "code": .execute.body.code }
        ]
        ' /tmp/testall.txt

    >   [
    >     {
    >       "title": "Introduction",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Familiarisation",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Zeppelin notebooks",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "PySpark SQL",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Example code from previous cell",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Spark aspects",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Further reading and resources",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Introduction",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Database and table details",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "N.B.",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Description and links",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Column listing for a table",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Querying the main catalogue",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Querying with cross-matched data",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Things to note",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Set the resolution level and define the query",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Plot up the results",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Further reading and resources",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Introduction",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Set HEALPix resolution",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Define a data frame by SQL query",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Mean RA proper motion plot",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Mean Dec proper motion plot",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "ERROR"
    >     },
    >     {
    >       "title": "Introduction",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Sampling and plotting spectra (continuous representation)",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Searching for similar spectra - COMING SOON!",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Further information",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Introduction",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Standard platform set-up",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Utility function definitions",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Define a data aggregation",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Collect the results and process in preparation for visualisation",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Visualise via matplotlib",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Further reading",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Basic catalogue query selections and predicates",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Raw catalogue with selected columns",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Visualisation (colour / absolute-magnitue diagram) of the raw catalogue",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Define the training samples",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Assemble training and reserve test sets",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Train up the Random Forrest",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Check feature set for nulls",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Classify the reserved test sets",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Classification confusion matrix",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Relative importance of the selected features",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Apply the classification model and plot sample results",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Histogram of classification probability",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Sky distribution of good source sample",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Sky distribution of bad source sample",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Tidy up",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Further reading and resources",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Resetting the Spark context",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Exporting data from the platform using ssh",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Interpreters",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Getting Python help (PySpark)",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Getting Python help (IPython)",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Dynamic input forms",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Data frame formatted table display",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Simple matplotlib example",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Plotting from multiple cells in matplotlib",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "First cell - this has the plot with the first line",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Second line",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Label axes",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Add legend",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Add title",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "Pandas and matplotlib",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     },
    >     {
    >       "title": "null",
    >       "status": "OK",
    >       "code": "SUCCESS"
    >     }
    >   ]

    #
    # Looks like they all worked apart from one.
    # The ERROR corresponds to the version of example 4 edited by SGoughKelly
    # https://github.com/wfau/gaia-dmp/issues/977
    #


