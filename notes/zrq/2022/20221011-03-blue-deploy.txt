#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Final deployment with clean copy of the notebooks.

    Result:

        Deployment worked fine, but everything is running slow.
        Previous deployment took 46min, this deployment took 80m.

        Examples are also running extremely slow.
        Random forest example prev deploy took 0:11:32, this deploy took 1:27:58.

        Stelios reporting similar performance issues with deployments on iris-gaia-red.

        Contacted Paul B. at Cambridge via IRIS TWG Slack.

        Posted lists of Openstack resources for comparison.
          deployments/openstack/bin/list-all.sh



# -----------------------------------------------------
# Backup the current notebooks.
#[user@desktop]

    ssh fedora@data.gaia-dmp.uk

        colour=live

        sshuser=fedora
        sshhost=${colour:?}.aglais.uk

        ssh-keyscan "${colour:?}.aglais.uk" 2>/dev/null >> "${HOME}/.ssh/known_hosts"

        pushd /var/local/backups
            pushd notebooks

                datetime=$(date '+%Y%m%d-%H%M%S')
                backname="${datetime:?}-${colour:?}-notebooks"

                mkdir "${backname}"

                rsync \
                    --perms \
                    --times \
                    --group \
                    --owner \
                    --stats \
                    --progress \
                    --exclude '~Trash' \
                    --human-readable \
                    --checksum \
                    --recursive \
                    --rsync-path 'sudo rsync' \
                    "${sshuser:?}@${sshhost:?}:/home/fedora/zeppelin/notebook" \
                    "${backname:?}"

                rsync \
                    --perms \
                    --times \
                    --group \
                    --owner \
                    --stats \
                    --progress \
                    --human-readable \
                    --checksum \
                    --recursive \
                    --rsync-path 'sudo rsync' \
                    "${sshuser:?}@${sshhost:?}:/home/fedora/zeppelin/conf/notebook-authorization.json" \
                    "${backname:?}"

                if [ -L 'latest' ]
                then
                    rm 'latest'
                fi
                ln -s "${backname:?}" 'latest'

            popd
        popd

        ls -al /var/local/backups/notebooks/

    >   ....
    >   ....
    >   drwxrwxr-x.  3 fedora fedora 4096 Oct 11 05:32 20221011-053152-live-notebooks
    >   drwxrwxr-x.  3 fedora fedora 4096 Oct 11 08:57 20221011-085755-live-notebooks
    >   drwxrwxr-x.  6 fedora fedora 4096 Jul 27 10:43 attic
    >   lrwxrwxrwx.  1 fedora fedora   30 Oct 11 08:57 latest -> 20221011-085755-live-notebooks


# -----------------------------------------------------
# Make a copy of the latest notebooks and delete the public examples.
#[user@data]

        pushd /var/local/backups
            pushd notebooks

                datetime=$(date '+%Y%m%d-%H%M%S')
                editname="${datetime:?}-edit-notebooks"

                cp -r -L 'latest' "${editname}"

                pushd "${editname}"

                    rm -rf 'notebook/Public Examples'

                popd

                rm 'latest'
                ln -s "${editname}" 'latest'

            popd
        popd

        ls -al /var/local/backups/notebooks/

    >   drwxrwxr-x.  3 fedora fedora 4096 Oct 11 08:57 20221011-085755-live-notebooks
    >   drwxrwxr-x.  3 fedora fedora 4096 Oct 11 08:58 20221011-085820-edit-notebooks
    >   drwxrwxr-x.  6 fedora fedora 4096 Jul 27 10:43 attic
    >   lrwxrwxrwx.  1 fedora fedora   30 Oct 11 08:58 latest -> 20221011-085820-edit-notebooks


# -----------------------------------------------------
# Investigate the 'spark-warehouse' directory.
#[user@data]

        ls -al /var/local/backups/notebooks/latest/notebook

    >   ....
    >   ....
    >   drwxrwxr-x.  7 fedora fedora 4096 Oct 11 08:58 .git
    >   drwxr-xr-x.  4 fedora fedora 4096 Oct 11 08:58 spark-warehouse
    >   drwxrwxr-x. 13 fedora fedora 4096 Oct 11 08:58 Users


        ls -al /var/local/backups/notebooks/latest/notebook/spark-warehouse/

    >   ....
    >   ....
    >   drwxr-xr-x. 2 fedora fedora 4096 Oct 11 08:58 gaiadr3.db
    >   drwxr-xr-x. 2 fedora fedora 4096 Oct 11 08:58 gaiaedr3.db


        du -h /var/local/backups/notebooks/latest/notebook/spark-warehouse/

    >   4.0K    /var/local/backups/notebooks/latest/notebook/spark-warehouse/gaiadr3.db
    >   4.0K    /var/local/backups/notebooks/latest/notebook/spark-warehouse/gaiaedr3.db
    >   12K     /var/local/backups/notebooks/latest/notebook/spark-warehouse/


        #
        # Not a notebook, so deleting it.
        rm -rf /var/local/backups/notebooks/latest/notebook/spark-warehouse


# -----------------------------------------------------
# -----------------------------------------------------
# Check which cloud is currently live.
#[user@desktop]

    ssh fedora@live.gaia-dmp.uk \
        '
        date
        hostname
        '

    >   Tue 11 Oct 09:11:49 UTC 2022
    >   iris-gaia-green-20220825-zeppelin


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    #
    # Live is green, selecting blue for the deployment.
    #

    source "${HOME:?}/aglais.env"

    agcolour=blue
    configname=zeppelin-54.86-spark-6.26.43

    agproxymap=3000:3000
    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "${agproxymap:?}" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   aglais:
    >     status:
    >       deployment:
    >         type: hadoop-yarn
    >         conf: zeppelin-54.86-spark-6.26.43
    >         name: iris-gaia-blue-20221011
    >         date: 20221011T105132
    >         hostname: zeppelin.gaia-dmp.uk
    >     spec:
    >       openstack:
    >         cloud:
    >           base: arcus
    >           name: iris-gaia-blue

    >   real    80m38.029s
    >   user    21m27.837s
    >   sys     5m30.359s

    #
    # Multiple attepts needed.
    # Calls to 'dnf install' failed.
    #

# -----------------------------------------------------
# Allow port 8080 (HTTP).
#[root@ansibler]

    groupid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            security group list \
                --format json \
        | jq -r '.[] | select(.Name | match("zeppelin-security")) | .ID'
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        security group rule create \
            --ingress \
            --protocol 'tcp' \
            --dst-port '8080:8080' \
            "${groupid}"

    >   +-------------------------+--------------------------------------+
    >   | Field                   | Value                                |
    >   +-------------------------+--------------------------------------+
    >   | created_at              | 2022-10-11T12:29:51Z                 |
    >   | description             |                                      |
    >   | direction               | ingress                              |
    >   | ether_type              | IPv4                                 |
    >   | id                      | 43abe9ed-acdc-4301-b0d9-c92e86316310 |
    >   | name                    | None                                 |
    >   | port_range_max          | 8080                                 |
    >   | port_range_min          | 8080                                 |
    >   | project_id              | e918a13fed2648758175a15fac083569     |
    >   | protocol                | tcp                                  |
    >   | remote_address_group_id | None                                 |
    >   | remote_group_id         | None                                 |
    >   | remote_ip_prefix        | 0.0.0.0/0                            |
    >   | revision_number         | 0                                    |
    >   | security_group_id       | a7a651ab-7978-4701-9b8b-0d280bd1fd9d |
    >   | tags                    | []                                   |
    >   | tenant_id               | e918a13fed2648758175a15fac083569     |
    >   | updated_at              | 2022-10-11T12:29:51Z                 |
    >   +-------------------------+--------------------------------------+


# -----------------------------------------------------
# Setup a SSH tunnel SOCKS proxy.
# https://unix.stackexchange.com/questions/34004/how-does-tcp-keepalive-work-in-ssh
# https://unix.stackexchange.com/a/34201
#[root@ansibler]

    ssh \
        -n \
        -f \
        -N \
        -D '*:3000' \
        -o ServerAliveInterval=10 \
        -o ServerAliveCountMax=12 \
        zeppelin

    >   ....
    >   ....


# -----------------------------------------------------
# Create a test user.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    username=$(pwgen 16 1)

    createusermain "${username}" \
    | tee "/tmp/${username}.json" \
    | jq '.shirouser | {"username": .name, "password": .password}'

    >   {
    >     "username": "aiXuPhaiR5veeRee",
    >     "password": "county rehab safari sasquatch"
    >   }


# -----------------------------------------------------
# Login as the new user.
#[root@ansibler]

    password=$(
        jq -r '.shirouser.password' "/tmp/${username}.json"
        )

    zeppelinurl=http://zeppelin:8080
    zepcookies=/tmp/${username:?}.cookies

    curl \
        --silent \
        --request 'POST' \
        --cookie-jar "${zepcookies:?}" \
        --data "userName=${username:?}" \
        --data "password=${password:?}" \
        "${zeppelinurl:?}/api/login" \
    | jq '.'

    >   {
    >     "status": "OK",
    >     "message": "",
    >     "body": {
    >       "principal": "aiXuPhaiR5veeRee",
    >       "ticket": "37b2b286-2e7d-430d-a538-4b3c6a132504",
    >       "roles": "[]"
    >     }
    >   }


# -----------------------------------------------------
# List notebooks the user can see.
#[root@ansibler]

    curl \
        --silent \
        --cookie "${zepcookies:?}" \
        "${zeppelinurl:?}/api/notebook" \
    | jq '.'

    >   {
    >     "status": "OK",
    >     "message": "",
    >     "body": [
    >       {
    >         "id": "2HHFPVWAG",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/1. Start here"
    >       },
    >       {
    >         "id": "2HGQ3YVAH",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/2. Data holdings"
    >       },
    >       {
    >         "id": "2HG2WWRQU",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/3. Source counts over the sky"
    >       },
    >       {
    >         "id": "2HEPHJU15",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/4. Mean proper motions over the sky"
    >       },
    >       {
    >         "id": "2HGVU3TDF",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/5. Working with Gaia XP spectra"
    >       },
    >       {
    >         "id": "2HEWB6YW3",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/6. Working with cross-matched surveys"
    >       },
    >       {
    >         "id": "2HF6S9ASM",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/7. Good astrometric solutions via ML Random Forest classifier"
    >       },
    >       {
    >         "id": "2HFP9MSFH",
    >         "path": "/Users/aiXuPhaiR5veeRee/examples/8. Tips and tricks"
    >       }
    >     ]
    >   }


# -----------------------------------------------------
# Run the ML RandomForest classifier example.
#[root@ansibler]

    source /deployments/zeppelin/bin/zeppelin-rest-tools.sh

    testall \
        "${username}" \
        "${password}" \
        "/Users/${username}/examples/7" \
    | tee "/tmp/${username}-testone.json" \
    | jq '
       .notebooks[] | {
            "id": .noteid,
            "name": .execute.name,
            "path": .execute.path,
            "duration": .execute.duration,
            "paragraphs": [
                .execute.paragraphs[] | {
                    "title": .title,
                    "duration": .duration
                    }
                ]
            }
       '

    >   {
    >     "id": "2HF6S9ASM",
    >     "name": "7. Good astrometric solutions via ML Random Forest classifier",
    >     "path": "/Users/aiXuPhaiR5veeRee/examples/7. Good astrometric solutions via ML Random Forest classifier",
    >     "duration": "1:27:58",
    >     "paragraphs": [
    >       {
    >         "title": "null",
    >         "duration": "0:1:20"
    >       },
    >       {
    >         "title": "Basic catalogue query selections and predicates",
    >         "duration": "0:1:48"
    >       },
    >       {
    >         "title": "Raw catalogue with selected columns",
    >         "duration": "0:8:7"
    >       },
    >       {
    >         "title": "Visualisation (colour / absolute-magnitue diagram) of the raw catalogue",
    >         "duration": "0:7:47"
    >       },
    >       {
    >         "title": "null",
    >         "duration": "0:1:16"
    >       },
    >       {
    >         "title": "Define the training samples",
    >         "duration": "0:7:32"
    >       },
    >       {
    >         "title": "Assemble training and reserve test sets",
    >         "duration": "0:1:23"
    >       },
    >       {
    >         "title": "Train up the Random Forest",
    >         "duration": "0:10:51"
    >       },
    >       {
    >         "title": "Check feature set for nulls",
    >         "duration": "0:1:22"
    >       },
    >       {
    >         "title": "Classify the reserved test sets",
    >         "duration": "0:1:21"
    >       },
    >       {
    >         "title": "Classification confusion matrix",
    >         "duration": "0:7:59"
    >       },
    >       {
    >         "title": "Relative importance of the selected features",
    >         "duration": "0:1:20"
    >       },
    >       {
    >         "title": "Apply the classification model and plot sample results",
    >         "duration": "0:8:1"
    >       },
    >       {
    >         "title": "Histogram of classification probability",
    >         "duration": "0:7:59"
    >       },
    >       {
    >         "title": "Sky distribution of good source sample",
    >         "duration": "0:7:55"
    >       },
    >       {
    >         "title": "Sky distribution of bad source sample",
    >         "duration": "0:7:41"
    >       },
    >       {
    >         "title": "Tidy up",
    >         "duration": "0:1:23"
    >       },
    >       {
    >         "title": "Further reading and resources",
    >         "duration": "0:1:24"
    >       },
    >       {
    >         "title": "null",
    >         "duration": "0:1:22"
    >       }
    >     ]
    >   }

    # Performance is terrible !!

    "duration": "1:27:58",


# -----------------------------------------------------
# Run the source counts example.
#[root@ansibler]

    source /deployments/zeppelin/bin/zeppelin-rest-tools.sh

    testall \
        "${username}" \
        "${password}" \
        "/Users/${username}/examples/3" \
    | tee "/tmp/${username}-testone.json" \
    | jq '
       .notebooks[] | {
            "id": .noteid,
            "name": .execute.name,
            "path": .execute.path,
            "duration": .execute.duration,
            "paragraphs": [
                .execute.paragraphs[] | {
                    "title": .title,
                    "duration": .duration
                    }
                ]
            }
       '

    >   {
    >     "id": "2HG2WWRQU",
    >     "name": "3. Source counts over the sky",
    >     "path": "/Users/aiXuPhaiR5veeRee/examples/3. Source counts over the sky",
    >     "duration": "0:7:32",
    >     "paragraphs": [
    >       {
    >         "title": "null",
    >         "duration": "0:1:16"
    >       },
    >       {
    >         "title": "Set the resolution level and define the query",
    >         "duration": "0:1:22"
    >       },
    >       {
    >         "title": "Plot up the results",
    >         "duration": "0:2:12"
    >       },
    >       {
    >         "title": "Further reading and resources",
    >         "duration": "0:1:20"
    >       },
    >       {
    >         "title": "null",
    >         "duration": "0:1:21"
    >       }
    >     ]
    >   }


# -----------------------------------------------------
# Run the proper motions example.
#[root@ansibler]

    source /deployments/zeppelin/bin/zeppelin-rest-tools.sh

    testall \
        "${username}" \
        "${password}" \
        "/Users/${username}/examples/4" \
    | tee "/tmp/${username}-testone.json" \
    | jq '
       .notebooks[] | {
            "id": .noteid,
            "name": .execute.name,
            "path": .execute.path,
            "duration": .execute.duration,
            "paragraphs": [
                .execute.paragraphs[] | {
                    "title": .title,
                    "duration": .duration
                    }
                ]
            }
       '


    >   {
    >     "id": "2HEPHJU15",
    >     "name": "4. Mean proper motions over the sky",
    >     "path": "/Users/aiXuPhaiR5veeRee/examples/4. Mean proper motions over the sky",
    >     "duration": "0:12:50",
    >     "paragraphs": [
    >       {
    >         "title": "Introduction",
    >         "duration": "0:1:21"
    >       },
    >       {
    >         "title": "Set HEALPix resolution",
    >         "duration": "0:1:21"
    >       },
    >       {
    >         "title": "Define a data frame by SQL query",
    >         "duration": "0:1:23"
    >       },
    >       {
    >         "title": "Mean RA proper motion plot",
    >         "duration": "0:3:0"
    >       },
    >       {
    >         "title": "Mean Dec proper motion plot",
    >         "duration": "0:1:34"
    >       },
    >       {
    >         "title": "Further reading and resources",
    >         "duration": "0:1:25"
    >       },
    >       {
    >         "title": "Tidy-up",
    >         "duration": "0:1:22"
    >       },
    >       {
    >         "title": "null",
    >         "duration": "0:1:22"
    >       }
    >     ]
    >   }


# -----------------------------------------------------

    Performance is terrible.

    Deployment     - 1:20:38
    Random Forest  - 1:27:58
    Source counts  - 0:07:32
    Proper motions - 0:12:50




