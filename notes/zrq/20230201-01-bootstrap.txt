#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Install K8s on O7k

        prerequisites:
          - bootstrap VM with public network access
          - Podman
            https://podman.io/
          - Kind
            https://kind.sigs.k8s.io/
            https://kubernetes.io/docs/tasks/tools/#kind
          - Kubectl
            https://kubernetes.io/docs/tasks/tools/#kubectl
          - Kubeadm
            https://kubernetes.io/docs/tasks/tools/#kubeadm

    Result:

        Work in progress ...

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    #
    # Live is red, selecting green for experimenting.
    #

    agcolour=green

    source "${HOME:?}/aglais.env"

    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "3000:3000" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# List the available VM images.
#[root@ansibler]

    openstack
        --os-cloud "${cloudname:?}"
        image list

    >   +--------------------------------------+------------------------------------------------+--------+
    >   | ID                                   | Name                                           | Status |
    >   +--------------------------------------+------------------------------------------------+--------+
    >   ....
    >   ....
    >   | 1779f380-780d-40d8-8052-b3acb91ed530 | Fedora-31-1.9                                  | active |
    >   | e62a71df-4bd2-4498-9eae-058ff476b5ad | Fedora-33-1.2                                  | active |
    >   | e5c23082-cc34-4213-ad31-ff4684657691 | Fedora-34.1.2                                  | active |
    >   | dcb41a5f-868a-4880-9fd5-04b95ab97c47 | FedoraAtomic29-20191126                        | active |
    >   | a079781f-80b7-4d89-95ae-ef65bfb0834f | FedoraCoreOS33                                 | active |
    >   | 191d3d4d-60cc-4b87-b4a7-0a03cc48a51e | FedoraCoreOS34                                 | active |
    >   | 7f7153a4-48f2-4e1f-a8f6-89ca70f3e2b6 | Rocky-8-GenericCloud-LVM.20221130.0.x86_64     | active |
    >   | e7432a57-9bf1-43f2-8ea5-5f4e5436b30e | Rocky-9-GenericCloud-LVM-9.1-20221130.0.x86_64 | active |
    >   | aebeee6a-1435-42fc-91f7-edc861a2d8cf | RockyLinux-8.5-20211114.2                      | active |
    >   ....
    >   ....
    >   +--------------------------------------+------------------------------------------------+--------+

    #
    # Looking for a redHat based OS to use.
    # Probably stick with Fedora for now.
    # Although these are quite old.
    # https://en.wikipedia.org/wiki/Fedora_Linux_release_history
    # Fedora 34 was released 2021-04-27 and end of life 2022-06-07.
    # Latest is Fedora 37.
    #

    #
    # I'd like to try using Fedora CoreOS.
    # Fedora CoreOS is an automatically-updating, minimal operating system for running containerized workloads securely and at scale.
    # https://getfedora.org/en/coreos/download?tab=cloud_operators&stream=stable&arch=x86_64
    #

# -----------------------------------------------------
# -----------------------------------------------------
# Edit our inventory to use Fedora CoreOS.
#[user@desktop]

    gedit deployments/cluster-api/bootstrap/ansible/config/inventory.yml &

    >   ....
    >   all:
    >       vars:
    >           baseimage:  "FedoraCoreOS34"
    >           tinyflavor: "gaia.vm.cclake.2vcpu"
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Add YAML editor role.
#[root@ansibler]

    ansible-galaxy install kwoodson.yedit

    >   Starting galaxy role install process
    >   - downloading role 'yedit', owned by kwoodson
    >   - downloading role from https://github.com/kwoodson/ansible-role-yedit/archive/master.tar.gz
    >   - extracting kwoodson.yedit to /root/.ansible/roles/kwoodson.yedit
    >   - kwoodson.yedit (master) was installed successfully


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    2m1.607s
    >   user    0m57.548s
    >   sys     0m6.406s


# -----------------------------------------------------
# Settings ...
#[root@ansibler]

    deployname=${cloudname:?}-$(date '+%Y%m%d')
    deploydate=$(date '+%Y%m%dT%H%M%S')

    statusyml='/opt/aglais/aglais-status.yml'
    if [ ! -e "$(dirname ${statusyml})" ]
    then
        mkdir "$(dirname ${statusyml})"
    fi
    rm -f "${statusyml}"
    touch "${statusyml}"

    yq eval \
        --inplace \
        "
        .aglais.deployment.type = \"cluster-api\"   |
        .aglais.deployment.name = \"${deployname}\" |
        .aglais.deployment.date = \"${deploydate}\" |
        .aglais.openstack.cloud.name = \"${cloudname}\"
        " "${statusyml}"


# -----------------------------------------------------
# Create our bootstrap components.
#[root@ansibler]

    inventory=/deployments/cluster-api/bootstrap/ansible/config/inventory.yml

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/01-create-keypair.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/02-create-network.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/03-create-bootstrap.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/04-local-config.yml'

    >   ....
    >   ....


# -----------------------------------------------------
# Check our local config.
#[root@ansibler]

    cat /opt/aglais/aglais-status.yml

    >   aglais:
    >     deployment:
    >       date: 20230201T035328
    >       name: iris-gaia-green-20230201
    >       type: cluster-api
    >     openstack:
    >       cloud:
    >         name: iris-gaia-green
    >       keypairs:
    >         team:
    >           fingerprint: 2e:84:98:98:df:70:06:0e:4c:ed:bd:d4:d6:6b:eb:16
    >           id: iris-gaia-green-20230201-keypair
    >           name: iris-gaia-green-20230201-keypair
    >       networks:
    >         internal:
    >           network:
    >             id: c06b190f-d4d5-4777-b6bb-a6c00ea4b471
    >             name: iris-gaia-green-20230201-internal-network
    >           router:
    >             id: eb9fa22e-1ae9-4719-b662-5bdfcca2814b
    >             name: iris-gaia-green-20230201-internal-router
    >           subnet:
    >             cidr: 10.10.0.0/16
    >             id: cbe8fb01-c641-4d83-abc8-591bc7e92b1f
    >             name: iris-gaia-green-20230201-internal-subnet
    >       servers:
    >         bootstrap:
    >           float:
    >             external: 128.232.222.70
    >             id: cf9928db-58f2-4f5b-b61d-ed1cafd7c9c0
    >             internal: 10.10.1.100
    >           server:
    >             address:
    >               ipv4: 10.10.1.100
    >             flavor:
    >               name: gaia.vm.cclake.2vcpu
    >             hostname: bootstrap
    >             id: d6a08e92-c2b4-4a31-9ea1-bdefaf234e43
    >             image:
    >               id: 191d3d4d-60cc-4b87-b4a7-0a03cc48a51e
    >               name: FedoraCoreOS34
    >             name: iris-gaia-green-20230201-bootstrap


# -----------------------------------------------------
# SSH test.
#[root@ansibler]

    ssh bootstrap 'date ; hostname'

    #
    # Fails to login ...
    # Because FedoraCore uses a different mechanism for assigning users and keys.
    #
    # We need to supply an ignition file.
    # https://docs.fedoraproject.org/en-US/fedora-coreos/provisioning-openstack/#_launching_a_vm_instance
    #
    # We need to install butane to create the ignition file.
    # https://docs.fedoraproject.org/en-US/fedora-coreos/producing-ign/
    #
    # OK, later.
    # Useful stuff about installing our own image into Ppenstack.
    # https://docs.fedoraproject.org/en-US/fedora-coreos/provisioning-openstack/
    #
    # Revert to basic Fedora for now ..
    #



# -----------------------------------------------------
# -----------------------------------------------------
# Edit our inventory to use standard Fedora.
#[user@desktop]

    gedit deployments/cluster-api/bootstrap/ansible/config/inventory.yml &

    >   ....
    >   all:
    >       vars:
    >           baseimage:  "Fedora-34.1.2"
    >           tinyflavor: "gaia.vm.cclake.2vcpu"
    >   ....


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    2m6.798s
    >   user    1m0.665s
    >   sys     0m6.799s


# -----------------------------------------------------
# Settings ...
#[root@ansibler]

    deployname=${cloudname:?}-$(date '+%Y%m%d')
    deploydate=$(date '+%Y%m%dT%H%M%S')

    statusyml='/opt/aglais/aglais-status.yml'
    if [ ! -e "$(dirname ${statusyml})" ]
    then
        mkdir "$(dirname ${statusyml})"
    fi
    rm -f "${statusyml}"
    touch "${statusyml}"

    yq eval \
        --inplace \
        "
        .aglais.deployment.type = \"cluster-api\"   |
        .aglais.deployment.name = \"${deployname}\" |
        .aglais.deployment.date = \"${deploydate}\" |
        .aglais.openstack.cloud.name = \"${cloudname}\"
        " "${statusyml}"


# -----------------------------------------------------
# Create our bootstrap components.
#[root@ansibler]

    inventory=/deployments/cluster-api/bootstrap/ansible/config/inventory.yml

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/01-create-keypair.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/02-create-network.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/03-create-bootstrap.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/04-local-config.yml'

    >   ....
    >   ....


# -----------------------------------------------------
# Check our local config.
#[root@ansibler]

    cat /opt/aglais/aglais-status.yml

    >   aglais:
    >     deployment:
    >       date: 20230201T043000
    >       name: iris-gaia-green-20230201
    >       type: cluster-api
    >     openstack:
    >       cloud:
    >         name: iris-gaia-green
    >       keypairs:
    >         team:
    >           fingerprint: 2e:84:98:98:df:70:06:0e:4c:ed:bd:d4:d6:6b:eb:16
    >           id: iris-gaia-green-20230201-keypair
    >           name: iris-gaia-green-20230201-keypair
    >       networks:
    >         internal:
    >           network:
    >             id: 68a1c873-fa25-43c4-8b97-94188918bcd5
    >             name: iris-gaia-green-20230201-internal-network
    >           router:
    >             id: fbbc6f5e-a120-4135-9d02-8ba5c658acd6
    >             name: iris-gaia-green-20230201-internal-router
    >           subnet:
    >             cidr: 10.10.0.0/16
    >             id: 7029f11f-838d-4d61-8c64-e98846d322dc
    >             name: iris-gaia-green-20230201-internal-subnet
    >       servers:
    >         bootstrap:
    >           float:
    >             external: 128.232.222.199
    >             id: afa3e92c-653b-4d65-8b97-93de834f869f
    >             internal: 10.10.0.184
    >           server:
    >             address:
    >               ipv4: 10.10.0.184
    >             flavor:
    >               name: gaia.vm.cclake.2vcpu
    >             hostname: bootstrap
    >             id: a4e07189-5ee4-4c1f-aa27-f389721cefd5
    >             image:
    >               id: e5c23082-cc34-4213-ad31-ff4684657691
    >               name: Fedora-34.1.2
    >             name: iris-gaia-green-20230201-bootstrap


# -----------------------------------------------------
# SSH test.
#[root@ansibler]

    ssh bootstrap 'date ; hostname'

    >   ssh: connect to host bootstrap port 22: Connection refused

    #
    # Firewall issue ?
    #


# -----------------------------------------------------
# -----------------------------------------------------
# Edit our inventory to use older Fedora.
#[user@desktop]

    gedit deployments/cluster-api/bootstrap/ansible/config/inventory.yml &

    >   ....
    >   all:
    >       vars:
    >           baseimage:  "Fedora-31-1.9"
    >           tinyflavor: "gaia.vm.cclake.2vcpu"
    >   ....


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    2m6.604s
    >   user    1m0.137s
    >   sys     0m6.860s


# -----------------------------------------------------
# Settings ...
#[root@ansibler]

    deployname=${cloudname:?}-$(date '+%Y%m%d')
    deploydate=$(date '+%Y%m%dT%H%M%S')

    statusyml='/opt/aglais/aglais-status.yml'
    if [ ! -e "$(dirname ${statusyml})" ]
    then
        mkdir "$(dirname ${statusyml})"
    fi
    rm -f "${statusyml}"
    touch "${statusyml}"

    yq eval \
        --inplace \
        "
        .aglais.deployment.type = \"cluster-api\"   |
        .aglais.deployment.name = \"${deployname}\" |
        .aglais.deployment.date = \"${deploydate}\" |
        .aglais.openstack.cloud.name = \"${cloudname}\"
        " "${statusyml}"


# -----------------------------------------------------
# Create our bootstrap components.
#[root@ansibler]

    inventory=/deployments/cluster-api/bootstrap/ansible/config/inventory.yml

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/01-create-keypair.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/02-create-network.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/03-create-bootstrap.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/04-local-config.yml'

    >   ....
    >   ....


# -----------------------------------------------------
# Check our local config.
#[root@ansibler]

    cat /opt/aglais/aglais-status.yml

    >   aglais:
    >     deployment:
    >       date: 20230201T043831
    >       name: iris-gaia-green-20230201
    >       type: cluster-api
    >     openstack:
    >       cloud:
    >         name: iris-gaia-green
    >       keypairs:
    >         team:
    >           fingerprint: 2e:84:98:98:df:70:06:0e:4c:ed:bd:d4:d6:6b:eb:16
    >           id: iris-gaia-green-20230201-keypair
    >           name: iris-gaia-green-20230201-keypair
    >       networks:
    >         internal:
    >           network:
    >             id: 6e91f87d-9c78-473a-8fa6-8acd46395b18
    >             name: iris-gaia-green-20230201-internal-network
    >           router:
    >             id: f68eb7ed-3859-4ae1-9dec-a38cbf88a119
    >             name: iris-gaia-green-20230201-internal-router
    >           subnet:
    >             cidr: 10.10.0.0/16
    >             id: 99a4e413-cf25-4538-8ed9-939c165bdf1b
    >             name: iris-gaia-green-20230201-internal-subnet
    >       servers:
    >         bootstrap:
    >           float:
    >             external: 128.232.222.199
    >             id: c31e3dbe-26fb-4295-ae30-0345fd8948ef
    >             internal: 10.10.2.178
    >           server:
    >             address:
    >               ipv4: 10.10.2.178
    >             flavor:
    >               name: gaia.vm.cclake.2vcpu
    >             hostname: bootstrap
    >             id: fff9e367-afba-4aa7-bf70-6c2c70c10fe8
    >             image:
    >               id: 1779f380-780d-40d8-8052-b3acb91ed530
    >               name: Fedora-31-1.9
    >             name: iris-gaia-green-20230201-bootstrap


# -----------------------------------------------------
# SSH test.
#[root@ansibler]

    ssh bootstrap 'date ; hostname'

    >   ssh: connect to host bootstrap port 22: Connection refused

    #
    # DUH - re-using the same client container.
    # Our DNS update script checks for a simple marker, and doesn't update the IP address if it is there.
    #

# -----------------------------------------------------
# Delete everything after the marker.
#[root@ansibler]

    vi /etc/hosts

    >   ....
    >   ....


# -----------------------------------------------------
# Update our local config.
#[root@ansibler]

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/04-local-config.yml'

    >   ....
    >   ....


# -----------------------------------------------------
# SSH test.
#[root@ansibler]

    ssh bootstrap 'date ; hostname'

    >   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    >   @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
    >   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    >   IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
    >   Someone could be eavesdropping on you right now (man-in-the-middle attack)!
    >   It is also possible that a host key has just been changed.
    >   The fingerprint for the ED25519 key sent by the remote host is
    >   SHA256:lNenru/b1SA0fIqR64HvFC3i/G1o5UDJQuvAN8HLFN0.
    >   Please contact your system administrator.
    >   Add correct host key in /root/.ssh/known_hosts to get rid of this message.
    >   Offending ED25519 key in /root/.ssh/known_hosts:1
    >   Host key for bootstrap has changed and you have requested strict checking.
    >   Host key verification failed.

    #
    # OK, so re-using the same client means we need work on being idempotent .. but updateable.
    #
    # When we change the bootstrap node, we need to clear the ssh fingerprint and the IP address.
    # Sigh - this is supposed to be the easy part :-(
    #

    #
    # TODO
    # Remove known hosts fingerprint.
    # Remove existing bootstrap entry.
    #

# -----------------------------------------------------
# -----------------------------------------------------
# Edit our inventory to use most recent Fedora.
#[user@desktop]

    gedit deployments/cluster-api/bootstrap/ansible/config/inventory.yml &

    >   ....
    >   all:
    >       vars:
    >           baseimage:  "Fedora-34.1.2"
    >           tinyflavor: "gaia.vm.cclake.2vcpu"
    >   ....


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    #
    # Live is red, selecting green for experimenting.
    #

    agcolour=green

    source "${HOME:?}/aglais.env"

    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "3000:3000" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Add YAML editor role.
#[root@ansibler]

    ansible-galaxy install kwoodson.yedit

    >   Starting galaxy role install process
    >   - downloading role 'yedit', owned by kwoodson
    >   - downloading role from https://github.com/kwoodson/ansible-role-yedit/archive/master.tar.gz
    >   - extracting kwoodson.yedit to /root/.ansible/roles/kwoodson.yedit
    >   - kwoodson.yedit (master) was installed successfully


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    2m7.045s
    >   user    0m59.697s
    >   sys     0m6.757s


# -----------------------------------------------------
# Settings ...
#[root@ansibler]

    deployname=${cloudname:?}-$(date '+%Y%m%d')
    deploydate=$(date '+%Y%m%dT%H%M%S')

    statusyml='/opt/aglais/aglais-status.yml'
    if [ ! -e "$(dirname ${statusyml})" ]
    then
        mkdir "$(dirname ${statusyml})"
    fi
    rm -f "${statusyml}"
    touch "${statusyml}"

    yq eval \
        --inplace \
        "
        .aglais.deployment.type = \"cluster-api\"   |
        .aglais.deployment.name = \"${deployname}\" |
        .aglais.deployment.date = \"${deploydate}\" |
        .aglais.openstack.cloud.name = \"${cloudname}\"
        " "${statusyml}"


# -----------------------------------------------------
# Create our bootstrap components.
#[root@ansibler]

    inventory=/deployments/cluster-api/bootstrap/ansible/config/inventory.yml

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/01-create-keypair.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/02-create-network.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/03-create-bootstrap.yml'

    ansible-playbook \
        --inventory "${inventory:?}" \
        '/deployments/cluster-api/bootstrap/ansible/04-local-config.yml'

    >   ....
    >   ....


# -----------------------------------------------------
# Check our local config.
#[root@ansibler]

    cat /opt/aglais/aglais-status.yml

    >   aglais:
    >     deployment:
    >       date: 20230201T050630
    >       name: iris-gaia-green-20230201
    >       type: cluster-api
    >     openstack:
    >       cloud:
    >         name: iris-gaia-green
    >       keypairs:
    >         team:
    >           fingerprint: 2e:84:98:98:df:70:06:0e:4c:ed:bd:d4:d6:6b:eb:16
    >           id: iris-gaia-green-20230201-keypair
    >           name: iris-gaia-green-20230201-keypair
    >       networks:
    >         internal:
    >           network:
    >             id: 7b10438b-cc7f-49f4-8220-fbff7442478a
    >             name: iris-gaia-green-20230201-internal-network
    >           router:
    >             id: c847a882-9557-4178-823a-5b994fedbe48
    >             name: iris-gaia-green-20230201-internal-router
    >           subnet:
    >             cidr: 10.10.0.0/16
    >             id: ae2c2ce2-ab2c-4f6c-9e89-9f3d13076cd2
    >             name: iris-gaia-green-20230201-internal-subnet
    >       servers:
    >         bootstrap:
    >           float:
    >             external: 128.232.222.70
    >             id: 02e06b79-6e2e-4c07-bf41-1cda983f9491
    >             internal: 10.10.2.160
    >           server:
    >             address:
    >               ipv4: 10.10.2.160
    >             flavor:
    >               name: gaia.vm.cclake.2vcpu
    >             hostname: bootstrap
    >             id: 21889b08-34b6-4f0a-a6fa-107c6342379c
    >             image:
    >               id: 1779f380-780d-40d8-8052-b3acb91ed530
    >               name: Fedora-31-1.9
    >             name: iris-gaia-green-20230201-bootstrap


# -----------------------------------------------------
# SSH test.
#[root@ansibler]

    ssh bootstrap 'date ; hostname'

    >   The authenticity of host 'bootstrap (128.232.222.70)' can't be established.
    >   ED25519 key fingerprint is SHA256:xqLmcipLGZWsixLq/eS49Yptp0P8n5mtNcI6JtjWFTk.
    >   This key is not known by any other names
    >   Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
    >   Warning: Permanently added 'bootstrap' (ED25519) to the list of known hosts.
    >   Wed Feb  1 05:09:08 UTC 2023
    >   iris-gaia-green-20230201-bootstrap


    ssh bootstrap 'date ; hostname'

    >   Wed Feb  1 05:10:02 UTC 2023
    >   iris-gaia-green-20230201-bootstrap




