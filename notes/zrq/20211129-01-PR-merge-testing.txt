#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Test a GitHub pull request.
        https://github.com/wfau/aglais/pull/583
        stvoutsin:issue-benchmarking

    Result:

        Success.
        Cluster deployed and tests run successfully.

        Adding a remote and pulling/merging the target branch works.
        In theory, I could commit and push my merged branch back to upstream ?
        In practice, I will delete this local branch and merge the PR in GitHub.

        Needs more debug output during the test.
        Runs for a long time (+4hrs) with no output.
        Possibly execute each test as separate Ansible tasks, rather than one big task.

        Perhaps change the name/value of the control variable.
        Using 'prod' and 'test' implicitly links the testing to the type of deployment, which isn't always the case.

            if [[ "$deploytype" == "test" ]]

            if [[ "$deploytest" == "true" ]]

        This might evolve into having different sets of tests :

            testlevel:

        basic   # simple pass|fail tests < 5min total
        science # tests based on science use cases
        stress  # tests designed to push the system to its limits
        full    # everything

        Need some explanation about what the results mean.

            status = [SUCCESS | SLOW | ??]
            valid = [TRUE | ??]
            msg = ''

        Why do some have 'json' in their names ?

    >   ....
    >   {
    >   'SetUp':
    >       {
    >       'totaltime': '36.87',
    >       'status': 'SUCCESS',
    >       'msg': '',
    >       'valid': 'TRUE'
    >       },
    >   'Mean_proper_motions_over_the_sky': {
    >       'totaltime': '57.13',
    >       'status': 'SLOW',
    >       'msg': '',
    >       'valid': 'TRUE'
    >       },
    >   'Source_counts_over_the_sky.json': {
    >       'totaltime': '16.10',
    >       'status': 'SUCCESS',
    >       'msg': '',
    >       'valid': 'TRUE'
    >       },
    >   'Good_astrometric_solutions_via_ML_Random_Forrest_classifier': {
    >       'totaltime': '508.77',
    >       'status': 'SLOW',
    >       'msg': '',
    >       'valid': 'TRUE'
    >       },
    >   'QC_cuts_dev.json': {
    >       'totaltime': '5918.02',
    >       'status': 'SLOW',
    >       'msg': '',
    >       'valid': 'TRUE'
    >       },
    >   'WD_detection_dev.json': {
    >       'totaltime': '7272.91',
    >       'status': 'SLOW',
    >       'msg': '',
    >       'valid': 'TRUE'
    >       }
    >   }
    >   ....



# -----------------------------------------------------
# List our remotes.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git remote -v

    popd

    >   origin      git@github.com:Zarquan/aglais.git (fetch)
    >   origin      git@github.com:Zarquan/aglais.git (push)
    >   upstream    git@github.com:wfau/aglais.git (fetch)
    >   upstream    git@github.com:wfau/aglais.git (push)


# -----------------------------------------------------
# Add the repository for the branch we want to test.
#[user@desktop]

    targetuser=stvoutsin
    targetrepo=git@github.com:stvoutsin/aglais.git
    targetbranch=issue-benchmarking

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git remote add "${targetuser:?}" "${targetrepo:?}"

        git remote -v

    >   origin	git@github.com:Zarquan/aglais.git (fetch)
    >   origin	git@github.com:Zarquan/aglais.git (push)
    >   stvoutsin	git@github.com:stvoutsin/aglais.git (fetch)
    >   stvoutsin	git@github.com:stvoutsin/aglais.git (push)
    >   upstream	git@github.com:wfau/aglais.git (fetch)
    >   upstream	git@github.com:wfau/aglais.git (push)


        git fetch "${targetuser:?}"

    >   remote: Enumerating objects: 539, done.
    >   remote: Counting objects: 100% (486/486), done.
    >   remote: Compressing objects: 100% (324/324), done.
    >   remote: Total 539 (delta 301), reused 299 (delta 156), pack-reused 53
    >   Receiving objects: 100% (539/539), 162.26 KiB | 686.00 KiB/s, done.
    >   Resolving deltas: 100% (304/304), completed with 56 local objects.
    >   From github.com:stvoutsin/aglais
    >    * [new branch]      feature-515-https             -> stvoutsin/feature-515-https
    >    * [new branch]      issue-157                     -> stvoutsin/issue-157
    >    * [new branch]      issue-288                     -> stvoutsin/issue-288
    >    * [new branch]      issue-384                     -> stvoutsin/issue-384
    >    * [new branch]      issue-384-rebased             -> stvoutsin/issue-384-rebased
    >    * [new branch]      issue-392                     -> stvoutsin/issue-392
    >    * [new branch]      issue-394                     -> stvoutsin/issue-394
    >    * [new branch]      issue-477                     -> stvoutsin/issue-477
    >    * [new branch]      issue-benchmarking            -> stvoutsin/issue-benchmarking
    >    * [new branch]      issue-lib-dependencies        -> stvoutsin/issue-lib-dependencies
    >    * [new branch]      issue-multi-user              -> stvoutsin/issue-multi-user
    >    * [new branch]      issue-multi-user-benchmarking -> stvoutsin/issue-multi-user-benchmarking
    >    * [new branch]      issue-notes-live-deploy       -> stvoutsin/issue-notes-live-deploy
    >    * [new branch]      issue-upgrade-spark-3         -> stvoutsin/issue-upgrade-spark-3
    >    * [new branch]      live-deploy-notes             -> stvoutsin/live-deploy-notes
    >    * [new branch]      master                        -> stvoutsin/master
    >    * [new branch]      stv-issue-251                 -> stvoutsin/stv-issue-251


# -----------------------------------------------------
# Create a new branch based on the current master.
#[user@desktop]

        branchname=PR-583-test
        prevbranch=$(git branch --show-current)
        testbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout master
        git checkout -b "${testbranch:?}"

    >   Switched to a new branch '20211130-zrq-PR-583-test'


# -----------------------------------------------------
# Merge the branch we want to test.
#[user@desktop]

        git merge "${targetuser:?}/${targetbranch:?}"

    >   Updating d0809eb..3104073
    >   Fast-forward
    >    deployments/hadoop-yarn/ansible/29-install-pip-libs.yml  |  10 +++++--
    >    deployments/hadoop-yarn/ansible/36-run-benchmark.yml     |  83 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    deployments/hadoop-yarn/bin/create-all.sh                |  18 +++++++++++++
    >    deployments/zeppelin/test/config/notebooks.json          |  41 +++++++++++++++++++++++++++++
    >    deployments/zeppelin/test/config/notebooks_pi.json       |  12 +++++++++
    >    notes/stv/20210918-zeppelin-benchmarking-01.txt          | 198 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20210920-zeppelin-benchmarking-01.txt          | 118 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211010-ansible-deploy-with-benchmarks.txt    | 119 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211014-ansible-deploy-with-benchmarks-01.txt | 133 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211014-ansible-deploy-with-benchmarks-02.txt | 190 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211021-pip-dependency-issue.txt              | 249 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211022-ansible-deploy-with-benchmarks-01.txt | 132 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    12 files changed, 1301 insertions(+), 2 deletions(-)
    >    create mode 100644 deployments/hadoop-yarn/ansible/36-run-benchmark.yml
    >    create mode 100644 deployments/zeppelin/test/config/notebooks.json
    >    create mode 100644 deployments/zeppelin/test/config/notebooks_pi.json
    >    create mode 100644 notes/stv/20210918-zeppelin-benchmarking-01.txt
    >    create mode 100644 notes/stv/20210920-zeppelin-benchmarking-01.txt
    >    create mode 100644 notes/stv/20211010-ansible-deploy-with-benchmarks.txt
    >    create mode 100644 notes/stv/20211014-ansible-deploy-with-benchmarks-01.txt
    >    create mode 100644 notes/stv/20211014-ansible-deploy-with-benchmarks-02.txt
    >    create mode 100644 notes/stv/20211021-pip-dependency-issue.txt
    >    create mode 100644 notes/stv/20211022-ansible-deploy-with-benchmarks-01.txt


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --publish 8088:8088 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2021.08.25 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudname=gaia-dev


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    3m26.150s
    >   user    1m16.508s
    >   sys     0m9.689s


# -----------------------------------------------------
# Create everything, using the (old) medium config.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            'cclake-medium-04' \
            'test' \
        | tee /tmp/create.log


    #
    # Note the results come in after everything has completed.
    # So once it starts the tests, skip to setting up the monitoring and come back to collect the results at the end.
    #

    >   ....
    >   ....
    >   TASK [Run benchmarker] **************************************************************************
    >   
    >   changed: [localhost] => {
    >       "changed": true,
    >       "cmd": ["python3", "/tmp/run-test.py"],
    >       "delta": "3:50:10.101957",
    >       "end": "2021-11-30 19:26:17.229453",
    >       "rc": 0,
    >       "start": "2021-11-30 15:36:07.127496",
    >       "stderr": "",
    >       "stderr_lines": [],
    >       "stdout": "Test completed after: 13809.81 seconds ....",
    >       "stdout_lines": [
    >           "Test completed after: 13809.81 seconds",
    >           ....
    >           ]
    >       }
    >   
    >   PLAY RECAP **************************************************************************************
    >   localhost : ok=9    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

    >   real    265m11.973s
    >   user    48m56.926s
    >   sys     6m56.109s

    >   ....
    >   Test completed after: 13809.81 seconds
    >   stdout:
    >       {
    >       'SetUp': {
    >           'totaltime': '36.87',
    >           'status': 'SUCCESS',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'Mean_proper_motions_over_the_sky': {
    >           'totaltime': '57.13',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'Source_counts_over_the_sky.json': {
    >           'totaltime': '16.10',
    >           'status': 'SUCCESS',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'Good_astrometric_solutions_via_ML_Random_Forrest_classifier': {
    >           'totaltime': '508.77',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'QC_cuts_dev.json': {
    >           'totaltime': '5918.02',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           },
    >       'WD_detection_dev.json': {
    >           'totaltime': '7272.91',
    >           'status': 'SLOW',
    >           'msg': '',
    >           'valid': 'TRUE'
    >           }
    >       }
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Setup a SSH tunnel SOCKS proxy.
# https://www.digitalocean.com/community/tutorials/how-to-route-web-traffic-securely-without-a-vpn-using-a-socks-tunnel
# Running 'htop' on the Zeppelin node to keep the connection alive.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        ansibler \
            bash -c \
            '
            ssh \
                -t \
                -D "3000"  \
                zeppelin \
                    "
                    htop
                    "
            '

# -----------------------------------------------------
# Login to the Zeppelin UI using FoxyProxy SOCKS proxy.
#[user@desktop]

    firefox --new-window 'http://zeppelin:8080/' &


# -----------------------------------------------------
# Login to the Spark UI using FoxyProxy SOCKS proxy.
#[user@desktop]

    firefox --new-window 'http://master01:8088/cluster' &


# -----------------------------------------------------
# Login to Grafana UI using FoxyProxy SOCKS proxy.
#[user@desktop]

    firefox --new-window 'http://monitor:3000/login' &

        Create our Prometheus data source.
        http://monitor:3000/datasources/new

        Import our dashboards from local disc.
        http://monitor:3000/dashboard/import

            deployments/common/grafana/20210705-02-grafana-dash.json
            deployments/common/grafana/node-exporter-v20201010-1633446087511.json


# -----------------------------------------------------
# -----------------------------------------------------

    #
    # Approve and merge the PR on GitHub.
    #

# -----------------------------------------------------
# -----------------------------------------------------
# Delete our local branch.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git checkout master
        git branch

    >     20210113-zrq-source-build
    >     20211011-zrq-hdbscan-config
    >     20211105-zrq-iris-2022
    >     20211130-zrq-PR-583-test
    >   * master


        git branch -d ${testbranch:?}

    >   error: The branch '20211130-zrq-PR-583-test' is not fully merged.
    >   If you are sure you want to delete it, run 'git branch -D 20211130-zrq-PR-583-test'.


        git branch -D ${testbranch:?}

    >   Deleted branch 20211130-zrq-PR-583-test (was 3104073).

    popd


# -----------------------------------------------------
# Fetch the merge result from upstream.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git fetch upstream

    >   remote: Enumerating objects: 1, done.
    >   remote: Counting objects: 100% (1/1), done.
    >   remote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0
    >   Unpacking objects: 100% (1/1), 664 bytes | 664.00 KiB/s, done.
    >   From github.com:wfau/aglais
    >      d0809eb..cc05970  master     -> upstream/master


        git merge 'upstream/master'

    >   Updating d0809eb..cc05970
    >   Fast-forward
    >    deployments/hadoop-yarn/ansible/29-install-pip-libs.yml  |  10 +++++--
    >    deployments/hadoop-yarn/ansible/36-run-benchmark.yml     |  83 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    deployments/hadoop-yarn/bin/create-all.sh                |  18 +++++++++++++
    >    deployments/zeppelin/test/config/notebooks.json          |  41 +++++++++++++++++++++++++++++
    >    deployments/zeppelin/test/config/notebooks_pi.json       |  12 +++++++++
    >    notes/stv/20210918-zeppelin-benchmarking-01.txt          | 198 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20210920-zeppelin-benchmarking-01.txt          | 118 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211010-ansible-deploy-with-benchmarks.txt    | 119 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211014-ansible-deploy-with-benchmarks-01.txt | 133 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211014-ansible-deploy-with-benchmarks-02.txt | 190 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211021-pip-dependency-issue.txt              | 249 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20211022-ansible-deploy-with-benchmarks-01.txt | 132 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    12 files changed, 1301 insertions(+), 2 deletions(-)
    >    create mode 100644 deployments/hadoop-yarn/ansible/36-run-benchmark.yml
    >    create mode 100644 deployments/zeppelin/test/config/notebooks.json
    >    create mode 100644 deployments/zeppelin/test/config/notebooks_pi.json
    >    create mode 100644 notes/stv/20210918-zeppelin-benchmarking-01.txt
    >    create mode 100644 notes/stv/20210920-zeppelin-benchmarking-01.txt
    >    create mode 100644 notes/stv/20211010-ansible-deploy-with-benchmarks.txt
    >    create mode 100644 notes/stv/20211014-ansible-deploy-with-benchmarks-01.txt
    >    create mode 100644 notes/stv/20211014-ansible-deploy-with-benchmarks-02.txt
    >    create mode 100644 notes/stv/20211021-pip-dependency-issue.txt
    >    create mode 100644 notes/stv/20211022-ansible-deploy-with-benchmarks-01.txt


        git status

    >   On branch master
    >   Your branch is ahead of 'origin/master' by 26 commits.
    >     (use "git push" to publish your local commits)


        git push

    >   Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
    >   To github.com:Zarquan/aglais.git
    >      d0809eb..cc05970  master -> master

    popd



