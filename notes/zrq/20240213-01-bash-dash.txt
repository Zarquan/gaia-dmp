#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: []
#

    Target:

        Fix for issue #1284
        https://github.com/wfau/gaia-dmp/issues/1284
        We assume bash, but Ubuntu defaults to dash.

        https://stackoverflow.com/questions/13702425/source-command-not-found-in-sh-shell
        https://stackoverflow.com/a/13702876
        https://bugs.launchpad.net/ubuntu/+source/dash/+bug/65046

        Simple fix, replace the `!/.bin/sh` shebang with `!/bin/bash` in all our scipts.

        Technically, we only need to replace the client side scripts
        that run on the client host (laptop/desktop/vm) before the
        client container is launched.
        However, I don't see any harm in replacing all of them.
        Just in case the VM images change from Fedora to Ubuntu in the future.

    Result:

        All good.
        In the process we found at least one Ansible YAML file with a !/bin/sh shebang.


# -----------------------------------------------------
# Create a new branch.
#[user@desktop]

    branchname=bash-dash

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        newbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout master

        git checkout -b "${newbranch:?}"

        git push --set-upstream 'origin' "$(git branch --show-current)"

    popd


# -----------------------------------------------------
# Edit the code to replace `!/bin/sh` with `!/bin/bash`
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        grep \
            --recursive \
            '^#!/bin/sh' \
            'deployments'

--START--
deployments/aglais/bin/create-hdfs-space.sh:#!/bin/sh
deployments/aglais/bin/create-shiro-hash.sh:#!/bin/sh
deployments/aglais/bin/create-shiro-user.sh:#!/bin/sh
deployments/aglais/bin/shiro-tools.sh:#!/bin/sh
deployments/aglais/bin/create-linux-user.sh:#!/bin/sh
deployments/aglais/bin/json-tools.sh:#!/bin/sh
deployments/aglais/bin/copy-notebooks.sh:#!/bin/sh
deployments/hadoop-yarn/ansible/61-data-links.yml:#!/bin/sh
deployments/hadoop-yarn/bin/cephfs-router.sh:#!/bin/sh
deployments/hadoop-yarn/bin/init-spark.sh:#!/bin/sh
deployments/hadoop-yarn/bin/run-tests.sh:#!/bin/sh
deployments/hadoop-yarn/bin/start-hdfs.sh:#!/bin/sh
deployments/hadoop-yarn/bin/start-yarn.sh:#!/bin/sh
deployments/hadoop-yarn/bin/cephfs-mount.sh:#!/bin/sh
deployments/hadoop-yarn/bin/start-nginx.sh:#!/bin/sh
deployments/hadoop-yarn/bin/setup-ssl.sh:#!/bin/sh
deployments/hadoop-yarn/bin/system-tests.sh:#!/bin/sh
deployments/openstack/bin/cephfs-router.sh:#!/bin/sh
deployments/openstack/bin/create-keypair.sh:#!/bin/sh
deployments/openstack/bin/create-ceph-share.sh:#!/bin/sh
deployments/openstack/bin/settings.sh:#!/bin/sh
deployments/openstack/bin/delete-all.sh:#!/bin/sh
deployments/openstack/bin/list-all.sh:#!/bin/sh
deployments/cluster-api/ansible/files/aglais/bin/loadconfig:#!/bin/sh
deployments/admin/bin/create-ceph-share.sh:#!/bin/sh
deployments/admin/bin/create-user-tools.sh:#!/bin/sh
deployments/admin/bin/zeppelin-rest-tools.sh:#!/bin/sh
--END--


        for filename in $(
            grep \
                --recursive \
                --files-with-matches \
                '^#!/bin/sh' \
                'deployments'
            )
        do
            echo ""
            echo "Filename [${filename}]"
            sed -i -n '
                s|^#!/bin/sh|^#!/bin/bash|
                ' \
                "${filename}"
        done

        meld . &

        #
        # OK, that deleted all the contents of all the files.
        # Invoking sed with both -i and -n means we replace the content with nothing.
        # Duh.
        #

        git restore deployments

        #
        # Try again ..
        #

        for filename in $(
            grep \
                --recursive \
                --files-with-matches \
                '^#!/bin/sh' \
                'deployments'
            )
        do
            echo ""
            echo "Filename [${filename}]"
            sed -i '
                s|^#!/bin/sh|^#!/bin/bash|
                ' \
                "${filename}"
        done

        meld . &

        #
        # We also don't need the ^ in the replacement pattern.
        #

        git restore deployments

        #
        # Try again ..
        #

        for filename in $(
            grep \
                --recursive \
                --files-with-matches \
                '^#!/bin/sh' \
                'deployments'
            )
        do
            echo ""
            echo "Filename [${filename}]"
            sed -i '
                s|^#!/bin/sh|#!/bin/bash|
                ' \
                "${filename}"
        done

        meld . &

        #
        # All good.
        #

    popd


# -----------------------------------------------------
# -----------------------------------------------------

    #
    # Run a clean deploy to check the build works.
    #

# -----------------------------------------------------
# Sanity check the current live host.
#[user@desktop]

    ssh fedora@live.gaia-dmp.uk \
        '
        date
        hostname
        '

--START--
Tue 13 Feb 13:34:20 UTC 2024
iris-gaia-green-20231027-zeppelin
--END--


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    ansi-client 'red'

--START--
....
....
--END--


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    source /deployments/hadoop-yarn/bin/deploy.sh

--START--
....
....
- Deleting share [iris-gaia-red-home-Thozzt]
Failed to delete share with name or ID 'iris-gaia-red-home-Thozzt': Invalid share: Share status must be one of ('available', 'error', 'inactive'). (HTTP 403) (Request-ID: req-04c83240-aff1-4afc-bcac-7ed553a0051c)
1 of 1 shares failed to delete.
....
- Deleting share [iris-gaia-red-user-Evison]
Failed to delete share with name or ID 'iris-gaia-red-user-Evison': Invalid share: Share status must be one of ('available', 'error', 'inactive'). (HTTP 403) (Request-ID: req-db5ed273-efd8-4b12-ae9d-74e1a6b6c2df)
1 of 1 shares failed to delete.
....
....
--END--

    #
    # Failed to delete _some_ of the test user shares,
    # resulting in some shares stuck with status 'deleting'.
    # Non-trivial fix for this but it won't get in the way of testing.
    # See supplementary notes for the fix.
    #

--START--
....
---- ----
List shares
+--------------------------------------+---------------------------+------+-------------+----------+-----------+-----------------+------+-------------------+
| ID                                   | Name                      | Size | Share Proto | Status   | Is Public | Share Type Name | Host | Availability Zone |
+--------------------------------------+---------------------------+------+-------------+----------+-----------+-----------------+------+-------------------+
| 83c55262-46f2-44f5-9c35-f7cb3e4d07d3 | iris-gaia-red-home-Thozzt |    1 | CEPHFS      | deleting | False     | ceph01_cephfs   |      | nova              |
| 3321782f-1820-4dae-9ebe-eeb074ab512d | iris-gaia-red-user-Evison |    1 | CEPHFS      | deleting | False     | ceph01_cephfs   |      | nova              |
+--------------------------------------+---------------------------+------+-------------+----------+-----------+-----------------+------+-------------------+
....
--END--

    #
    # The rest of the deploy should still work, but if these shares
    # are still present when we import the test users it will cause a conflict.
    #

--START--
....
....
aglais:
  status:
    deployment:
      type: hadoop-yarn
      conf: zeppelin-54.86-spark-6.26.43
      name: iris-gaia-red-20240213
      date: 20240213T134016
      hostname: zeppelin.gaia-dmp.uk
  spec:
    openstack:
      cloud:
        base: arcus
        name: iris-gaia-red
--END--


# -----------------------------------------------------
# Import our test users.
#[root@ansibler]

    source /deployments/admin/bin/create-user-tools.sh

    import-test-users

--START--
....
....
--END--

    #
    # Some error messages detected in the output.
    # See next notes for details.
    # notes/zrq/20240213-03-test-users.txt
    #


# -----------------------------------------------------
# Install our test framework.
#[root@ansibler]

    git clone https://github.com/stvoutsin/aglais-testing

    pushd aglais-testing/

      pip install -r pip-requirements

      python3 setup.py install

    popd


# -----------------------------------------------------
# Run our quick benchmark test with 1 user.
#[root@ansibler]

    pushd aglais-testing/gdmp_benchmark

        python3 \
            gdmp_benchmark.py \
                --zeppelin_url "https://${cloudname}.gaia-dmp.uk" \
                --usercount 1 \
                --notebook_config /deployments/zeppelin/test/config/quick.json \
                --user_config /tmp/test-users.json \
                --delay_start 0 \
                --delay_notebook 0

    popd


--START--
[
    {
        "result": "SUCCESS",
        "msg": "",
        "output": [],
        "notebookid": "2JRVYNW16",
        "user_config": "/tmp/user1.yml",
        "messages": [],
        "logs": "",
        "time": {
            "result": "SLOW",
            "totaltime": 58,
            "start": "2024-02-13T15:22:34.739797",
            "finish": "2024-02-13T15:23:33.394758",
            "expected": 50
        },
        "outputs": {
            "valid": true
        },
        "name": "GaiaDMPSetup"
    },
    {
        "result": "SUCCESS",
        "msg": "",
        "output": [],
        "notebookid": "2JS9UDD6W",
        "user_config": "/tmp/user1.yml",
        "messages": [],
        "logs": "",
        "time": {
            "result": "SLOW",
            "totaltime": 316,
            "start": "2024-02-13T15:23:33.394936",
            "finish": "2024-02-13T15:28:49.661471",
            "expected": 125
        },
        "outputs": {
            "valid": true
        },
        "name": "Mean_proper_motions_over_the_sky"
    },
    {
        "result": "SUCCESS",
        "msg": "",
        "output": [],
        "notebookid": "2JQMX62XX",
        "user_config": "/tmp/user1.yml",
        "messages": [],
        "logs": "",
        "time": {
            "result": "SLOW",
            "totaltime": 108,
            "start": "2024-02-13T15:28:49.662087",
            "finish": "2024-02-13T15:30:38.429457",
            "expected": 55
        },
        "outputs": {
            "valid": true
        },
        "name": "Source_counts_over_the_sky.json"
    },
    {
        "result": "ERROR",
        "msg": "Fail to execute line 6: assert numpy.__version__ == \"1.21.0\" \nTraceback (most recent call last):\n  File \"/tmp/python8830830169252037312/zeppelin_python.py\", line 167, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 6, in <module>\nAssertionError",
        "output": [
            "Fail to execute line 6: assert numpy.__version__ == \"1.21.0\" \nTraceback (most recent call last):\n  File \"/tmp/python8830830169252037312/zeppelin_python.py\", line 167, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 6, in <module>\nAssertionError"
        ],
        "notebookid": "2JR2ZPWGT",
        "user_config": "/tmp/user1.yml",
        "messages": [],
        "logs": "",
        "time": {
            "result": "ERROR",
            "totaltime": 3,
            "start": "2024-02-13T15:30:38.429647",
            "finish": "2024-02-13T15:30:41.555897",
            "expected": 10
        },
        "outputs": {
            "valid": true
        },
        "name": "Library_Validation.json"
    }
]
--END--

    #
    # Seems to pass the notebook tests but fails the Python library version checks.
    # The latter part is expected because we haven't updated the Python library versions since merging Amy's PR.
    # However, I suspect that the notebook tests should not have passed either.
    # More on that later, for now, we have a functional deployment process.
    # Changing the shebang hasn't impared the build process, which is what we were testing for.
    #

