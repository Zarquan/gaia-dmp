#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Try to find out more about the limits on concurrent users.
        Based on a clean deployment using 20220613-01-blue-deploy.txt.

    Result:

        Work in progress ...

        TODO move from quick to complex test sets
        TODO move from 4 to 8 concurrent users


# -----------------------------------------------------
# Create some test users.
# TODO Move the create-user-tools to ansible/client/bin.
# TODO Add ansible/client/bin to the client PATH.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    testnames02=(
        Hamar
        Carclop
        Halda
        Jaden
        Mavaca
        Franilley
        Masonania
        Webbbron
        Granwaler
        )

    createarrayusers \
        "${testnames02[@]}" \
    | tee /tmp/testusers-02.json \
    | jq '[ .users[] | {"name": .shirouser.name, "pass": .shirouser.pass} ]'

    >   [
    >     {
    >       "name": "Hamar",
    >       "pass": "bu2hohmohthiesuNg1deiy5IeshaeD"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Granwaler",
    >       "pass": "Su1ie7akaethae6eic0ien5wiChaeC"
    >     }
    >   ]


# -----------------------------------------------------
# Create our benchmark script.
# TODO Create run-benchmark.py in ansible/client/bin.
# Learning Python:
#   Command line args
#   https://realpython.com/python-command-line-arguments/
#   String.format()
#   https://docs.python.org/3/library/string.html#formatstrings
#   Escape {} in format()
#   https://stackoverflow.com/a/5466478
#[root@ansibler]

    cat > /tmp/run-benchmark.py << 'EOF'
#!/bin/python3
import sys
from aglais_benchmark import AglaisBenchmarker

try:

    opts = [opt for opt in sys.argv[1:] if opt.startswith("-")]
    args = [arg for arg in sys.argv[1:] if not arg.startswith("-")]

    endpoint = args[0]
    testconfig = args[1]
    userlist = args[2]
    usercount = int(args[3])
    delaystart = int(args[4])
    delaynotebook = int(args[5])

except IndexError:

    raise SystemExit(f"Usage: {sys.argv[0]} <Zepelin endpoint> <test config> <list of users> <number of users>")

print(
"""
{{
\"config\": {{
    \"endpoint\":   \"{}\",
    \"testconfig\": \"{}\",
    \"userlist\":   \"{}\",
    \"usercount\":  \"{}\",
    \"delaystart\":  \"{}\",
    \"delaynotebook\":  \"{}\"
    }}
}}
""".format(
        endpoint,
        testconfig,
        userlist,
        usercount,
        delaystart,
        delaynotebook
        )
    )

AglaisBenchmarker(
    testconfig,
    userlist,
    "/tmp/",
    endpoint
    ).run(
        concurrent=True,
        users=usercount,
        delay_start=delaystart,
        delay_notebook=delaynotebook
        )

EOF

    chmod 'a+x' /tmp/run-benchmark.py


# -----------------------------------------------------
# Add a function to filter our results.
#[root@ansibler]

    filter-results()
        {
        local testname=${1:?'testname required'}
        sed "
            0,/^----/ d
            s/\"/#/g
            s/'\(-\{0,1\}[0-9.]\{1,\}\)'/\1/g
            s/:[[:space:]]*\([a-zA-Z]\{1,\}\)\([,}]\)/:'\1'\2/g
            s/:[[:space:]]*\([,}]\),/: ''\1/g
            s/'/\"/g
            " \
            "/tmp/results/${testname:?}.txt" \
        | tee "/tmp/results/${testname:?}.json" \
        | jq '
            .[] | keys as $x | [ $x[] as $y | {name: $y, value: .[$y].result, time: .[$y].time.elapsed , start: .[$y].time.start, finish: .[$y].time.finish } ]
            '
        }


# -----------------------------------------------------
# Run a quick test with one user, one second start delay and one second between.
#[root@ansibler]

    mkdir /tmp/results

    endpoint="http://zeppelin:8080"

    testconfig=/deployments/zeppelin/test/config/quick.json

    testusers=/tmp/testusers-02.json
    testname=single-user-01
    usercount=1

    delaystart=1
    delaynotebook=1

    /tmp/run-benchmark.py \
        "${endpoint:?}"  \
        "${testconfig:?}"  \
        "${testusers:?}" \
        "${usercount:?}" \
        "${delaystart:?}" \
        "${delaynotebook:?}" \
    | tee "/tmp/results/${testname:?}.txt"

    filter-results "${testname:?}"

    >   Test started [Multi User]
    >   Test completed! (125.28 seconds)
    >   ------------ Test Result: [PASS] ------------
    >   [{'GaiaDMPSetup': { .... }}]

    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 37.51,
    >       "start": "2022-06-13T12:35:15.419507",
    >       "finish": "2022-06-13T12:35:52.934486"
    >     },
    >     {
    >       "name": "Library_Validation.json",
    >       "value": "PASS",
    >       "time": 9.87,
    >       "start": "2022-06-13T12:37:09.804486",
    >       "finish": "2022-06-13T12:37:19.672728"
    >     },
    >     {
    >       "name": "Mean_proper_motions_over_the_sky",
    >       "value": "PASS",
    >       "time": 55.74,
    >       "start": "2022-06-13T12:35:53.935352",
    >       "finish": "2022-06-13T12:36:49.678480"
    >     },
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 18.12,
    >       "start": "2022-06-13T12:36:50.679349",
    >       "finish": "2022-06-13T12:37:08.803166"
    >     }
    >   ]

    #
    # Looks like the 1 seconbd between delay is working.
    # Although the results are not listed in chronological order.
    # Library_Validation is listed as second, when it is actually run last.
    #

    #
    # Re-ordering into the correct the sequence shows a 1 second delay between a notebook "finish" and the next "start".
    #

    >   "start":  "2022-06-13T12:35:15.419507",
    >   "finish": "2022-06-13T12:35:52.934486"

    >   "start":  "2022-06-13T12:35:53.935352",
    >   "finish": "2022-06-13T12:36:49.678480"

    >   "start":  "2022-06-13T12:36:50.679349",
    >   "finish": "2022-06-13T12:37:08.803166"

    >   "start":  "2022-06-13T12:37:09.804486",
    >   "finish": "2022-06-13T12:37:19.672728"



# -----------------------------------------------------
# Step up to 4 users run 4 times.
# One second start delay and one second between.
#[root@ansibler]

    loopcount=4
    usercount=4

    for i in $(seq 0 $((loopcount - 1)))
    do
        echo ""
        echo "-------------"
        echo "Loop [${i}]"
        testname="multi-user-$(printf "%02d" ${usercount})-$(printf "%02d" ${i})"
        echo "Name [${testname}]"

        /tmp/run-benchmark.py \
            "${endpoint:?}" \
            "${testconfig:?}" \
            "${testusers:?}" \
            "${usercount:?}" \
            "${delaystart:?}" \
            "${delaynotebook:?}" \
        | tee "/tmp/results/${testname:?}.txt"

        filter-results "${testname:?}"
    done

    >   -------------
    >   Loop [0]
    >   Name [multi-user-04-00]
    >
    >   {
    >   "config": {
    >       "endpoint":   "http://zeppelin:8080",
    >       "testconfig": "/deployments/zeppelin/test/config/quick.json",
    >       "userlist":   "/tmp/testusers-02.json",
    >       "usercount":  "4",
    >       "delaystart":  "1",
    >       "delaynotebook":  "1"
    >       }
    >   }
    >
    >   Test started [Multi User]
    >   Test completed! (243.42 seconds)
    >   ------------ Test Result: [PASS] ------------
    >   [{'GaiaDMPSetup': { .... }}]

    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 37.13,
    >       "start": "2022-06-13T12:43:40.946927",
    >       "finish": "2022-06-13T12:44:18.077720"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 25.15,
    >       "start": "2022-06-13T12:47:07.494554",
    >       "finish": "2022-06-13T12:47:32.647725"
    >     }
    >   ]

    >   -------------
    >   Loop [1]
    >   Name [multi-user-04-01]
    >
    >   {
    >   "config": {
    >       "endpoint":   "http://zeppelin:8080",
    >       "testconfig": "/deployments/zeppelin/test/config/quick.json",
    >       "userlist":   "/tmp/testusers-02.json",
    >       "usercount":  "4",
    >       "delaystart":  "1",
    >       "delaynotebook":  "1"
    >       }
    >   }
    >
    >   Test started [Multi User]
    >   Test completed! (221.44 seconds)
    >   ------------ Test Result: [PASS] ------------
    >   [{'GaiaDMPSetup': { .... }}]

    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 35.80,
    >       "start": "2022-06-13T12:47:44.843521",
    >       "finish": "2022-06-13T12:48:20.648000"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 15.89,
    >       "start": "2022-06-13T12:49:09.141460",
    >       "finish": "2022-06-13T12:49:25.027373"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 105.85,
    >       "start": "2022-06-13T12:47:46.845395",
    >       "finish": "2022-06-13T12:49:32.697761"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 12.78,
    >       "start": "2022-06-13T12:50:20.245473",
    >       "finish": "2022-06-13T12:50:33.024777"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 105.87,
    >       "start": "2022-06-13T12:47:47.846643",
    >       "finish": "2022-06-13T12:49:33.713476"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 25.13,
    >       "start": "2022-06-13T12:50:49.314344",
    >       "finish": "2022-06-13T12:51:14.443252"
    >     }
    >   ]

    >   -------------
    >   Loop [2]
    >   Name [multi-user-04-02]
    >
    >   {
    >   "config": {
    >       "endpoint":   "http://zeppelin:8080",
    >       "testconfig": "/deployments/zeppelin/test/config/quick.json",
    >       "userlist":   "/tmp/testusers-02.json",
    >       "usercount":  "4",
    >       "delaystart":  "1",
    >       "delaynotebook":  "1"
    >       }
    >   }
    >
    >   Test started [Multi User]
    >   Test completed! (240.41 seconds)
    >   ------------ Test Result: [PASS] ------------
    >   [{'GaiaDMPSetup': { .... }}]

    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 36.48,
    >       "start": "2022-06-13T12:51:26.761263",
    >       "finish": "2022-06-13T12:52:03.237429"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 14.64,
    >       "start": "2022-06-13T12:52:38.382663",
    >       "finish": "2022-06-13T12:52:53.019742"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 53.55,
    >       "start": "2022-06-13T12:51:27.761776",
    >       "finish": "2022-06-13T12:52:21.312996"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 21.16,
    >       "start": "2022-06-13T12:53:03.598394",
    >       "finish": "2022-06-13T12:53:24.762894"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 108.40,
    >       "start": "2022-06-13T12:51:28.763434",
    >       "finish": "2022-06-13T12:53:17.166334"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 12.59,
    >       "start": "2022-06-13T12:54:14.300348",
    >       "finish": "2022-06-13T12:54:26.887134"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 101.92,
    >       "start": "2022-06-13T12:51:29.764477",
    >       "finish": "2022-06-13T12:53:11.684486"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 27.23,
    >       "start": "2022-06-13T12:54:48.190761",
    >       "finish": "2022-06-13T12:55:15.419630"
    >     }
    >   ]

    >   -------------
    >   Loop [3]
    >   Name [multi-user-04-03]
    >
    >   {
    >   "config": {
    >       "endpoint":   "http://zeppelin:8080",
    >       "testconfig": "/deployments/zeppelin/test/config/quick.json",
    >       "userlist":   "/tmp/testusers-02.json",
    >       "usercount":  "4",
    >       "delaystart":  "1",
    >       "delaynotebook":  "1"
    >       }
    >   }
    >
    >   Test started [Multi User]
    >   Test completed! (240.41 seconds)
    >   ------------ Test Result: [PASS] ------------
    >   [{'GaiaDMPSetup': { .... }}]

    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 36.48,
    >       "start": "2022-06-13T12:51:26.761263",
    >       "finish": "2022-06-13T12:52:03.237429"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 14.64,
    >       "start": "2022-06-13T12:52:38.382663",
    >       "finish": "2022-06-13T12:52:53.019742"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 53.55,
    >       "start": "2022-06-13T12:51:27.761776",
    >       "finish": "2022-06-13T12:52:21.312996"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 21.16,
    >       "start": "2022-06-13T12:53:03.598394",
    >       "finish": "2022-06-13T12:53:24.762894"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 108.40,
    >       "start": "2022-06-13T12:51:28.763434",
    >       "finish": "2022-06-13T12:53:17.166334"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 12.59,
    >       "start": "2022-06-13T12:54:14.300348",
    >       "finish": "2022-06-13T12:54:26.887134"
    >     }
    >   ]
    >   [
    >     {
    >       "name": "GaiaDMPSetup",
    >       "value": "PASS",
    >       "time": 101.92,
    >       "start": "2022-06-13T12:51:29.764477",
    >       "finish": "2022-06-13T12:53:11.684486"
    >     },
    >     ....
    >     ....
    >     {
    >       "name": "Source_counts_over_the_sky.json",
    >       "value": "PASS",
    >       "time": 27.23,
    >       "start": "2022-06-13T12:54:48.190761",
    >       "finish": "2022-06-13T12:55:15.419630"
    >     }
    >   ]


    grep 'Result:' /tmp/results/multi-user-04-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-02.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-03.txt:------------ Test Result: [PASS] ------------


    #
    # Checking the start times shows a 1 second delay between each user.
    #

    >   "start":  "2022-06-13T12:43:40.946927",
    >   "finish": "2022-06-13T12:44:18.077720"
    >
    >   "start":  "2022-06-13T12:43:41.947520",
    >   "finish": "2022-06-13T12:44:29.383222"
    >
    >   "start":  "2022-06-13T12:43:42.948604",
    >   "finish": "2022-06-13T12:45:56.059248"
    >
    >   "start":  "2022-06-13T12:43:43.950581",
    >   "finish": "2022-06-13T12:45:57.127126"

    #
    # Need to vary the delays to confirm this in more detail.
    # At the moment, 1 second for both start and between makes it hard to separate them.
    #


# -----------------------------------------------------
# Step up to 4 users run 8 times.
#[root@ansibler]

    loopcount=8
    usercount=4

    for i in $(seq 0 $((loopcount - 1)))
    do
        echo ""
        echo "-------------"
        echo "Loop [${i}]"
        testname="multi-user-$(printf "%02d" ${usercount})-$(printf "%02d" ${i})"
        echo "Name [${testname}]"

        /tmp/run-benchmark.py \
            "${endpoint:?}" \
            "${testconfig:?}" \
            "${testusers:?}" \
            "${usercount:?}" \
            "${delaystart:?}" \
            "${delaynotebook:?}" \
        | tee "/tmp/results/${testname:?}.txt"

        filter-results "${testname:?}"
    done

    grep 'Result:' /tmp/results/multi-user-04-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-02.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-03.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-04.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-05.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-06.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-07.txt:------------ Test Result: [PASS] ------------


# -----------------------------------------------------
# Step up to 4 users run 16 times.
#[root@ansibler]

    loopcount=16
    usercount=4

    for i in $(seq 0 $((loopcount - 1)))
    do
        echo ""
        echo "-------------"
        echo "Loop [${i}]"
        testname="multi-user-$(printf "%02d" ${usercount})-$(printf "%02d" ${i})"
        echo "Name [${testname}]"

        /tmp/run-benchmark.py \
            "${endpoint:?}" \
            "${testconfig:?}" \
            "${testusers:?}" \
            "${usercount:?}" \
            "${delaystart:?}" \
            "${delaynotebook:?}" \
        | tee "/tmp/results/${testname:?}.txt"

        filter-results "${testname:?}"
    done

    grep 'Result:' /tmp/results/multi-user-04-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------
    >   ....
    >   ....
    >   /tmp/results/multi-user-04-14.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-15.txt:------------ Test Result: [PASS] ------------


# -----------------------------------------------------
# Update our benchmark script.
#[root@ansibler]

    cat > /tmp/run-benchmark.py << 'EOF'
#!/bin/python3
import sys
from aglais_benchmark import AglaisBenchmarker

try:

    opts = [opt for opt in sys.argv[1:] if opt.startswith("-")]
    args = [arg for arg in sys.argv[1:] if not arg.startswith("-")]

    endpoint = args[0]
    testconfig = args[1]
    userlist = args[2]
    usercount = int(args[3])
    delaystart = int(args[4])
    delaynotebook = int(args[5])

except IndexError:

    raise SystemExit(f"Usage: {sys.argv[0]} <Zepelin endpoint> <test config> <list of users> <number of users>")

print(
"""
{{
\"config\": {{
    \"endpoint\":   \"{}\",
    \"testconfig\": \"{}\",
    \"userlist\":   \"{}\",
    \"usercount\":  \"{}\",
    \"delaystart\":  \"{}\",
    \"delaynotebook\":  \"{}\"
    }},
\"output\": {{
---start---
""".format(
        endpoint,
        testconfig,
        userlist,
        usercount,
        delaystart,
        delaynotebook
        )
    )

AglaisBenchmarker(
    testconfig,
    userlist,
    "/tmp/",
    endpoint
    ).run(
        concurrent=True,
        users=usercount,
        delay_start=delaystart,
        delay_notebook=delaynotebook
        )

print(
"""
---end---
    }
}
"""
    )
EOF

    chmod 'a+x' /tmp/run-benchmark.py


# -----------------------------------------------------
# Update our filter function.
#[root@ansibler]

    filter-results()
        {
        local testname=${1:?'testname required'}
        sed "
            /^--*start--*/,/^--*end--*/ {
                /^--*start/,/^--* Test Result/ {
                    /Test Result/ ! {
                        d
                        }
                    /Test Result/ {
                        s/^.*Test Result: \[\(.*\)\].*$/'testcode': '\1',/
                        a \"threads\":
                        }
                    }
                s/\"/'/g
                s/'\(-\{0,1\}[0-9.]\{1,\}\)'/\1/g
                s/:[[:space:]]*\([a-zA-Z]\{1,\}\)\([,}]\)/:'\1'\2/g
                s/:[[:space:]]*\([,}]\),/: ''\1/g
                s/'/\"/g
                }
            /^--*end--*/ {
                d
                }
            " \
            "/tmp/results/${testname:?}.txt" \
        | tee "/tmp/results/${testname:?}.json" \
        | jq  '
              .output.threads[] | keys as $x | [ $x[] as $y | {name: $y, value: .[$y].result, time: .[$y].time.elapsed , start: .[$y].time.start, finish: .[$y].time.finish } ]
              '
        }

    filter-results "${testname:?}"


# -----------------------------------------------------
# Create a test-loop function.
#[root@ansibler]

    test-loop()
        {
        local loopcount=${1:?'loopcount required'}
        local usercount=${2:?'usercount required'}

cat << EOF
[
EOF

    local comma=''
    for i in $(seq 0 $((loopcount - 1)))
    do

        testname="multi-user-$(printf "%02d" ${usercount})-$(printf "%02d" ${i})"

cat << EOF
    ${comma}{
    "iteration": ${i},
    "testname": "${testname}",
    "threads":
EOF
comma=','

        /tmp/run-benchmark.py \
            "${endpoint:?}" \
            "${testconfig:?}" \
            "${testusers:?}" \
            "${usercount:?}" \
            "${delaystart:?}" \
            "${delaynotebook:?}" \
        > "/tmp/results/${testname:?}.txt"

        filter-results "${testname:?}"

cat << EOF
    }
EOF

    done

cat << EOF
]
EOF
        }


# -----------------------------------------------------
# Test the new function.
#[root@ansibler]

    test-loop 1 1 \
    | tee /tmp/test-loop.json
    | jq '.'

    >   [
    >     {
    >       "iteration": 0,
    >       "testname": "multi-user-01-00",
    >       "threads": [
    >         {
    >           "name": "GaiaDMPSetup",
    >           "value": "PASS",
    >           "time": 33.70,
    >           "start": "2022-06-13T17:35:08.001440",
    >           "finish": "2022-06-13T17:35:41.703389"
    >         },
    >         ....
    >         ....
    >         {
    >           "name": "Source_counts_over_the_sky.json",
    >           "value": "PASS",
    >           "time": 15.49,
    >           "start": "2022-06-13T17:36:59.063435",
    >           "finish": "2022-06-13T17:37:14.555184"
    >         }
    >       ]
    >     }
    >   ]


    test-loop 2 2 \
    | tee /tmp/test-loop.json
    | jq '.'


    #
    # Mix of Python and Bash is complicating things.
    # Crappy non-JSON output from the test is making things really hard.
    # Need to jump from Python to Bash in order to run sed on the non-JSON output.
    #

    #
    # Underneath - the test works fine for loop[0], but fails for loop[1].
    # One user account works, one user account fails.
    # I think the error is:
    #   UnresolvedRelation [gaia_source]
    #


# -----------------------------------------------------
# Test with 1 loop, 4 users.
#[root@ansibler]

    test-loop 1 4 \
    | tee /tmp/test-loop.json


    >   [
    >       {
    >       "iteration": 0,
    >       "testname": "multi-user-04-00",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >   ]


# -----------------------------------------------------
# Test with 2 loops, 4 users.
#[root@ansibler]

    test-loop 2 4 \
    | tee /tmp/test-loop.json


    >   [
    >       {
    >       "iteration": 0,
    >       "testname": "multi-user-04-00",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >       ,{
    >       "iteration": 1,
    >       "testname": "multi-user-04-01",
    >       "threads":
    >   parse error: Invalid numeric literal at line 14, column 638
    >       }
    >   ]

    #
    # Same error ON THE SECOND PASS.
    #

    less /tmp/results/multi-user-04-01.json

    >   ....
    >   pyspark.sql.utils.AnalysisException: Table or view not found: gaia_source
    >   ....


    #
    # System got twisted and took a while to sort itself out.
    # Manual intervention restarting the interpreters.
    # Not precise what I did .. clicked on some buttons ..
    #


# -----------------------------------------------------
# Test with 4 loops, 4 users.
#[root@ansibler]

    test-loop 4 4 \
    | tee /tmp/test-loop.json

    >   [
    >       {
    >       "iteration": 0,
    >       "testname": "multi-user-04-00",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >       ,{
    >       "iteration": 1,
    >       "testname": "multi-user-04-01",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >       ,{
    >       "iteration": 2,
    >       "testname": "multi-user-04-02",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >       ,{
    >       "iteration": 3,
    >       "testname": "multi-user-04-03",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >   ]


    grep 'Result:' /tmp/results/multi-user-04-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-02.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-03.txt:------------ Test Result: [PASS] ------------


# -----------------------------------------------------
# Back to 2 loops, 4 users.
#[root@ansibler]

    rm -f /tmp/results/multi-user-*

    test-loop 2 4 \
    | tee /tmp/test-loop.json


    >   [
    >       {
    >       "iteration": 0,
    >       "testname": "multi-user-04-00",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >       ,{
    >       "iteration": 1,
    >       "testname": "multi-user-04-01",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >   ]


    grep 'Result:' /tmp/results/multi-user-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------

    #
    # So we are OK now !?
    #


# -----------------------------------------------------
# Try 8 loops, 4 users.
#[root@ansibler]

    rm -f /tmp/results/multi-user-*

    test-loop 8 4 \
    | tee /tmp/test-loop.json


    >   [
    >       {
    >       "iteration": 0,
    >       "testname": "multi-user-04-00",
    >       "threads":
    >           [
    >             {
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >               ....
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               "value": "PASS",
    >               ....
    >             }
    >           ]
    >       }
    >   ]


    grep 'Result:' /tmp/results/multi-user-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-02.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-03.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-04.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-05.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-06.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-07.txt:------------ Test Result: [PASS] ------------


# -----------------------------------------------------
# Try 32 loops, 4 users.
#[root@ansibler]

    rm -f /tmp/results/multi-user-*

    test-loop 32 4 \
    | tee /tmp/test-loop.json

    grep 'Result:' /tmp/results/multi-user-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------
    >   ....
    >   ....
    >   /tmp/results/multi-user-04-30.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-31.txt:------------ Test Result: [PASS] ------------


# -----------------------------------------------------
# ... and another loops, 4 users.
#[root@ansibler]

    rm -f /tmp/results/multi-user-*

    test-loop 32 4 \
    | tee /tmp/test-loop.json

    grep 'Result:' /tmp/results/multi-user-*.txt

    >   /tmp/results/multi-user-04-00.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-01.txt:------------ Test Result: [PASS] ------------
    >   ....
    >   ....
    >   /tmp/results/multi-user-04-07.txt:------------ Test Result: [PASS] ------------
    >   /tmp/results/multi-user-04-08.txt:------------ Test Result: [PASS] ------------

