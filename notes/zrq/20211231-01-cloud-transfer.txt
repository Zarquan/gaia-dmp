#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Try guessing the cidr for the Ceph nodes ..

    Result:

# -----------------------------------------------------
# Login using the command line client ..
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --publish 8088:8088 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2021.08.25 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudname=gaia-arcus-eval
    buildname="aglais-$(date '+%Y%m%d')"
    builddate="$(date '+%Y%m%d:%H%M%S')"


# -----------------------------------------------------
# Get the details for our ceph router.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        router list

    >   +--------------------------------------+-------------------+--------+-------+----------------------------------+
    >   | ID                                   | Name              | Status | State | Project                          |
    >   +--------------------------------------+-------------------+--------+-------+----------------------------------+
    >   | 426f6903-de06-4954-ae3a-9dfbde3f18a7 | pfb29-ceph-router | ACTIVE | UP    | e216e6b502134b6185380be6ccd0bf09 |
    >   | c87e4464-ae32-4329-a001-cb5542b28a97 | pfb29-test        | ACTIVE | UP    | e216e6b502134b6185380be6ccd0bf09 |
    >   +--------------------------------------+-------------------+--------+-------+----------------------------------+


    cephroutername=pfb29-ceph-router

    cephrouterid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            router list \
                --format json \
        | jq -r '.[] | select(.Name == "'${cephroutername:?}'") | .ID'
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        router show \
            --format json \
            "${cephrouterid}" \
    | tee "/tmp/${cephroutername:?}.json" \
    | jq '{name, id, external_gateway_info, interfaces_info, routes}'

    >   {
    >     "name": "pfb29-ceph-router",
    >     "id": "426f6903-de06-4954-ae3a-9dfbde3f18a7",
    >     "external_gateway_info": {
    >       "network_id": "410920fb-5714-4447-b26a-e7b06092fc62",
    >       "enable_snat": true,
    >       "external_fixed_ips": [
    >         {
    >           "subnet_id": "5699fb5d-8316-4b88-b889-b05c8a1ec975",
    >           "ip_address": "10.9.1.172"
    >         }
    >       ]
    >     },
    >     "interfaces_info": [
    >       {
    >         "port_id": "f8de437c-245f-4f4f-b5fa-8680a62c16e4",
    >         "ip_address": "10.0.0.103",
    >         "subnet_id": "ca54eb70-d6fd-4550-bdc1-149f80da8efd"
    >       }
    >     ],
    >     "routes": []
    >   }


# -----------------------------------------------------
# Get the details for our main router.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        router list

    >   +--------------------------------------+-------------------+--------+-------+----------------------------------+
    >   | ID                                   | Name              | Status | State | Project                          |
    >   +--------------------------------------+-------------------+--------+-------+----------------------------------+
    >   | 426f6903-de06-4954-ae3a-9dfbde3f18a7 | pfb29-ceph-router | ACTIVE | UP    | e216e6b502134b6185380be6ccd0bf09 |
    >   | c87e4464-ae32-4329-a001-cb5542b28a97 | pfb29-test        | ACTIVE | UP    | e216e6b502134b6185380be6ccd0bf09 |
    >   +--------------------------------------+-------------------+--------+-------+----------------------------------+


    mainroutername=pfb29-test

    mainrouterid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            router list \
                --format json \
        | jq -r '.[] | select(.Name == "'${mainroutername:?}'") | .ID'
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        router show \
            --format json \
            "${mainrouterid}" \
    | tee "/tmp/${mainroutername:?}.json" \
    | jq '{name, id, external_gateway_info, interfaces_info, routes}'

    >   {
    >     "name": "pfb29-test",
    >     "id": "c87e4464-ae32-4329-a001-cb5542b28a97",
    >     "external_gateway_info": {
    >       "network_id": "57add367-d205-4030-a929-d75617a7c63e",
    >       "enable_snat": true,
    >       "external_fixed_ips": [
    >         {
    >           "subnet_id": "3fcaa5a5-ba8e-49a9-bf94-d87fbb0afc42",
    >           "ip_address": "128.232.222.223"
    >         }
    >       ]
    >     },
    >     "interfaces_info": [
    >       {
    >         "port_id": "2631aaa3-0890-4150-bcd9-eca6b19d4e00",
    >         "ip_address": "10.0.0.1",
    >         "subnet_id": "ca54eb70-d6fd-4550-bdc1-149f80da8efd"
    >       }
    >     ],
    >     "routes": [
    >       {
    >         "nexthop": "10.0.0.103",
    >         "destination": "10.9.0.0/16"
    >       }
    >     ]
    >   }


# -----------------------------------------------------
# Set the Manila API version.
# https://stackoverflow.com/a/58806536
#[root@ansibler]

    # Maximum available on cumulus.
    export OS_SHARE_API_VERSION=2.46

# -----------------------------------------------------
# Get the details of our Manila share.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        share list

    >   +--------------------------------------+----------------------------+------+-------------+-----------+-----------+-----------------+------+-------------------+
    >   | ID                                   | Name                       | Size | Share Proto | Status    | Is Public | Share Type Name | Host | Availability Zone |
    >   +--------------------------------------+----------------------------+------+-------------+-----------+-----------+-----------------+------+-------------------+
    >   | 03f8adb8-2764-4871-b1ef-6436663e9c19 | aglais-20211229-test-share |  512 | CEPHFS      | available | False     | ceph01_cephfs   |      | nova              |
    >   +--------------------------------------+----------------------------+------+-------------+-----------+-----------+-----------------+------+-------------------+

    sharename=aglais-20211229-test-share

    shareid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            share list \
                --format json \
        | jq -r '.[] | select(.Name == "'${sharename:?}'") | .ID'
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        share show \
            --format json \
            "${shareid:?}" \
    | tee "/tmp/${sharename:?}-share.json"

    locations=$(
        jq '.export_locations' "/tmp/${sharename:?}-share.json"
        )

    cephnodes=$(
        echo "${locations:?}" |
        sed '
            s/^.*path = \([^\\]*\).*$/\1/
            s/^\(.*\):\(\/.*\)$/\1/
            s/,/ /g
            '
            )

    cephpath=$(
        echo "${locations:?}" |
        sed '
            s/^.*path = \([^\\]*\).*$/\1/
            s/^\(.*\):\(\/.*\)$/\2/
            '
            )

    cephsize=$(
        jq '.size' "/tmp/${sharename:?}-share.json"
        )


    cat << EOF
Ceph path [${cephpath}]
Ceph size [${cephsize}]
EOF

    for cephnode in ${cephnodes:?}
    do
        echo "Ceph node [${cephnode:?}]"
    done

    >   Ceph path [/volumes/_nogroup/d2336b5b-e314-4aab-b14f-2bfe394c680a]
    >   Ceph size [512]

    >   Ceph node [10.4.200.9:6789]
    >   Ceph node [10.4.200.13:6789]
    >   Ceph node [10.4.200.17:6789]


# -----------------------------------------------------
# Get details of the read/write access rule.
#[root@ansibler]

    accessmode=rw

    accessid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            share access list \
                --format json \
                "${shareid:?}" \
        | jq -r ".[] | select(.access_level == \"${accessmode:?}\") | .id"
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        share access show \
            --format json \
            "${accessid:?}" \
    | tee "/tmp/${buildname:?}-${accessmode:?}-share-access.json" \
    | jq '{id, state, access_to, access_level, access_type}'

    >   {
    >     "id": "47e6494f-5175-4d3d-8119-b4304b870d61",
    >     "state": "active",
    >     "access_to": "aglais-20211229-test-share-rw",
    >     "access_level": "rw",
    >     "access_type": "cephx"
    >   }

    cephuser=$(
        jq -r '.access_to' "/tmp/${buildname:?}-${accessmode:?}-share-access.json"
        )

    cephkey=$(
        jq -r '.access_key' "/tmp/${buildname:?}-${accessmode:?}-share-access.json"
        )

    cat << EOF
Ceph user [${cephuser:?}]
Ceph key  [${cephkey:?}]
EOF

    >   Ceph user [aglais-20211229-test-share-rw]
    >   Ceph key  [################]


# -----------------------------------------------------
# Get the IP address for our ceph router.
#[root@ansibler]

    jq '.interfaces_info' "/tmp/${cephroutername:?}.json"

    >   [
    >     {
    >       "port_id": "f8de437c-245f-4f4f-b5fa-8680a62c16e4",
    >       "ip_address": "10.0.0.103",
    >       "subnet_id": "ca54eb70-d6fd-4550-bdc1-149f80da8efd"
    >     }
    >   ]

    aglaissubnetportip=$(
        jq -r '.interfaces_info[0].ip_address' "/tmp/${cephroutername:?}.json"
        )


# -----------------------------------------------------
# Make a guess at the Ceph node subnet CIDR.
#[root@ansibler]

    oldcephnetcidr=10.9.0.0/16
    newcephnetcidr=10.4.0.0/16


# -----------------------------------------------------
# Fix the static route on our main router.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        router unset \
            --route "destination=${oldcephnetcidr:?},gateway=${aglaissubnetportip:?}" \
            "${mainrouterid:?}"

    openstack \
        --os-cloud "${cloudname:?}" \
        router set \
            --route "destination=${newcephnetcidr:?},gateway=${aglaissubnetportip:?}" \
            "${mainrouterid:?}"

    openstack \
        --os-cloud "${cloudname:?}" \
        router show \
            --format json \
            "${mainrouterid:?}" \
    | tee "/tmp/${mainroutername:?}-router.json" \
    | jq '{name, id, external_gateway_info, interfaces_info, routes}'

    >   {
    >     "name": "pfb29-test",
    >     "id": "c87e4464-ae32-4329-a001-cb5542b28a97",
    >     "external_gateway_info": {
    >       "network_id": "57add367-d205-4030-a929-d75617a7c63e",
    >       "enable_snat": true,
    >       "external_fixed_ips": [
    >         {
    >           "subnet_id": "3fcaa5a5-ba8e-49a9-bf94-d87fbb0afc42",
    >           "ip_address": "128.232.222.223"
    >         }
    >       ]
    >     },
    >     "interfaces_info": [
    >       {
    >         "port_id": "2631aaa3-0890-4150-bcd9-eca6b19d4e00",
    >         "ip_address": "10.0.0.1",
    >         "subnet_id": "ca54eb70-d6fd-4550-bdc1-149f80da8efd"
    >       }
    >     ],
    >     "routes": [
    >       {
    >         "nexthop": "10.0.0.103",
    >         "destination": "10.4.0.0/16"
    >       }
    >     ]
    >   }


# -----------------------------------------------------
# Find the IP address for our test node.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        server list

    >   +--------------------------------------+-------------------------+--------+---------------------------------------+---------------+-------------+
    >   | ID                                   | Name                    | Status | Networks                              | Image         | Flavor      |
    >   +--------------------------------------+-------------------------+--------+---------------------------------------+---------------+-------------+
    >   | f7800318-a6cd-46f6-8b58-506354b13b77 | aglais-20211229-working | ACTIVE | pfb29-test=10.0.0.140, 128.232.222.74 | Fedora-34.1.2 | vm.v1.small |
    >   | b96b4e2b-182f-409a-9982-02d0719199ba | pfb29-test              | ACTIVE | pfb29-test=10.0.0.66, 128.232.222.218 | AlmaLinux-8.5 | vm.v1.tiny  |
    >   +--------------------------------------+-------------------------+--------+---------------------------------------+---------------+-------------+

    aglaisservername=aglais-20211229-working
    aglaisserverid=f7800318-a6cd-46f6-8b58-506354b13b77

    openstack \
        --os-cloud "${cloudname:?}" \
        server show \
            --format json \
            "${aglaisserverid:?}" \
    | tee "/tmp/${aglaisservername:?}.json" \
    | jq '.addresses'

    >   {
    >     "pfb29-test": [
    >       "10.0.0.140",
    >       "128.232.222.74"
    >     ]
    >   }


    jq '.addresses | to_entries' "/tmp/${aglaisservername:?}.json"

    >   [
    >     {
    >       "key": "pfb29-test",
    >       "value": [
    >         "10.0.0.140",
    >         "128.232.222.74"
    >       ]
    >     }
    >   ]


    floatip=$(
        jq -r '.addresses | to_entries | .[0].value[1]' "/tmp/${aglaisservername:?}.json"
        )


# -----------------------------------------------------
# Try to mount the CephFS share again ..
#[root@ansibler]

    mntopts=name=${cephuser:?},async,auto,nodev,noexec,nosuid,_netdev,rw
    mntowner=fedora
    mntgroup=users
    mntpath=/mnt/test
    mntfrom=${cephnodes// /,}:${cephpath:?}

    ssh fedora@${floatip:?} \
        "
        date
        hostname
        sudo mkdir '${mntpath:?}'
        sudo touch '${mntpath:?}/mount-failed'
        "

    ssh fedora@${floatip:?} \
        "
        date
        hostname
        echo '----'
        echo '${mntfrom:?}'
        echo '${mntpath:?}'
        echo '${mntopts:?}'
        echo '----'
        sudo mount \
            --verbose \
            --types 'ceph' \
            '${mntfrom:?}' \
            '${mntpath:?}' \
            --options '${mntopts:?}'
        "

    >   Fri Dec 31 02:17:06 UTC 2021
    >   aglais-20211229-machine
    >   ----
    >   10.4.200.9:6789,10.4.200.13:6789,10.4.200.17:6789:/volumes/_nogroup/d2336b5b-e314-4aab-b14f-2bfe394c680a
    >   /mnt/test
    >   name=aglais-20211229-test-share-rw,async,auto,nodev,noexec,nosuid,_netdev,rw
    >   ----
    >   parsing options: rw,nodev,noexec,nosuid,name=aglais-20211229-test-share-rw,_netdev
    >   mount.ceph: options "name=aglais-20211229-test-share-rw" will pass to kernel.
    >   mount error: no mds server is up or the cluster is laggy


# -----------------------------------------------------
# Try to ping one of the Ceph nodes ..
#[root@ansibler]

    ssh fedora@${floatip:?} \
        "
        ping -c 10 10.4.200.9
        "

    >   PING 10.4.200.9 (10.4.200.9) 56(84) bytes of data.
    >   From 10.0.0.103 icmp_seq=1 Destination Net Unreachable
    >   From 10.0.0.103 icmp_seq=2 Destination Net Unreachable
    >   From 10.0.0.103 icmp_seq=3 Destination Net Unreachable
    >   From 10.0.0.103 icmp_seq=4 Destination Net Unreachable
    >   
    >   --- 10.4.200.9 ping statistics ---
    >   10 packets transmitted, 0 received, +4 errors, 100% packet loss, time 9224ms


    ssh fedora@${floatip:?} \
        "
        sudo dnf install -y traceroute
        "

    ssh fedora@${floatip:?} \
        "
        traceroute '10.4.200.9'
        "

    >   traceroute to 10.4.200.9 (10.4.200.9), 30 hops max, 60 byte packets
    >    1  10.0.0.103 (10.0.0.103)  0.860 ms !N  0.906 ms !N  0.801 ms !N


















