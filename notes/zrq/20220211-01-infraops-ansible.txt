#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#


    Target:

        Create infra-ops server to store secrets and local git repositories.

    Result:

        Work interrupted by USS strike action.


# -----------------------------------------------------
# Merge upstream changes and rebase.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git checkout master

    >   Already on 'master'
    >   Your branch is up to date with 'origin/master'.


        git fetch upstream

    >   remote: Enumerating objects: 74, done.
    >   remote: Counting objects: 100% (65/65), done.
    >   remote: Compressing objects: 100% (44/44), done.
    >   remote: Total 46 (delta 24), reused 6 (delta 0), pack-reused 0
    >   Unpacking objects: 100% (46/46), 16.31 KiB | 491.00 KiB/s, done.
    >   From github.com:wfau/aglais
    >    + b2c4ac2...5169a74 dependabot/pip/deployments/common/pip/numpy-1.21.0 -> upstream/dependabot/pip/deployments/common/pip/numpy-1.21.0  (forced update)
    >      53d2686..fef36b7  master                                             -> upstream/master


        git merge upstream/master

    >   Updating 53d2686..fef36b7
    >   Fast-forward
    >    deployments/hadoop-yarn/bin/create-all.sh                |  12 ++--
    >    deployments/zeppelin/test/config/notebooks.json          |   6 ++
    >    notes/stv/20220131-gaiaxpy-deploy-benchmark.txt          | 176 +++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20220203-gaiaxpy-pytests.txt                   | 323 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    >    notes/stv/20220207-test-deploy-library-validation-01.txt | 161 +++++++++++++++++++++++++++++++++++++++++
    >    5 files changed, 672 insertions(+), 6 deletions(-)
    >    create mode 100644 notes/stv/20220131-gaiaxpy-deploy-benchmark.txt
    >    create mode 100644 notes/stv/20220203-gaiaxpy-pytests.txt
    >    create mode 100644 notes/stv/20220207-test-deploy-library-validation-01.txt


        git status

    >   On branch master
    >   Your branch is ahead of 'origin/master' by 7 commits.
    >     (use "git push" to publish your local commits)
    >   ....
    >   ....


        git push

    >   Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
    >   To github.com:Zarquan/aglais.git
    >      53d2686..fef36b7  master -> master


    popd


# -----------------------------------------------------
# Create a new branch.
#[user@desktop]

    branchname=infra-ops

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        branchprev=$(git branch --show-current)
        branchnext=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout master
        git checkout -b "${branchnext:?}"

    >   ....
    >   ....


        git push --set-upstream 'origin' "$(git branch --show-current)"

    >   ....
    >   ....


    popd


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2021.08.25 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudbase='arcus'
    cloudname='iris-gaia-data'


# -----------------------------------------------------
# Configuration settings.
#[root@ansibler]

    buildname="aglais-$(date '+%Y%m%d')"
    builddate="$(date '+%Y%m%d:%H%M%S')"

    deployconf="${2:-infra-ops-01}"
    deployname="${cloudname:?}-$(date '+%Y%m%d')"
    deploydate=$(date '+%Y%m%dT%H%M%S')

    configyml='/tmp/aglais-config.yml'
    statusyml='/tmp/aglais-status.yml'
    rm -f "${statusyml:?}"
    touch "${statusyml:?}"

    yq eval \
        --inplace \
        "
        (.aglais.status.deployment.type = \"hadoop-yarn\") |
        (.aglais.status.deployment.conf = \"${deployconf}\") |
        (.aglais.status.deployment.name = \"${deployname}\") |
        (.aglais.status.deployment.date = \"${deploydate}\") |
        (.aglais.spec.openstack.cloud.base = \"${cloudbase}\") |
        (.aglais.spec.openstack.cloud.name = \"${cloudname}\")
        " "${statusyml:?}"

cat << EOF
---- ---- ----
Cloud base [${cloudbase}]
Cloud name [${cloudname}]
Build name [${buildname}]
---- ---- ----
Deploy conf [${deployconf}]
Deploy name [${deployname}]
Deploy date [${deploydate}]
---- ---- ----
EOF

    >   Cloud base [arcus]
    >   Cloud name [iris-gaia-data]
    >   Build name [aglais-20220211]
    >   ---- ---- ----
    >   Deploy conf [infra-ops-01]
    >   Deploy name [iris-gaia-data-20220211]
    >   Deploy date [20220211T154044]
    >   ---- ---- ----


# -----------------------------------------------------
# Delete any existing known hosts file..
# Temp fix until we get a better solution.
# https://github.com/wfau/aglais/issues/401

    rm -f "${HOME}/.ssh/known_hosts"


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    rm -f "${statusyml:?}"
    touch "${statusyml:?}"

    yq eval \
        --inplace \
        "
        (.aglais.status.deployment.type = \"hadoop-yarn\") |
        (.aglais.status.deployment.conf = \"${deployconf}\") |
        (.aglais.status.deployment.name = \"${deployname}\") |
        (.aglais.status.deployment.date = \"${deploydate}\") |
        (.aglais.spec.openstack.cloud.base = \"${cloudbase}\") |
        (.aglais.spec.openstack.cloud.name = \"${cloudname}\")
        " "${statusyml:?}"

# -----------------------------------------------------
# Create things one step at a time.
#[root@ansibler]

    pushd "/deployments/infra-ops/ansible"

         ansible-playbook \
            --verbose \
            --inventory 'hosts.yml' \
            "01-create-keypair.yml"

         ansible-playbook \
            --verbose \
            --inventory 'hosts.yml' \
            "02-create-network.yml"

         ansible-playbook \
            --verbose \
            --inventory 'hosts.yml' \
            "03-create-security.yml"

         ansible-playbook \
            --verbose \
            --inventory 'hosts.yml' \
            "04-create-celatum.yml"

         ansible-playbook \
            --verbose \
            --inventory 'hosts.yml' \
            "05-create-gitstore.yml"

    popd


TODO
    create the network
    create the VMs (create masters)
    update fedora
    config ssh
    config dns
    host keys
    ping test
    cinder volumes

