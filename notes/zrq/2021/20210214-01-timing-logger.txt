#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Target:

        Issue #371
        https://github.com/wfau/aglais/issues/371

        Create a jq parser to extract the timing information from a Zeppelin notebook.

    Result:

        Initial version works.
        Extracts the paragraph id, star and end times, and calculates the elapsed time.


    #
    # REST API documentation.
    # https://zeppelin.apache.org/docs/0.7.0/rest-api/rest-notebook.html#export-a-note

    #
    # REST API template
    # http://[zeppelin-server]:[zeppelin-port]/api/notebook/export/[noteId]

    #
    # HTML notebook URL
    # http://128.232.227.222:8080/#/notebook/2FX82FMTH


# -----------------------------------------------------
# Use the REST API to get a copy of the notebook.
#[user@desktop]

    curl -v 'http://128.232.227.222:8080/api/notebook/export/2FX82FMTH'

    >   *   Trying 128.232.227.222:8080...
    >   * Connected to 128.232.227.222 (128.232.227.222) port 8080 (#0)
    >   > GET /api/notebook/export/2FX82FMTH HTTP/1.1
    >   > Host: 128.232.227.222:8080
    >   > User-Agent: curl/7.69.1
    >   > Accept: */*
    >   >
    >   * Mark bundle as not supporting multiuse
    >   < HTTP/1.1 302 Found
    >   < Date: Sunday, February 14, 2021 6:21:46 PM UTC
    >   < Access-Control-Allow-Credentials: true
    >   < Access-Control-Allow-Headers: authorization,Content-Type
    >   < Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, HEAD, DELETE
    >   < X-FRAME-OPTIONS: SAMEORIGIN
    >   < X-XSS-Protection: 1
    >   < Set-Cookie: JSESSIONID=c3b28d9a-67d3-403b-8d10-6931e35b7211; Path=/; HttpOnly
    >   < Location: http://128.232.227.222:8080/api/login;JSESSIONID=c3b28d9a-67d3-403b-8d10-6931e35b7211
    >   < Content-Length: 0
    >   < Server: Jetty(9.4.14.v20181114)
    >   <


# -----------------------------------------------------
# Use the REST API to login.
# https://community.cloudera.com/t5/Support-Questions/Authentication-with-the-Zeppelin-REST-API/td-p/115170
#[user@desktop]

    gaiauser=$(secret aglais.zeppelin.gaiauser)
    gaiapass=$(secret aglais.zeppelin.gaiapass)

    curl \
        --include \
        --request 'POST' \
        --data "userName=${gaiauser:?}" \
        --data "password=${gaiapass:?}" \
        'http://128.232.227.222:8080/api/login'

    >   HTTP/1.1 200 OK
    >   Date: Sunday, February 14, 2021 6:29:54 PM UTC
    >   Access-Control-Allow-Credentials: true
    >   Access-Control-Allow-Headers: authorization,Content-Type
    >   Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, HEAD, DELETE
    >   X-FRAME-OPTIONS: SAMEORIGIN
    >   X-XSS-Protection: 1
    >   Set-Cookie: rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sat, 13-Feb-2021 18:29:54 GMT
    >   Set-Cookie: JSESSIONID=28567db4-9c2c-4b24-afbb-4517b3dd9dbf; Path=/; HttpOnly
    >   Set-Cookie: JSESSIONID=deleteMe; Path=/; Max-Age=0; Expires=Sat, 13-Feb-2021 18:29:54 GMT
    >   Set-Cookie: rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sat, 13-Feb-2021 18:29:54 GMT
    >   Set-Cookie: JSESSIONID=278c187f-7add-4ee3-a0e8-492a132cadb4; Path=/; HttpOnly
    >   Set-Cookie: rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sat, 13-Feb-2021 18:29:54 GMT
    >   Content-Type: application/json
    >   Content-Length: 130
    >   Server: Jetty(9.4.14.v20181114)

    >   {
    >   "status":"OK",
    >   "message":"",
    >   "body": {
    >       "principal":"gaiauser",
    >       "ticket":"4342bdd9-0a7b-4f27-a216-bae695a69b22",
    >       "roles":"[\"role1\"]"
    >       }
    >   }


# -----------------------------------------------------
# Use the REST API to login, and save the cookie in a cookie-jar.
#[user@desktop]

    curl \
        --request 'POST' \
        --cookie-jar '/tmp/cookies' \
        --data "userName=${gaiauser:?}" \
        --data "password=${gaiapass:?}" \
        'http://128.232.227.222:8080/api/login'

    >   {
    >   "status":"OK",
    >   "message":"",
    >   "body": {
    >       "principal":"gaiauser",
    >       "ticket":"4342bdd9-0a7b-4f27-a216-bae695a69b22",
    >       "roles":"[\"role1\"]"
    >       }
    >   }


    cat '/tmp/cookies'

    >   # Netscape HTTP Cookie File
    >   # https://curl.haxx.se/docs/http-cookies.html
    >   # This file was generated by libcurl! Edit at your own risk.
    >
    >   #HttpOnly_128.232.227.222	FALSE	/	FALSE	0	JSESSIONID	405b514d-c195-488b-98a8-86c9f06d65e2


# -----------------------------------------------------
# Use the cookie in our cookie-jar to authenticate the GET.
#[user@desktop]

    curl \
        --cookie '/tmp/cookies' \
        'http://128.232.227.222:8080/api/notebook/export/2FX82FMTH' \
    | jq '.'


    >   >     | jq ''
    >     % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
    >                                    Dload  Upload   Total   Spent    Left  Speed
    >   100  761k    0  761k    0     0  1603k      0 --:--:-- --:--:-- --:--:-- 1600k
    >   {
    >     "status": "OK",
    >     "message": "",
    >     "body": "{\n  \"paragraphs\": [....
    >     ....
    >     ....
    >     .... \"info\": {}\n}"
    >   }


# -----------------------------------------------------
# GET the note status rather than the content.
#[user@desktop]

    curl \
        --cookie '/tmp/cookies' \
        'http://128.232.227.222:8080/api/notebook/job/2FX82FMTH' \
    | jq '.'

    >   {
    >     "status": "OK",
    >     "body": [
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:33:46 UTC 2021",
    >         "finished": "Sat Feb 13 13:33:46 UTC 2021",
    >         "id": "20201013-131059_546082898",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:33:46 UTC 2021",
    >         "finished": "Sat Feb 13 13:34:36 UTC 2021",
    >         "id": "20201013-131649_1734629667",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:34:36 UTC 2021",
    >         "finished": "Sat Feb 13 13:35:16 UTC 2021",
    >         "id": "20201013-132418_278702125",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:35:16 UTC 2021",
    >         "finished": "Sat Feb 13 13:38:58 UTC 2021",
    >         "id": "20201120-094650_221463065",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:38:58 UTC 2021",
    >         "finished": "Sat Feb 13 13:38:58 UTC 2021",
    >         "id": "20201120-110502_1704727157",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:38:58 UTC 2021",
    >         "finished": "Sat Feb 13 13:46:06 UTC 2021",
    >         "id": "20201123-105445_95907042",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:46:06 UTC 2021",
    >         "finished": "Sat Feb 13 13:46:06 UTC 2021",
    >         "id": "20201015-161110_18118893",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:46:07 UTC 2021",
    >         "finished": "Sat Feb 13 15:05:36 UTC 2021",
    >         "id": "20201013-152110_1282917873",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 15:05:36 UTC 2021",
    >         "finished": "Sat Feb 13 15:05:36 UTC 2021",
    >         "id": "20201015-131823_1744793710",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 15:05:36 UTC 2021",
    >         "finished": "Sat Feb 13 15:24:00 UTC 2021",
    >         "id": "20201016-154755_24366630",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 15:24:00 UTC 2021",
    >         "finished": "Sat Feb 13 15:24:00 UTC 2021",
    >         "id": "20201123-163421_1811049882",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 15:24:00 UTC 2021",
    >         "finished": "Sat Feb 13 16:19:28 UTC 2021",
    >         "id": "20201123-162249_1468741293",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 16:19:28 UTC 2021",
    >         "finished": "Sat Feb 13 16:33:33 UTC 2021",
    >         "id": "20201124-100512_110153564",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 16:33:33 UTC 2021",
    >         "finished": "Sat Feb 13 17:01:16 UTC 2021",
    >         "id": "20201125-103046_1353183691",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 17:01:16 UTC 2021",
    >         "finished": "Sat Feb 13 17:28:35 UTC 2021",
    >         "id": "20201125-163312_728555601",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 17:28:35 UTC 2021",
    >         "finished": "Sat Feb 13 17:56:00 UTC 2021",
    >         "id": "20201125-155131_269531128",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 17:56:00 UTC 2021",
    >         "finished": "Sat Feb 13 18:14:46 UTC 2021",
    >         "id": "20201124-161145_1933006801",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 18:14:46 UTC 2021",
    >         "finished": "Sat Feb 13 18:29:25 UTC 2021",
    >         "id": "20201124-171324_1960205489",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "id": "20210108-142101_850914828",
    >         "status": "FINISHED"
    >       }
    >     ]
    >   }


# -----------------------------------------------------
# Is there an easy way of doing the date subraction to get the execution time ?
#[user@desktop]

    # GoogleFoo to the rescue
    # http://www.fresse.org/dateutils/

    dnf install dateutils

    started="Sat Feb 13 17:56:00 UTC 2021"
    finished="Sat Feb 13 18:29:25 UTC 2021"

    datediff "${started:?}" "${finished:?}"

    >   ddiff: Error: reference DATE must be specified

    datediff \
        --input-format '%a %b %-d %H:%M:%S %Z %Y' \
        "${started:?}" "${finished:?}"

    >   ddiff: Error: reference DATE must be specified


    datediff \
        '13 Feb 2021 17:56:00' \
        '13 Feb 2021 18:29:25'

    >   ddiff: Error: reference DATE must be specified


    datediff \
        '2021-02-13 17:56:00' \
        '2021-02-13 18:29:25'

    >   2005s


    datediff \
        --format '%H:%M:%S' \
        '2021-02-13 17:56:00' \
        '2021-02-13 18:29:25'

    >   0:33:25


    datediff \
        --format '%H:%M:%S' \
        --input-format '%Y %b %d %H:%M:%S' \
        '2021 Feb 13 17:56:00' \
        '2021 Feb 13 18:29:25'

    >   0:33:25

    #
    # Need to parse the crappy date format into something useable.
    #

    strptime '%a %b $-d %H:%M:%S %Z %Y' "${started:?}"

    >   strptime: cannot make sense of `Sat Feb 13 17:56:00 UTC 2021' using the given input formats

    #
    # Need to parse the crappy date format into something useable.
    #

    echo "${started:?}" | sed '
        s/\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)/\6 \2 \3 \4/
        '

    >   2021 Feb 13 17:56:00


    dateform()
        {
        local input=${1:?}
        echo "${input:?}" | sed '
            s/\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)/\6 \2 \3 \4/
            '
        }

    dateform "${started}"

    >   2021 Feb 13 17:56:00

    datediff \
        --format '%H:%M:%S' \
        --input-format '%Y %b %d %H:%M:%S' \
        "$(dateform "${started:?}")" \
        "$(dateform "${finished:?}")"

    >   0:33:25

    #
    # Code to generate the date/time is here.
    # https://github.com/apache/zeppelin/blob/f3bdd4a1fa0cf19bc1015955d8ade4bc79a8e16f/zeppelin-server/src/main/java/org/apache/zeppelin/rest/message/ParagraphJobStatus.java#L35
    # Looks like a standard java.util.Date.toString() call.
    #
    # TODO : PR to implement an extra param that formats the dates ?
    #


# -----------------------------------------------------
# GET the note status rather than the content.
#[user@desktop]

    curl \
        --cookie '/tmp/cookies' \
        'http://128.232.227.222:8080/api/notebook/job/2FX82FMTH' \
    | jq '.'


    >   {
    >     "status": "OK",
    >     "body": [
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 13:33:46 UTC 2021",
    >         "finished": "Sat Feb 13 13:33:46 UTC 2021",
    >         "id": "20201013-131059_546082898",
    >         "status": "FINISHED"
    >       },
    >   ....
    >   ....
    >       {
    >         "progress": "100",
    >         "started": "Sat Feb 13 18:14:46 UTC 2021",
    >         "finished": "Sat Feb 13 18:29:25 UTC 2021",
    >         "id": "20201124-171324_1960205489",
    >         "status": "FINISHED"
    >       },
    >       {
    >         "progress": "100",
    >         "id": "20210108-142101_850914828",
    >         "status": "FINISHED"
    >       }
    >     ]
    >   }


    #
    # For each element in the list ..
    # Calculate the elapsed time.
    #


    curl \
        --cookie '/tmp/cookies' \
        'http://128.232.227.222:8080/api/notebook/job/2FX82FMTH' \
    | jq '.body[]' \
    > status.txt

    #
    # First format the start and end times and collect them together on a third line.
    #

    sed '
        s/\("started":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        s/\("finished":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        /"started":/ {
            h
            s/\([[:space:]]*\)"started":[[:space:]]*\("[^"]*"\).*$/\1\2/
            x
            }
        /"finished":/ {
            H
            x
            s/[[:space:]]*"finished":[[:space:]]*\("[^"]*"\).*$/ \1/
            s/\([[:space:]]*\)\(.*\)/\1"elapsed": \2/
            x
            G
            }
        ' status.txt


1  "started": "2021 Feb 13 13:38:58",
2  "finished": "2021 Feb 13 13:46:06",

--

P  "started": "2021 Feb 13 13:38:58",

H  "started": "2021 Feb 13 13:38:58",
P  "started": "2021 Feb 13 13:38:58",

H  "started": "2021 Feb 13 13:38:58",
P  "2021 Feb 13 13:38:58"

H  "2021 Feb 13 13:38:58"
P  "started": "2021 Feb 13 13:38:58",

--

H  "2021 Feb 13 13:38:58"
P  "finished": "2021 Feb 13 13:46:06",

H  "2021 Feb 13 13:38:58"\n"finished": "2021 Feb 13 13:46:06",
P  "finished": "2021 Feb 13 13:46:06",

H  "finished": "2021 Feb 13 13:46:06",
P  "2021 Feb 13 13:38:58"\n"finished": "2021 Feb 13 13:46:06",

H  "finished": "2021 Feb 13 13:46:06",
P  "2021 Feb 13 13:38:58" "2021 Feb 13 13:46:06"

H  "finished": "2021 Feb 13 13:46:06",
P  "elapsed": "2021 Feb 13 13:38:58" "2021 Feb 13 13:46:06"

H  "elapsed": "2021 Feb 13 13:38:58" "2021 Feb 13 13:46:06"
P  "finished": "2021 Feb 13 13:46:06",

P  "finished": "2021 Feb 13 13:46:06",
   "elapsed": "2021 Feb 13 13:38:58" "2021 Feb 13 13:46:06"

--

    >   {
    >     "progress": "100",
    >     "started": "2021 Feb 13 13:33:46",
    >     "finished": "2021 Feb 13 13:33:46",
    >     "elapsed": "2021 Feb 13 13:33:46" "2021 Feb 13 13:33:46"
    >     "id": "20201013-131059_546082898",
    >     "status": "FINISHED"
    >   }
    >   {
    >     "progress": "100",
    >     "started": "2021 Feb 13 13:33:46",
    >     "finished": "2021 Feb 13 13:34:36",
    >     "elapsed": "2021 Feb 13 13:33:46" "2021 Feb 13 13:34:36"
    >     "id": "20201013-131649_1734629667",
    >     "status": "FINISHED"
    >   }
    >   ....
    >   ....

    #
    # Add a call to datediff to generate the elapsed time.
    #

    sed '
        s/\("started":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        s/\("finished":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        /"started":/ {
            h
            s/\([[:space:]]*\)"started":[[:space:]]*\("[^"]*"\).*$/\1\2/
            x
            }
        /"finished":/ {
            H
            x
            s/[[:space:]]*"finished":[[:space:]]*\("[^"]*"\).*$/ \1/
            s/\([[:space:]]*\)\(.*\)/\1echo "\1\\"elapsed\\": \\"$(datediff --format "%H:%M:%S" --input-format "%Y %b %d %H:%M:%S" \2)\\","/e
            x
            G
            }
        ' status.txt

    >   {
    >     "progress": "100",
    >     "started": "2021 Feb 13 13:33:46",
    >     "finished": "2021 Feb 13 13:33:46",
    >     "elapsed": "0:0:0",
    >     "id": "20201013-131059_546082898",
    >     "status": "FINISHED"
    >   }
    >   {
    >     "progress": "100",
    >     "started": "2021 Feb 13 13:33:46",
    >     "finished": "2021 Feb 13 13:34:36",
    >     "elapsed": "0:0:50",
    >     "id": "20201013-131649_1734629667",
    >     "status": "FINISHED"
    >   }
    >   ....
    >   ....

    #
    # Putting it all together.
    # All because Zeppelin uses the default Java data format in a JSON response.
    #

    curl \
        --silent \
        --cookie '/tmp/cookies' \
        'http://128.232.227.222:8080/api/notebook/job/2FX82FMTH' \
    | jq '.body' \
    | sed '
        s/\("started":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        s/\("finished":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        /"started":/ {
            h
            s/\([[:space:]]*\)"started":[[:space:]]*\("[^"]*"\).*$/\1\2/
            x
            }
        /"finished":/ {
            H
            x
            s/[[:space:]]*"finished":[[:space:]]*\("[^"]*"\).*$/ \1/
            s/\([[:space:]]*\)\(.*\)/\1echo "\1\\"elapsed\\": \\"$(datediff --format "%H:%M:%S" --input-format "%Y %b %d %H:%M:%S" \2)\\","/e
            x
            G
            }
        '

    #
    # Just get the elapsed time.
    #

    curl \
        --silent \
        --cookie '/tmp/cookies' \
        'http://128.232.227.222:8080/api/notebook/job/2FX82FMTH' \
    | jq '.body' \
    | sed '
        s/\("started":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        s/\("finished":[[:space:]]*\)"\([[:alpha:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)[[:space:]]*\([[:digit:]]*:[[:digit:]]*:[[:digit:]]*\)[[:space:]]*\([[:alpha:]]*\)[[:space:]]*\([[:digit:]]*\)"/\1"\7 \3 \4 \5"/
        /"started":/ {
            h
            s/\([[:space:]]*\)"started":[[:space:]]*\("[^"]*"\).*$/\1\2/
            x
            }
        /"finished":/ {
            H
            x
            s/[[:space:]]*"finished":[[:space:]]*\("[^"]*"\).*$/ \1/
            s/\([[:space:]]*\)\(.*\)/\1echo "\1\\"elapsed\\": \\"$(datediff --format "%H:%M:%S" --input-format "%Y %b %d %H:%M:%S" \2)\\","/e
            x
            G
            }
        ' \
    | jq -r '.[] | select(.elapsed != null) | .elapsed'




