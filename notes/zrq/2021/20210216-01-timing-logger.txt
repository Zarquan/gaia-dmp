#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Target:

        Issue #371
        https://github.com/wfau/aglais/issues/371

        Create a jq parser to extract the timing information from a Zeppelin notebook.

    Result:

        Work in progress ...


    #
    # REST API documentation.
    # https://zeppelin.apache.org/docs/0.7.0/rest-api/rest-notebook.html#export-a-note

    #
    # REST API template
    # http://[zeppelin-server]:[zeppelin-port]/api/notebook/export/[noteId]

    #
    # JQ download/install
    # https://stedolan.github.io/jq/download/



    zeppelinurl=http://128.232.227.222:8080
    notebookid=2FX82FMTH

    checkstatus()
        {
        local zeppelinurl=${1:?}
        local notebookid=${2:?}
        local timingdir=/tmp/aglais/timing
        local timingfile=\${timingdir:?}/aglais-notebookid-$(date '+%Y%m%dT%H%M%S').json

        rm -f "${timingfile:?}"


        curl \
            --silent \
            --cookie "${tempdir:?}/cookies" \
            "${zeppelinurl:?}/api/notebook/${notebookid}" \
        | jq '.' \
        > "${timingfile:?}"





        ## If the file is empty
        ## Try login
        ## Repeat get

        ## If file is not empty



        | sed '
            /"dateStarted": null,/d
            /"dateStarted":/ {
                h
                s/\([[:space:]]*\)"dateStarted":[[:space:]]*\("[^"]*"\).*$/\1\2/
                x
                }
            /"dateFinished": null,/ d
            /"dateFinished":/ {
                H
                x
                s/[[:space:]]*"dateFinished":[[:space:]]*\("[^"]*"\).*$/ \1/
                s/\([[:space:]]*\)\(.*\)/\1echo "\1\\"elapsedTime\\": \\"$(datediff --format "%H:%M:%S" --input-format "%b %d, %Y %H:%M:%S %p" \2)\\","/e
                x
                G
                }
            ' \
        | jq '
            .body.paragraphs[] | select(.results.code != null) | {
                title,
                result: .results.code,
                time:   .elapsedTime,
                output: ((.results | select(.msg | length > 0) | .msg[] | select(.type == "TEXT") | .data | split("\n") | map(select(startswith("-")))) // "-")
                }
            '
        }

