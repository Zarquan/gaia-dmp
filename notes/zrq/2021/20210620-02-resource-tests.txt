#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#


    Target:

        Automate the counting process.
        Create a non-destructive test that can be run anytime.

    Result:

        Work in progress ..

    References:

        Tessellation
        https://en.wikipedia.org/wiki/Tessellation

            A tessellation or tiling of a flat surface is the covering of a plane using
            one or more geometric shapes, called tiles, with no overlaps and no gaps.

        Tessera
        https://en.wikipedia.org/wiki/Tessera

            A tessera (plural: tesserae, diminutive tessella) is an individual tile,
            usually formed in the shape of a cube, used in creating a mosaic.

        Update the Cascade lake flavors for Gaia
        https://github.com/RSE-Cambridge/cumulus-config/issues/71

        Update the Gaia Cascade lake flavors to achieve the best fit
        https://github.com/RSE-Cambridge/cumulus-config/pull/72

    TODO:

        Better way of findinf the default keypair for this user.
        Current method just gets the first in the list.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname openstacker \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2020.12.02 \
        bash


# -----------------------------------------------------
# Delete everything from all three clouds.
#[user@openstacker]

    /deployments/openstack/bin/delete-all.sh \
        'gaia-dev'

    >   ....
    >   ....


    /deployments/openstack/bin/delete-all.sh \
        'gaia-test'

    >   ....
    >   ....


    /deployments/openstack/bin/delete-all.sh \
        'gaia-prod'

    >   ....
    >   ....


# -----------------------------------------------------
# Get the name of our keypair.
#[user@openstacker]

    cloudname=gaia-dev

    keyname=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            keypair list \
                --format json \
        | jq -r '.[0] | .Name'
        )

    echo "Key name [${keyname:?}]"

    >   Key name [zrq-gaia-keypair]


# -----------------------------------------------------
# Find the subnet and network ID for the default network.
#[user@openstacker]

    subnetid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            subnet list \
                --format json \
        | jq -r '.[] | select(.Name == "cumulus-internal") | .ID'
        )

    networkid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            subnet show \
                --format json \
                "${subnetid:?}" \
        | jq -r '.network_id'
        )

cat << EOF
Subnet  [${subnetid:?}]
Network [${networkid:?}]
EOF

    >   Subnet  [01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290]
    >   Network [ecb791d5-1022-447a-a79c-8f38a0f5c990]


# -----------------------------------------------------
# Get the ID of the Fedora image.
#[user@openstacker]

    imageid=$(
        openstack \
            --os-cloud "${cloudname}" \
            image list \
                --format json \
        | jq -r '.[] | select(.Name | test("Fedora-30")) | .ID'
        )

    echo "Fedora-30 [${imageid:?}]"

    >   Fedora-30 [ade3a5aa-a6a3-4761-8eed-083e5ce1f117]


# -----------------------------------------------------
# List the gaia flavors.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        flavor list \
            --format json \
        | jq -r '.[] | select(.Name | startswith("gaia")) | .Name '

    >   gaia.cclake.2vcpu
    >   gaia.cclake.3vcpu
    >   gaia.cclake.1vcpu
    >   gaia.cclake.55vcpu
    >   gaia.cclake.27vcpu
    >   gaia.cclake.13vcpu
    >   gaia.v1.special.tiny
    >   gaia.cclake.6vcpu


# -----------------------------------------------------
# Create a cclake-medium-04 deployment in dev.
#[user@openstacker]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "gaia-dev" \
            'cclake-medium-04'

    >   real    46m55.715s
    >   user    12m57.584s
    >   sys     4m24.877s


# -----------------------------------------------------
# List the ACTIVE instances.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        server list \
            --format json \
    | jq -r '.[] | select(.Status == "ACTIVE") | "\(.Status) \(.Flavor) \(.Name)"'

    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker04
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker03
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker02
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-master01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-monitor
    >   ACTIVE gaia.cclake.6vcpu gaia-dev-20210621-zeppelin


    openstack \
        --os-cloud "${cloudname:?}" \
        server list \
            --format json \
    | jq -r '[.[] | select(.Status == "ACTIVE")] | length'

    >   7


# -----------------------------------------------------
# Create our lookup functions.
#[user@openstacker]

    getflavorid()
        {
        local flavorname=${1:?}
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
            | jq -r '.[] | select(.Name == "'${flavorname}'") | .ID'
        }


    getimageid()
        {
        local imagename=${1:?}
        openstack \
            --os-cloud "${cloudname:?}" \
            image list \
                --format json \
            | jq -r '.[] | select(.Name | test("'${imagename}'")) | .ID'
        }



    getflavorid 'gaia.cclake.13vcpu'

    >   9a8df2c8-83fa-43f2-84da-fcc47e2c0144


    getimageid 'Fedora-30'

    >   ade3a5aa-a6a3-4761-8eed-083e5ce1f117


# -----------------------------------------------------
# List the existing instances.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        server list \
            --format json \
    | jq -r '.[] | "\(.Status) \(.Flavor) \(.Name)"'

    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker04
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker03
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker02
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-master01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-monitor
    >   ACTIVE gaia.cclake.6vcpu gaia-dev-20210621-zeppelin


# -----------------------------------------------------
# Create some Tessera.
#[user@openstacker]

    vmcount=60

    flavorid=$(
        getflavorid 'gaia.cclake.13vcpu'
        )

    imageid=$(
        getimageid 'Fedora-30'
        )

    datetime=$(
        date '+%Y%m%d%H%M%S'
        )

    for ((i=0 ; i < vmcount ; i++))
    do
        vmname=tessera-${datetime:?}-${i}
        echo "    Node   [${vmname}]"
        openstack \
            --os-cloud "${cloudname}" \
            server create \
                --format json \
                --image "${imageid:?}" \
                --flavor "${flavorid:?}" \
                --network "${networkid:?}" \
                --key-name "${keyname:?}" \
                "${vmname:?}" \
        | jq '.' \
        > '/tmp/${cloudname:?}-${vmname:?}.json'
    done


# -----------------------------------------------------
# List all the active instances.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        server list \
            --format json \
    | jq -r '.[] | select(.Status == "ACTIVE") | "\(.Status) \(.Flavor) \(.Name)"'

    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-31
    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-30
    >   ....
    >   ....
    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-1
    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-0
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker04
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker03
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker02
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-master01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-monitor
    >   ACTIVE gaia.cclake.6vcpu gaia-dev-20210621-zeppelin
    >   -END--
    >   
    >   
    >   # -----------------------------------------------------
    >   # List all the tessera instances.
    >   #[user@openstacker]
    >   
    >       openstack \
    >           --os-cloud "${cloudname:?}" \
    >           server list \
    >               --format json \
    >       | jq -r '.[] | select(.Name | startswith("tessera")) | "\(.Status) \(.Flavor) \(.Name)"'
    >   
    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-31
    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-30
    >   ....
    >   ....
    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-1
    >   ACTIVE gaia.cclake.13vcpu tessera-20210621175511-0


# -----------------------------------------------------
# List all the tessera instances.
#[user@openstacker]

    echo "Deleting"
    for instance in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            server list \
                --format json \
        | jq -r '.[] | select(.Name | startswith("tessera")) | .ID'
        )
    do
        echo "  ID : [${instance:?}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            server delete \
                "${instance}"
    done

    >     ID : [b94d21b8-9c5f-4bea-a197-fb69e7456409]
    >     ID : [4738da92-3f04-4401-8ecc-5af872f56f07]
    >     ....
    >     ....
    >     ID : [4219640b-4065-44f0-97fe-09b4377b65ce]
    >     ID : [a35a355e-fa38-4ca2-b5ff-455e6ff4a084]


# -----------------------------------------------------
# List the remaining instances.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        server list \
            --format json \
    | jq -r '.[] | "\(.Status) \(.Flavor) \(.Name)"'

    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker04
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker03
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker02
    >   ACTIVE gaia.cclake.13vcpu gaia-dev-20210621-worker01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-master01
    >   ACTIVE gaia.cclake.2vcpu gaia-dev-20210621-monitor
    >   ACTIVE gaia.cclake.6vcpu gaia-dev-20210621-zeppelin

