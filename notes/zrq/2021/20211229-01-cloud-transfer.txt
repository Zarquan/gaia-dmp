#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Create a VM instance for testing ..

    Result:

        Work in progress ..
        Fails at the ssh login.

# -----------------------------------------------------
# Login using the command line client ..
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --publish 8088:8088 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2021.08.25 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudname=gaia-arcus-eval
    buildname="aglais-$(date '+%Y%m%d')"
    builddate="$(date '+%Y%m%d:%H%M%S')"


# -----------------------------------------------------
# Create our SSH keypair.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        keypair list

    >   +------------+-------------------------------------------------+------+
    >   | Name       | Fingerprint                                     | Type |
    >   +------------+-------------------------------------------------+------+
    >   | pfb29-test | be:b5:48:f6:fe:a2:90:ec:9d:c4:50:d9:26:24:ee:08 | ssh  |
    >   +------------+-------------------------------------------------+------+


    wget \
        -O "/tmp/${buildname:?}-keypair.pub" \
        'https://raw.githubusercontent.com/wfau/aglais/master/deployments/common/ssh/aglais-team-keys'

    >   ....
    >   ....
    >   2021-12-29 10:49:26 (6.22 MB/s) - ‘/tmp/aglais-20211229-keypair.pub’ saved [1770/1770]


    openstack \
        --os-cloud "${cloudname:?}" \
        keypair create \
            --format json \
            --public-key "/tmp/${buildname:?}-keypair.pub" \
            "${buildname}-keypair" \
    | tee "/tmp/${buildname:?}-keypair.json" \
    | jq '{id, name, fingerprint}'

    >   {
    >     "id": "aglais-20211229-keypair",
    >     "name": "aglais-20211229-keypair",
    >     "fingerprint": "2e:84:98:98:df:70:06:0e:4c:ed:bd:d4:d6:6b:eb:16"
    >   }

    aglaiskeypair=$(
        jq -r '.id' "/tmp/${buildname:?}-keypair.json"
        )


# -----------------------------------------------------
# Create our internal network, subnet and router.
# https://docs.openstack.org/ocata/user-guide/cli-create-and-manage-networks.html
#[root@ansibler]

    aglaissubnetblock='10.56.0.0/16'

    openstack \
        --os-cloud "${cloudname:?}" \
        network create \
            --format json \
            "${buildname:?}-network" \
    | tee "/tmp/${buildname:?}-network.json" \
    | jq '{name, id, subnets}'

    >   {
    >     "name": "aglais-20211229-network",
    >     "id": "8bc3594b-59b8-4aa1-af4e-3c426fbe3dcd",
    >     "subnets": []
    >   }

    aglaisnetworkid=$(
        jq -r '.id' "/tmp/${buildname:?}-network.json"
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        subnet create \
            --format json \
            "${buildname:?}-subnet" \
            --network "${aglaisnetworkid:?}" \
            --subnet-range "${aglaissubnetblock:?}" \
    | tee "/tmp/${buildname:?}-subnet.json" \
    | jq '{name, id, cidr, gateway_ip, allocation_pools}'

    >   {
    >     "name": "aglais-20211229-subnet",
    >     "id": "dd0c26ff-6e84-4530-afc0-544b4b262d1a",
    >     "cidr": "10.56.0.0/16",
    >     "gateway_ip": "10.56.0.1",
    >     "allocation_pools": [
    >       {
    >         "start": "10.56.0.2",
    >         "end": "10.56.255.254"
    >       }
    >     ]
    >   }

    aglaissubnetid=$(
        jq -r '.id' "/tmp/${buildname:?}-subnet.json"
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        router create \
            --format json \
            "${buildname:?}-router" \
    | tee "/tmp/${buildname:?}-router.json" \
    | jq '{name, id, routes}'

    >   {
    >     "name": "aglais-20211229-router",
    >     "id": "f56e265d-908b-4bae-9450-ab40fc220d55",
    >     "routes": []
    >   }

    aglaisrouterid=$(
        jq -r '.id' "/tmp/${buildname:?}-router.json"
        )


# -----------------------------------------------------
# Link our router to the public internet and our private subnet.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        network list

    >   +--------------------------------------+-------------------------+--------------------------------------+
    >   | ID                                   | Name                    | Subnets                              |
    >   +--------------------------------------+-------------------------+--------------------------------------+
    >   | 2f2b65d0-5996-49d3-b2a1-b36191abde63 | pfb29-test              | ca54eb70-d6fd-4550-bdc1-149f80da8efd |
    >   | 410920fb-5714-4447-b26a-e7b06092fc62 | cephfs                  | 5699fb5d-8316-4b88-b889-b05c8a1ec975 |
    >   | 57add367-d205-4030-a929-d75617a7c63e | CUDN-Internet           | 3fcaa5a5-ba8e-49a9-bf94-d87fbb0afc42 |
    >   | 8bc3594b-59b8-4aa1-af4e-3c426fbe3dcd | aglais-20211229-network | dd0c26ff-6e84-4530-afc0-544b4b262d1a |
    >   +--------------------------------------+-------------------------+--------------------------------------+

    internet=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            network list \
                --format json \
        | jq -r '
            .[] | select(.Name == "CUDN-Internet") | .ID
            '
        )

    # Link our router to the public internet.
    openstack \
        --os-cloud "${cloudname:?}" \
        router set \
            "${aglaisrouterid:?}" \
            --external-gateway \
                "${internet:?}"

    # Link our router to our private subnet.
    openstack \
        --os-cloud "${cloudname:?}" \
        router add subnet \
            "${aglaisrouterid:?}" \
            "${aglaissubnetid:?}"

    openstack \
        --os-cloud "${cloudname:?}" \
        router show \
            --format json \
            "${aglaisrouterid:?}" \
    | tee "/tmp/${buildname:?}-router.json" \
    | jq '{name, id, routes, interfaces_info, external_gateway_info}'

    >   {
    >     "name": "aglais-20211229-router",
    >     "id": "f56e265d-908b-4bae-9450-ab40fc220d55",
    >     "routes": [],
    >     "interfaces_info": [
    >       {
    >         "port_id": "3c48a491-9293-4906-84a9-8a89395aea25",
    >         "ip_address": "10.56.0.1",
    >         "subnet_id": "dd0c26ff-6e84-4530-afc0-544b4b262d1a"
    >       }
    >     ],
    >     "external_gateway_info": {
    >       "network_id": "57add367-d205-4030-a929-d75617a7c63e",
    >       "enable_snat": true,
    >       "external_fixed_ips": [
    >         {
    >           "subnet_id": "3fcaa5a5-ba8e-49a9-bf94-d87fbb0afc42",
    >           "ip_address": "128.232.222.144"
    >         }
    >       ]
    >     }
    >   }


# -----------------------------------------------------
# Get the ID of the Fedora image.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        image list

    >   +--------------------------------------+------------------------------+--------+
    >   | ID                                   | Name                         | Status |
    >   +--------------------------------------+------------------------------+--------+
    >   ....
    >   ....
    >   | 1779f380-780d-40d8-8052-b3acb91ed530 | Fedora-31-1.9                | active |
    >   | e62a71df-4bd2-4498-9eae-058ff476b5ad | Fedora-33-1.2                | active |
    >   | e5c23082-cc34-4213-ad31-ff4684657691 | Fedora-34.1.2                | active |
    >   | dcb41a5f-868a-4880-9fd5-04b95ab97c47 | FedoraAtomic29-20191126      | active |
    >   | a079781f-80b7-4d89-95ae-ef65bfb0834f | FedoraCoreOS33               | active |
    >   | 191d3d4d-60cc-4b87-b4a7-0a03cc48a51e | FedoraCoreOS34               | active |
    >   ....
    >   ....
    >   +--------------------------------------+------------------------------+--------+

    imageid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            image list \
                --format json \
        | jq -r '.[] | select(.Name | test("Fedora-34.1.2")) | .ID'
        )


# -----------------------------------------------------
# Get the flavor ID.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        flavor list

    >   +--------------------------------------+--------------+-------+------+-----------+-------+-----------+
    >   | ID                                   | Name         |   RAM | Disk | Ephemeral | VCPUs | Is Public |
    >   +--------------------------------------+--------------+-------+------+-----------+-------+-----------+
    >   | 2e5dc624-1d3b-4da7-8107-cc2dd4cb5073 | vm.v1.large  | 32768 |   60 |         0 |     8 | True      |
    >   | 6793b213-5efa-4b51-96bf-1340ff066499 | vm.v1.xsmall |  2048 |   20 |         0 |     1 | True      |
    >   | 698a8d46-eceb-4c55-91ff-38286bf9eabb | vm.v1.tiny   |  1024 |   10 |         0 |     1 | True      |
    >   | 6b56d6e9-5397-4543-87fb-e0c0b6d47961 | vm.v1.small  | 16384 |   20 |         0 |     4 | True      |
    >   +--------------------------------------+--------------+-------+------+-----------+-------+-----------+

    flavorid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
        | jq -r '.[] | select(.Name == "vm.v1.small") | .ID'
        )


# -----------------------------------------------------
# Create a security group for our VM.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        security group create \
            --format json \
            "${buildname:?}-security" \
    | tee "/tmp/${buildname:?}-security.json" \
    | jq '{name, id}'

    >   {
    >     "name": "aglais-20211229-security",
    >     "id": "76a1e1a7-079b-44a0-ae71-9e7bfc6ca025"
    >   }

    secgroupid=$(
        jq -r '.id' "/tmp/${buildname:?}-security.json"
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        security group rule create \
            --ingress \
            --dst-port   22 \
            --protocol  'tcp' \
            --ethertype 'IPv4' \
            "${secgroupid:?}"

    openstack \
        --os-cloud "${cloudname:?}" \
        security group rule create \
            --ingress \
            --dst-port   22 \
            --protocol  'tcp' \
            --ethertype 'IPv6' \
            "${secgroupid:?}"


# -----------------------------------------------------
# Create our virtual machine instance.
#[root@ansibler]

    openstack \
        --os-cloud "${cloudname:?}" \
        server create \
            --format json \
            --image "${imageid:?}" \
            --flavor "${flavorid:?}" \
            --network "${aglaisnetworkid:?}" \
            --key-name "${aglaiskeypair:?}" \
            --security-group "${secgroupid:?}" \
            "${buildname:?}-machine" \
    | tee "/tmp/${buildname:?}-machine.json" \
    | jq '{name, id, status, flavor, image, key_name}'

    >   {
    >     "name": "aglais-20211229-machine",
    >     "id": "36119844-f0b9-4528-b100-742981889cee",
    >     "status": "BUILD",
    >     "flavor": "vm.v1.small (6b56d6e9-5397-4543-87fb-e0c0b6d47961)",
    >     "image": "Fedora-34.1.2 (e5c23082-cc34-4213-ad31-ff4684657691)",
    >     "key_name": "aglais-20211229-keypair"
    >   }

    vmident=$(
        jq -r '.id' "/tmp/${buildname:?}-machine.json"
        )


# -----------------------------------------------------
# Create a public IP address and attach it to our VM.
#[root@ansibler]

    floatip=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            floating ip \
            create \
            --format json \
            "${internet:?}" \
        | jq -r '.floating_ip_address'
        )

    privateip=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            server show \
                --format json \
                "${vmident:?}" \
        | jq -r ".addresses.\"${buildname:?}-network\"[0]"
        )

cat << EOF
Public  IP [${floatip}]
Private IP [${privateip}]
EOF

    >   Public  IP [128.232.222.69]
    >   Private IP [10.56.3.52]

    openstack \
        --os-cloud "${cloudname:?}" \
        server add \
            floating ip \
            --fixed-ip-address "${privateip:?}" \
            "${vmident:?}" \
            "${floatip:?}"


# -----------------------------------------------------
# Test ssh access.
#[root@ansibler]

    ssh -v \
        fedora@${floatip:?} \
        '
        hostname
        date
        '

    >   OpenSSH_8.6p1, OpenSSL 1.1.1k  FIPS 25 Mar 2021
    >   debug1: Reading configuration data /etc/ssh/ssh_config
    >   debug1: Reading configuration data /etc/ssh/ssh_config.d/50-redhat.conf
    >   debug1: Reading configuration data /etc/crypto-policies/back-ends/openssh.config
    >   debug1: configuration requests final Match pass
    >   debug1: re-parsing configuration
    >   debug1: Reading configuration data /etc/ssh/ssh_config
    >   debug1: Reading configuration data /etc/ssh/ssh_config.d/50-redhat.conf
    >   debug1: Reading configuration data /etc/crypto-policies/back-ends/openssh.config
    >   debug1: Connecting to 128.232.222.25 [128.232.222.25] port 22.
    >   debug1: connect to address 128.232.222.25 port 22: Connection refused
    >   ssh: connect to host 128.232.222.25 port 22: Connection refused

    #
    # Stuck here again ...
    #

    #
    # Server log shows cloud-init assigning the correct ssh keys.
    #

    >   ....
    >   [   16.689903] cloud-init[750]: Cloud-init v. 20.4 running 'modules:final' at Wed, 29 Dec 2021 10:59:01 +0000. Up 16.62 seconds.
    >   ci-info: +++++++++++++++++++++++++++++++++++++Authorized keys from /home/fedora/.ssh/authorized_keys for user fedora++++++++++++++++++++++++++++++++++++++
    >   ci-info: +---------+-------------------------------------------------------------------------------------------------+---------+-------------------------+
    >   ci-info: | Keytype |                                       Fingerprint (sha256)                                      | Options |         Comment         |
    >   ci-info: +---------+-------------------------------------------------------------------------------------------------+---------+-------------------------+
    >   ci-info: | ssh-rsa | 2d:cf:c3:a0:e4:a0:27:3a:45:4c:4e:c9:3e:67:85:73:de:a3:e0:64:35:73:4c:07:3f:c3:a6:85:7f:58:83:37 |    -    |      nch@roe.ac.uk      |
    >   ci-info: | ssh-rsa | b3:17:1b:af:e6:3d:5b:26:3e:9c:a6:2a:51:87:03:e5:8c:9d:bc:69:0b:ac:b7:19:99:99:fe:7f:29:e0:c6:7d |    -    |    stelios@stelios-pc   |
    >   ci-info: | ssh-rsa | 9f:92:7e:0c:bd:5a:e0:bc:ba:60:fc:54:1a:8f:9f:eb:c1:9c:ba:1c:bc:20:f7:a9:15:ee:af:3d:c5:fa:43:ba |    -    | Cambridge HPC OpenStack |
    >   ci-info: | ssh-rsa | d8:69:0c:45:8a:d4:e8:ab:36:1a:a3:ad:54:33:aa:73:99:ea:e6:80:58:45:88:60:de:7e:63:cd:c9:9d:2e:c2 |    -    |     nch@S44-21CKMD6Q    |
    >   ci-info: +---------+-------------------------------------------------------------------------------------------------+---------+-------------------------+
    >   <14>Dec 29 10:59:01 ec2:
    >   <14>Dec 29 10:59:01 ec2: #############################################################
    >   <14>Dec 29 10:59:01 ec2: -----BEGIN SSH HOST KEY FINGERPRINTS-----
    >   <14>Dec 29 10:59:01 ec2: 1024 SHA256:bYZTzn/cTLnTEDZUSRvpDzEAdaXn4tOKpCXleL8K3Pk root@aglais-20211229-machine (DSA)
    >   <14>Dec 29 10:59:01 ec2: 256 SHA256:WFT3n1J3SHOG6HFFm8gAVhs3Ad2xRUck7ktBQtPKXEg root@aglais-20211229-machine (ECDSA)
    >   <14>Dec 29 10:59:01 ec2: 256 SHA256:Cm7d7/5L4qXS4fiSo3jDSn41BqM4XlVu3oYNnBo0vbI root@aglais-20211229-machine (ED25519)
    >   <14>Dec 29 10:59:01 ec2: 3072 SHA256:iUvxx/m5DgKnmSitxgvUSWgWcLE1U553S4f9p/Sm9gQ root@aglais-20211229-machine (RSA)
    >   <14>Dec 29 10:59:01 ec2: -----END SSH HOST KEY FINGERPRINTS-----
    >   <14>Dec 29 10:59:01 ec2: #############################################################
    >   -----BEGIN SSH HOST KEY KEYS-----
    >   ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHCbdEzAzNRWfwvSoOldTbxmEsBIewHkKsPIxZ4oXTyjlJpIrs8qwxZ/n592987qK/OsvHmatPzDoYKF/7+NbXA= root@aglais-20211229-machine
    >   ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINzZasMDmWK+YnhfHiT30LMYggLRUXMUxa3t6Iwk4h8T root@aglais-20211229-machine
    >   ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCuJZTZqOmmMlORinU7swJ21WKN7y90o/B1rh+vl5jPFYwHKftKJlkF9G2kyYY8j/CCG7kLAxp8vXBdgmvSt0RT9jKAHttM7P5xZfEIQIP6rmP021CFlwDWnE+R0qIamhv1JEXu5gTaAN4LD8W21Cfka2cCPdh6ipKp6/2u9nbfU3v91nGyzDg45tEjNL2losdINZSLq0NZ6UpQonuJZ/1b1Z0UIgr7MmxI2ElE7ozckymmXkaB1dOltGvNMZdXrc0EiUHys5ThVmlsO8KT3LDA2Zi3gqdF5w4yiuN7lCs//ITYRaQx9IMyMUeBmfT54b0ttdB3LlyR9gUxfYbS1hjdHbfnJk07LqhYbp72GK851uiiquQjB7B/Tu07L1El3aiIiAPOM66/N72Qm+8HNQkgXYPDfI3p/AQGY5v+XgrijOe+Kx0hlJdN97pY/QNIy2n9sNnUJtRVp5uP36qRfqvtgPJDL8cjSThF0MV04GtUEd4CF2f/ueW/wEK+vfMz3PU= root@aglais-20211229-machine
    >   -----END SSH HOST KEY KEYS-----
    >   [   16.917145] cloud-init[750]: Cloud-init v. 20.4 finished at Wed, 29 Dec 2021 10:59:02 +0000. Datasource DataSourceOpenStackLocal [net,ver=2].  Up 16.91 seconds
    >   [[0;32m  OK  [0m] Finished [0;1;39mExecute cloud user/final scripts[0m.
    >   [[0;32m  OK  [0m] Reached target [0;1;39mCloud-init target[0m.....



