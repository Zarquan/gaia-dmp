#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Re-connect to an existing deployment and test our clone-notebooks code.

    Result:

        Work in progress ....


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase=arcus
    cloudname=iris-gaia-blue
    configname=zeppelin-54.86-spark-6.26.43

    deploydate=20220707


# -----------------------------------------------------
# Re-create our status file.
#[root@ansibler]

    cat > '/tmp/aglais-status.yml' << --AHPH1IEF--
aglais:
 status:
   deployment:
     type: hadoop-yarn
     conf: ${configname}
     name: ${cloudname}-${deploydate}
     date: ${deploydate}
 spec:
   openstack:
     cloud:
       base: ${cloudbase}
       name: ${cloudname}
--AHPH1IEF--


# -----------------------------------------------------
# Configure our local ssh client.
#[root@ansibler]

    inventory="/deployments/hadoop-yarn/ansible/config/${configname:?}.yml"

    ln -sf '/tmp/aglais-status.yml' '/tmp/ansible-vars.yml'

    rm -f "${HOME}/.ssh/known_hosts"

    pushd "/deployments/hadoop-yarn/ansible"

        ansible-playbook \
            --inventory "${inventory:?}" \
            '05-config-ssh.yml'

    popd


# -----------------------------------------------------
# Check we can ssh onto the Zeppelin node.
#[root@ansibler]

    ssh zeppelin \
        '
        hostname
        date
        '

--START--
iris-gaia-blue-20220707-zeppelin
Fri Jul  8 02:36:00 UTC 2022
--END--


# -----------------------------------------------------
# Allow fedora to write to /opt/aglais/bin
#[root@ansibler]

    ssh zeppelin \
        '
        hostname
        date
        sudo chgrp fedora /opt/aglais/bin
        sudo chmod g+rwx  /opt/aglais/bin
        '

--START--
....
....
--END--


# -----------------------------------------------------
# Install our new clone notebook scripts.
# This doesn't have any side effects because the new scripts have different names.
#[root@ansibler]

    pushd /deployments/aglais/bin

        scp * zeppelin:/opt/aglais/bin

    popd

--START--
scp: dest open("/opt/aglais/bin/README"): Permission denied
scp: failed to upload file README to /opt/aglais/bin/README
clone-notebooks.sh                                                                              100% 4799   265.0KB/s   00:00
create-hdfs-space.sh                                                                            100% 1826   101.2KB/s   00:00
create-linux-user.sh                                                                            100% 4776   268.8KB/s   00:00
create-shiro-hash.sh                                                                            100% 1632    92.9KB/s   00:00
create-shiro-user.sh                                                                            100% 3253   182.0KB/s   00:00
json-tools.sh                                                                                   100% 3306   187.0KB/s   00:00
shiro-tools.sh                                                                                  100% 1137    63.5KB/s   00:00
--END--


    ssh zeppelin \
        '
        hostname
        date
        sudo chmod a+x  /opt/aglais/bin/*.sh
        '

--START--
....
....
--END--



# -----------------------------------------------------
# Create a test user.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    createlinuxuser 'Benjamin' 'puppy' | jq '.'

--START--
{
  "name": "Benjamin",
  "type": "puppy",
  "home": "/home/Benjamin",
  "uid": 20015,
  "debug": {
    "script": "create-linux-user.sh",
    "result": "PASS",
    "messages": [
      "PASS: adduser [Benjamin] done",
      "PASS: mkdir [/home/Benjamin/.ssh] done",
      "PASS: adding public key for [zepelin] done",
      "SKIP: adding public key for [Benjamin] skipped (no key)"
    ]
  }
}
--END--


    createhdfsspace 'Benjamin' 'puppy' | jq '.'

--START--
{
  "path": "/albert/Benjamin",
  "owner": "Benjamin",
  "group": "supergroup",
  "debug": {
    "script": "create-hdfs-space.sh",
    "result": "PASS",
    "messages": [
      "PASS: hdfs mkdir [/albert/Benjamin] done",
      "PASS: hdfs chown [/albert/Benjamin] done"
    ]
  }
}
--END--


# -----------------------------------------------------
# Push local changes to the Zeppelin node.
#[root@ansibler]

    pushd /deployments/aglais/bin
        scp * zeppelin:/opt/aglais/bin
    popd

    source /deployments/zeppelin/bin/create-user-tools.sh


# -----------------------------------------------------
# Clone the examples.
#[root@ansibler]

    username=$(jq -r '.name' '/tmp/Benjamin.yml')
    usertype=$(jq -r '.type' '/tmp/Benjamin.yml')
    userpass=$(jq -r '.pass' '/tmp/Benjamin.yml')

    cloneusernotebooks "${username}" "${usertype}" "${userpass}" | jq '.'

--START--
{
  "user": "Benjamin",
  "debug": {
    "script": "clone-notebooks.sh",
    "result": "PASS",
    "messages": [
      "PASS: Login [Benjamin] done",
      "PASS: Cloning examples",
      "PASS: Clone example [2GRTQZFUM][/Users/Benjamin/examples/1. Start here]",
      "PASS: Clone done [2GRTQZFUM][/Users/Benjamin/examples/1. Start here]",
      "PASS: Clone example [2GRA39HCN][/Users/Benjamin/examples/2. Data holdings]",
      "PASS: Clone done [2GRA39HCN][/Users/Benjamin/examples/2. Data holdings]",
      "PASS: Clone example [2GQ6WMH9W][/Users/Benjamin/examples/3. Source counts over the sky]",
      "PASS: Clone done [2GQ6WMH9W][/Users/Benjamin/examples/3. Source counts over the sky]",
      "PASS: Clone example [2GSNYBDWB][/Users/Benjamin/examples/4. Mean proper motions over the sky]",
      "PASS: Clone done [2GSNYBDWB][/Users/Benjamin/examples/4. Mean proper motions over the sky]",
      "PASS: Clone example [2H2YRJCKM][/Users/Benjamin/examples/5. Working with Gaia XP spectra]",
      "PASS: Clone done [2H2YRJCKM][/Users/Benjamin/examples/5. Working with Gaia XP spectra]",
      "PASS: Clone example [2GZME59KY][/Users/Benjamin/examples/6. Working with cross-matched surveys]",
      "PASS: Clone done [2GZME59KY][/Users/Benjamin/examples/6. Working with cross-matched surveys]",
      "PASS: Clone example [2GQDKZ59J][/Users/Benjamin/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
      "PASS: Clone done [2GQDKZ59J][/Users/Benjamin/examples/7. Good astrometric solutions via ML Random Forrest classifier]",
      "PASS: Clone example [2GVXKC266][/Users/Benjamin/examples/8. Tips and tricks]",
      "PASS: Clone done [2GVXKC266][/Users/Benjamin/examples/8. Tips and tricks]"
    ]
  }
}
--END--



