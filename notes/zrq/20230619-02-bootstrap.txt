#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2023, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#
# AIMetrics: [{"name": "ChatGPT","contribution": {"value": 0,"units": "%"}}]
#


    Target:

        Automate the pause between capi-addons/cluster-api-addon-provider and capi/openstack-cluster.

    Result:

        Work in progress ...

# -----------------------------------------------------
#[root@bootstrap]

    #
    # Error messages if resources are not ready :
    #

    >   Error: unable to build kubernetes objects from release manifest: [resource mapping not found for name: "gaia-dmp-one-20230619-cni-calico" namespace: "" from "": no matches for kind "HelmRelease" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-mellanox-network-operator" namespace: "" from "": no matches for kind "HelmRelease" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-metrics-server" namespace: "" from "": no matches for kind "HelmRelease" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-node-feature-discovery" namespace: "" from "": no matches for kind "HelmRelease" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-nvidia-gpu-operator" namespace: "" from "": no matches for kind "HelmRelease" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-ccm-openstack" namespace: "" from "": no matches for kind "HelmRelease" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-csi-cinder" namespace: "" from "": no matches for kind "HelmRelease" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-cloud-config" namespace: "" from "": no matches for kind "Manifests" in version "addons.stackhpc.com/v1alpha1"
    >   ensure CRDs are installed first, resource mapping not found for name: "gaia-dmp-one-20230619-csi-cinder-storageclass" namespace: "" from "": no matches for kind "Manifests" in version "addons.stackhpc.com/v1alpha1"


    #
    # List the installed HelmRelease components.
    #

    kubectl \
        --kubeconfig "${kindclusterconf:?}" \
        get HelmRelease

    >   NAME                                              CLUSTER                 BOOTSTRAP   TARGET NAMESPACE         RELEASE NAME                PHASE      REVISION   CHART NAME                           CHART VERSION   AGE
    >   gaia-dmp-one-20230619-ccm-openstack               gaia-dmp-one-20230619   true        openstack-system         ccm-openstack               Deployed   1          openstack-cloud-controller-manager   1.3.0           107m
    >   gaia-dmp-one-20230619-cni-calico                  gaia-dmp-one-20230619   true        tigera-operator          cni-calico                  Deployed   1          tigera-operator                      v3.26.0         107m
    >   gaia-dmp-one-20230619-csi-cinder                  gaia-dmp-one-20230619   true        openstack-system         csi-cinder                  Deployed   1          openstack-cinder-csi                 2.2.0           107m
    >   gaia-dmp-one-20230619-mellanox-network-operator   gaia-dmp-one-20230619   true        network-operator         mellanox-network-operator   Deployed   1          network-operator                     1.3.0           107m
    >   gaia-dmp-one-20230619-metrics-server              gaia-dmp-one-20230619   true        kube-system              metrics-server              Deployed   1          metrics-server                       3.8.2           107m
    >   gaia-dmp-one-20230619-node-feature-discovery      gaia-dmp-one-20230619   true        node-feature-discovery   node-feature-discovery      Deployed   1          node-feature-discovery               0.11.2          107m
    >   gaia-dmp-one-20230619-nvidia-gpu-operator         gaia-dmp-one-20230619   true        gpu-operator             nvidia-gpu-operator         Deployed   1          gpu-operator                         v1.11.1         107m

    #
    # These are all components of our cluster (name starts with 'gaia-dmp-one-20230619').
    # We want to find the types that these depend on.
    #

    kubectl \
        --kubeconfig "${kindclusterconf:?}" \
        api-resources \
            --api-group addons.stackhpc.com

    >   NAME           SHORTNAMES   APIVERSION                     NAMESPACED   KIND
    >   helmreleases                addons.stackhpc.com/v1alpha1   true         HelmRelease
    >   manifests                   addons.stackhpc.com/v1alpha1   true         Manifests


    #
    # Unfortunatley api-resources doesn't support --output json, so we wil have to process it ourselves.
    #



# -----------------------------------------------------
# -----------------------------------------------------
# ChatGPT

    >   can you write an awk script to check for specific values

    >   Certainly! I can help you with that.
    >   Please provide more details about the specific values you want to check and the data format you'll be working with.
    >   Additionally, let me know what actions you would like the script to take when it encounters those values.

# -----------------------------------------------------
# -----------------------------------------------------
# ChatGPT

    >   I want to check that the first column of the input contains helmreleases and manifests

    >   Certainly! Here's an example of an AWK script that checks if the first column of the input contains "helmreleases" or "manifests":
    >   
    >   ```awk
    >   #!/usr/bin/awk -f
    >   
    >   BEGIN {
    >       found = 0
    >   }
    >   
    >   {
    >       if ($1 == "helmreleases" || $1 == "manifests") {
    >           found = 1
    >           print "Found a match in the first column:", $1
    >       }
    >   }
    >   
    >   END {
    >       if (found == 0) {
    >           print "No match found in the first column."
    >       }
    >   }
    >   ```
    >   
    >   Save the script into a file, for example, `check_values.awk`. Make sure to give it executable permissions using `chmod +x check_values.awk`.
    >   
    >   To use this script, you can provide input to it via standard input or by redirecting a file as input. Here are a couple of examples:
    >   
    >   1. Reading from standard input:
    >      ```
    >      $ echo -e "helmreleases data1\nrandom value\nmanifests data2" | ./check_values.awk
    >      ```
    >      Output:
    >      ```
    >      Found a match in the first column: helmreleases
    >      Found a match in the first column: manifests
    >      ```
    >   
    >   2. Redirecting a file as input:
    >      ```
    >      $ ./check_values.awk < input_file.txt
    >      ```
    >   
    >   The script will iterate through each line of the input and print a message whenever it finds a match in the first column. If no match is found, it will print a "No match found" message at the end.
    >   
    >   Feel free to modify the script according to your specific requirements.

# -----------------------------------------------------
# -----------------------------------------------------
# ChatGPT

    >   can you change the script to return a single value 'match' or 'no match'

    >   Certainly! Here's an updated version of the AWK script that returns a single value 'match' or 'no match':
    >   
    >   ```awk
    >   #!/usr/bin/awk -f
    >   
    >   BEGIN {
    >       found = 0
    >   }
    >   
    >   {
    >       if ($1 == "helmreleases" || $1 == "manifests") {
    >           found = 1
    >       }
    >   }
    >   
    >   END {
    >       if (found == 1) {
    >           print "match"
    >       } else {
    >           print "no match"
    >       }
    >   }
    >   ```
    >   
    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# ChatGPT

    >   can you change the script so that it only returns 'match' when both values are found

    >   Certainly! Here's an updated version of the AWK script that returns 'match' only when both "helmreleases" and "manifests" are found in the first column:
    >   
    >   ```awk
    >   #!/usr/bin/awk -f
    >   
    >   BEGIN {
    >       helmreleases_found = 0
    >       manifests_found = 0
    >   }
    >   
    >   {
    >       if ($1 == "helmreleases") {
    >           helmreleases_found = 1
    >       }
    >       if ($1 == "manifests") {
    >           manifests_found = 1
    >       }
    >   }
    >   
    >   END {
    >       if (helmreleases_found == 1 && manifests_found == 1) {
    >           print "match"
    >       } else {
    >           print "no match"
    >       }
    >   }
    >   ```
    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Building on the example ChatGPT gave us.
#[root@bootstrap]

    kubectl \
        --kubeconfig "${kindclusterconf:?}" \
        api-resources \
            --api-group addons.stackhpc.com \
    | awk '
        BEGIN {
            found = 0
            }
        {
        if ($1 == "helmreleases" || $1 == "manifests") {
            found++
            }
        }
        END {
            if (found == 2) {
                print "Match"
                }
            else {
                print "No match"
                }
            }
        '


# -----------------------------------------------------
# -----------------------------------------------------
# Clean and deploy the system again.
#[root@bootstrap]

    >   ....
    >   ....

# -----------------------------------------------------
# Install the StackHPC Helm charts.
#[root@bootstrap]

    helm repo add \
        capi \
        https://stackhpc.github.io/capi-helm-charts

    helm repo add \
        capi-addons \
        https://stackhpc.github.io/cluster-api-addon-provider

    kubectl \
        --kubeconfig "${kindclusterconf:?}" \
        api-resources \
            --api-group addons.stackhpc.com

    helm upgrade \
        --kubeconfig "${kindclusterconf:?}" \
        cluster-api-addon-provider \
        capi-addons/cluster-api-addon-provider \
            --install \
            --version "0.1.0"

# -----------------------------------------------------
# Wait for the StackHPC components to be ready.
#[root@bootstrap]

    loop=20
    while [[ $loop > 0 ]]
    do

        result=$(
            kubectl \
                --kubeconfig "${kindclusterconf:?}" \
                api-resources \
                    --api-group addons.stackhpc.com \
            | awk '
                BEGIN {
                    found = 0
                    }
                {
                if ($1 == "helmreleases" || $1 == "manifests") {
                    found++
                    }
                }
                END {
                    if (found == 2) {
                        print "match"
                        }
                    else {
                        print "no match"
                        }
                    }
                '
            )

        echo "Loop [${loop}] [${result}]

        if [[ "${result}" == "match"]]
        then
            break
        fi


        sleep 1
        ((loop--))
    done


    kubectl \
        --kubeconfig "${kindclusterconf:?}" \
        api-resources \
            --api-group addons.stackhpc.com

    >   ....
    >   ....


# -----------------------------------------------------
# Deploy our target cluster.
#[root@bootstrap]

    deployclustername=gaia-dmp-one
    deployclusterfull=${deployclustername:?}-$(date '+%Y%m%d')

    deployclusterpath=/opt/aglais/${deployclustername:?}
    deployclustertext=${deployclusterpath:?}/${deployclusterfull:?}.txt
    deployclusterconf=${deployclusterpath:?}/${deployclusterfull:?}-kubeconfig.yml

    helm upgrade \
        --kubeconfig "${kindclusterconf:?}" \
        "${deployclusterfull:?}" \
        capi/openstack-cluster \
            --install \
            --version "0.1.0" \
            --values '/opt/aglais/clusterapi-config.yml' \
            --values '/opt/aglais/openstack-clouds.yaml'

    >   Release "gaia-dmp-one-20230619" does not exist. Installing it now.
    >   NAME: gaia-dmp-one-20230619
    >   LAST DEPLOYED: Mon Jun 19 15:43:28 2023
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None


# -----------------------------------------------------
# Check our cluster status.
#[root@bootstrap]

    watch clusterctl \
        --kubeconfig "${kindclusterconf:?}" \
        describe cluster \
            "${deployclusterfull:?}"


