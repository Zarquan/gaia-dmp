#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Deployment to test the latest changes.

    Result:

        Work in progress ...
        Ended up running through this about 20 times before I sorted out all the kinks and it ran all the way without any manual intervention.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase='arcus'
    cloudname='iris-gaia-blue'
    configname=zeppelin-54.86-spark-6.26.43


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

--START--
real    4m2.240s
user    1m38.364s
sys     0m10.598s
--END--


# -----------------------------------------------------
# Create everything.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            "${configname:?}" \
        | tee /tmp/create-all.log

--START--
....
....
--END--


# -----------------------------------------------------
# -----------------------------------------------------
# Update our DuckDNS record.
#[user@desktop]

    duckname=iris-gaia-blue
    ducktoken=$(secret 'aglais.duckdns.token')
    zeppelinip=128.232.222.94

    curl "https://www.duckdns.org/update/${duckname:?}/${ducktoken:?}/${zeppelinip:?}"

--START--
....
....
--END--


# -----------------------------------------------------
# -----------------------------------------------------
# Create our shiro-auth database.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-auth-database.sh \
            "${cloudname:?}" \
            "${configname:?}" \
        | tee /tmp/create-auth-database.log

--START--
....
....
--END--


# -----------------------------------------------------
# Copy notebooks from the live server.
#[root@ansibler]

    ssh zeppelin \
        '
        sshuser=fedora
        sshhost=zeppelin.aglais.uk

        sudo mkdir -p '/var/local/backups'
        sudo mv "/home/fedora/zeppelin/notebook" \
           "/var/local/backups/notebook-$(date '+%Y%m%d%H%M%S')"

        ssh-keyscan "${sshhost:?}" >> "${HOME}/.ssh/known_hosts"

        rsync \
            --perms \
            --times \
            --group \
            --owner \
            --stats \
            --progress \
            --human-readable \
            --checksum \
            --recursive \
            "${sshuser:?}@${sshhost:?}:zeppelin/notebook/" \
            "/home/fedora/zeppelin/notebook"
        '

--START--
....
....
--END--


# -----------------------------------------------------
# re-start Zeppelin.
#[root@ansibler]

    ssh zeppelin \
        '
        zeppelin-daemon.sh restart
        '

--START--
....
....
--END--


# -----------------------------------------------------
# Add the ssh key for our data node.
# This is used by the getpasshash function in the client container.
#[root@ansibler]

    ssh-keyscan 'data.aglais.uk' >> "${HOME}/.ssh/known_hosts"

--START--
....
....
--END--


# -----------------------------------------------------
# Create a Linux user.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    testusername=Ohmsrdon

    createlinuxuser \
        "${testusername}"

--START--
....
....
--END--


# -----------------------------------------------------
# Check we can ssh from fedora to the new user.
# This simulates the ssh login used by Zeppelin for user impersonation.
#[root@ansibler]

    ssh zeppelin \
        "
        date
        hostname
        whoami
        id
        echo
        ssh ${testusername}@localhost \
            '
            date
            hostname
            whoami
            id
            '
        echo
        date
        hostname
        whoami
        id
        "

--START--
....
....
--END--


# -----------------------------------------------------
# Create a Shiro user.
#[root@ansibler]

    createshirouser \
        "${testusername:?}" \
    | tee '/tmp/${testusername:?}-shirouser.json'

    testuserpass=$(
        jq -r '.pass' '/tmp/${testusername:?}-shirouser.json'
        )

--START--
....
....
--END--


# -----------------------------------------------------
# Login to Zeppelin as the test user.
#[root@ansibler]

    zeppelinhost=blue.aglais.uk
    zeppelinport=8080
    zeppelinurl=http://${zeppelinhost:?}:${zeppelinport:?}

    source '/deployments/zeppelin/bin/zeppelin-rest-tools.sh'

    zeplogin "${testusername:?}" "${testuserpass:?}"

--START--
....
....
--END--


# -----------------------------------------------------
# Clone example notebooks.
#[root@ansibler]

    cloneusernotebooks \
        "${testusername:?}" \
        "${testuserpass:?}" \
    | jq '.'

--START--
....
....
--END--


# -----------------------------------------------------
# List the user's notebooks
#[root@ansibler]

    curl \
        --silent \
        --cookie "${zepcookies:?}" \
        "${zeppelinurl:?}/api/notebook" \
    | jq ".body[] | select(.path | startswith(\"/Users/${testusername:?}\"))"

--START--
....
....
--END--


# -----------------------------------------------------
# Do all the steps together.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    testusername=$(
        pwgen 8 1
        )

    createusermain \
        "${testusername}" \
    | tee "/tmp/${testusername}.json" | jq '.'

    testuserpass=$(
        jq -r '.shirouser.pass' "/tmp/${testusername}.json"
        )

--START--
....
....
--END--


    zeplogin "${testusername:?}" "${testuserpass:?}"

--START--
....
....
--END--


