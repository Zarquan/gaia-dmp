#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Deploy everything from clean on a new system with upstream changes.
        https://github.com/wfau/gaia-dmp/issues/1002

    Result:

        Work in progress ....


# -----------------------------------------------------
# Fetch upstream changes.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        git checkout master

        git pull

        git fetch upstream

        git merge upstream/master

        git status

        git push

    popd

    >   Already on 'master'
    >   Your branch is up to date with 'origin/master'.

    >   Already up to date.

    >   Already up to date.

    >   On branch master
    >   Your branch is up to date with 'origin/master'.

    >   Everything up-to-date


# -----------------------------------------------------
# Create a new branch to work on.
#[user@desktop]

    branchname=gardening

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        newbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout master

        git checkout -b "${newbranch:?}"

        git push --set-upstream 'origin' "$(git branch --show-current)"

    popd

    >   Already on 'master'
    >   Your branch is up to date with 'origin/master'.

    >   Switched to a new branch '20220919-zrq-gardening'

    >   ....
    >   ....
    >   To github.com:Zarquan/gaia-dmp.git
    >    * [new branch]      20220919-zrq-gardening -> 20220919-zrq-gardening
    >   branch '20220919-zrq-gardening' set up to track 'origin/20220919-zrq-gardening'.


# -----------------------------------------------------
# Update the upstream version.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        gedit deployments/common/pip/requirements.txt

        git diff

    popd

    >   diff --git a/deployments/common/pip/requirements.txt b/deployments/common/pip/requirements.txt
    >   index 1927701..9b6289c 100644
    >   --- a/deployments/common/pip/requirements.txt
    >   +++ b/deployments/common/pip/requirements.txt
    >   @@ -15,5 +15,5 @@ pyvo==1.1
    >    pyarrow==8.0.0
    >    koalas==1.8.2
    >    GaiaXPy==1.1.4
    >   -git+https://github.com/wfau/gaiadmpsetup@v0.1.2
    >   +git+https://github.com/wfau/gaiadmpsetup@v0.1.4


# -----------------------------------------------------
# Disable the code that copies the PublicExamples.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        gedit deployments/zeppelin/bin/create-user-tools.sh &

        git diff

    popd

    >   diff --git a/deployments/zeppelin/bin/create-user-tools.sh b/deployments/zeppelin/bin/create-user-tools.sh
    >   index dd47818..36394bf 100755
    >   --- a/deployments/zeppelin/bin/create-user-tools.sh
    >   +++ b/deployments/zeppelin/bin/create-user-tools.sh
    >   @@ -281,12 +281,12 @@ echo "\"shirouser\": "
    >                jq -r '.password' "${shirouserjson}"
    >                )
    >   
    >   -echo ","
    >   -echo "\"notebooks\": "
    >   -        cloneusernotebooks \
    >   -            "${username}" \
    >   -            "${usertype}" \
    >   -            "${password}"
    >   +#echo ","
    >   +#echo "\"notebooks\": "
    >   +#        cloneusernotebooks \
    >   +#            "${username}" \
    >   +#            "${usertype}" \
    >   +#            "${password}"
    >   
    >    echo "}"
    >            }


# -----------------------------------------------------
# Backup the current notebooks from live.
#[user@desktop]

    ssh fedora@data.gaia-dmp.uk

        colour=live

        sshuser=fedora
        sshhost=${colour:?}.aglais.uk

        ssh-keyscan "${colour:?}.aglais.uk" 2>/dev/null >> "${HOME}/.ssh/known_hosts"

        pushd /var/local/backups
            pushd notebooks

                datetime=$(date '+%Y%m%d-%H%M%S')
                backname="${datetime:?}-${colour:?}-notebooks"

                mkdir "${backname}"

                rsync \
                    --perms \
                    --times \
                    --group \
                    --owner \
                    --stats \
                    --progress \
                    --exclude '~Trash' \
                    --human-readable \
                    --checksum \
                    --recursive \
                    --rsync-path 'sudo rsync' \
                    "${sshuser:?}@${sshhost:?}:/home/fedora/zeppelin/notebook" \
                    "${backname:?}"

                rsync \
                    --perms \
                    --times \
                    --group \
                    --owner \
                    --stats \
                    --progress \
                    --human-readable \
                    --checksum \
                    --recursive \
                    --rsync-path 'sudo rsync' \
                    "${sshuser:?}@${sshhost:?}:/home/fedora/zeppelin/conf/notebook-authorization.json" \
                    "${backname:?}"

                if [ -L latest ]
                then
                    rm latest
                fi
                ln -s "${backname:?}" latest

            popd
        popd

        ls -al /var/local/backups/notebooks/

    >   ....
    >   ....
    >   drwxrwxr-x.  3 fedora fedora 4096 Aug 25 13:59 20220825-135900-live-notebooks
    >   drwxrwxr-x.  3 fedora fedora 4096 Aug 25 16:08 20220825-160804-live-notebooks
    >   drwxrwxr-x.  3 fedora fedora 4096 Sep  6 15:16 20220906-151603-live-notebooks
    >   drwxrwxr-x.  3 fedora fedora 4096 Sep 19 16:29 20220919-162847-live-notebooks
    >   drwxrwxr-x.  6 fedora fedora 4096 Jul 27 10:43 attic
    >   lrwxrwxrwx.  1 fedora fedora   30 Sep 19 16:29 latest -> 20220919-162847-live-notebooks


# -----------------------------------------------------
# Check which cloud is currently live.
#[user@desktop]

    ssh fedora@live.gaia-dmp.uk \
        '
        date
        hostname
        '

    >   Mon 19 Sep 17:29:32 UTC 2022
    >   iris-gaia-green-20220825-zeppelin


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    #
    # Live is green, Stelios is using red, so selecting blue for the deployment.
    #

    # Starting a new pattern for creating the client container.
    # Working towards a launch-script.
    # https://github.com/wfau/aglais/issues/894

    source "${HOME:?}/aglais.env"

    agcolour=blue
    configname=zeppelin-54.86-spark-6.26.43

    agproxymap=3000:3000
    clientname=ansibler-${agcolour}
    cloudname=iris-gaia-${agcolour}

    podman run \
        --rm \
        --tty \
        --interactive \
        --name     "${clientname:?}" \
        --hostname "${clientname:?}" \
        --publish  "${agproxymap:?}" \
        --env "cloudname=${cloudname:?}" \
        --env "configname=${configname:?}" \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK:?}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.07.25 \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Deploy everything.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh

    >   aglais:
    >     status:
    >       deployment:
    >         type: hadoop-yarn
    >         conf: zeppelin-54.86-spark-6.26.43
    >         name: iris-gaia-blue-20220919
    >         date: 20220919T235254
    >         hostname: zeppelin.gaia-dmp.uk
    >     spec:
    >       openstack:
    >         cloud:
    >           base: arcus
    >           name: iris-gaia-blue

    >   real    52m22.878s
    >   user    16m40.843s
    >   sys     4m12.416s



# -----------------------------------------------------
# Import live users.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    import-live-users

    >   ....
    >   ....


    list-linux-info \
        /tmp/live-users.json

    >   ....
    >   ....


    list-shiro-info \
        /tmp/live-users.json

    >   ....
    >   ....


    list-ceph-info \
        /tmp/live-users.json

    >   ....
    >   ....


# -----------------------------------------------------
# Import some test users.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    import-test-users

    >   ....
    >   ....


    list-linux-info \
        /tmp/test-users.json

    >   [
    >     {
    >       "username": "Reyesfan",
    >       "homedir": "/home/Reyesfan",
    >       "linuxuid": "20001",
    >       "pkeyhash": "6e46966e088b3b966a65779686c71800"
    >     },
    >     ....
    >     ....
    >     {
    >       "username": "Drizzbinson",
    >       "homedir": "/home/Drizzbinson",
    >       "linuxuid": "20010",
    >       "pkeyhash": "6e46966e088b3b966a65779686c71800"
    >     }
    >   ]


    list-shiro-info \
        /tmp/test-users.json

    >   [
    >     {
    >       "username": "Reyesfan",
    >       "password": "velvet henna trickery remover",
    >       "hashhash": "dbfec29dac1b4d983d694dda411c6846"
    >     },
    >     ....
    >     ....
    >     {
    >       "username": "Drizzbinson",
    >       "password": "spindle backboned fanfare oversweet",
    >       "hashhash": "34a4e220fd6dd521a79ffdf067d0aa70"
    >     }
    >   ]


    list-ceph-info \
        /tmp/test-users.json

    >   [
    >     {
    >       "username": "Reyesfan",
    >       "usershare": {
    >         "name": "iris-gaia-blue-user-Reyesfan",
    >         "size": 1,
    >         "cloud": "iris-gaia-blue",
    >         "status": "available"
    >       },
    >       "homeshare": {
    >         "name": "iris-gaia-blue-home-Reyesfan",
    >         "size": 1,
    >         "cloud": "iris-gaia-blue",
    >         "status": "available"
    >       }
    >     },
    >     ....
    >     ....
    >     {
    >       "username": "Drizzbinson",
    >       "usershare": {
    >         "name": "iris-gaia-blue-user-Drizzbinson",
    >         "size": 1,
    >         "cloud": "iris-gaia-blue",
    >         "status": "available"
    >       },
    >       "homeshare": {
    >         "name": "iris-gaia-blue-home-Drizzbinson",
    >         "size": 1,
    >         "cloud": "iris-gaia-blue",
    >         "status": "available"
    >       }
    >     }
    >   ]


# -----------------------------------------------------
# Setup a SSH tunnel SOCKS proxy.
# https://unix.stackexchange.com/questions/34004/how-does-tcp-keepalive-work-in-ssh
# https://unix.stackexchange.com/a/34201
#[root@ansibler]

    ssh \
        -n \
        -f \
        -N \
        -D '*:3000' \
        -o ServerAliveInterval=10 \
        -o ServerAliveCountMax=12 \
        zeppelin


# -----------------------------------------------------
# -----------------------------------------------------
# Login and check the notebooks.
#[user@desktop]

    firefox \
        --new-window \
        'http://zeppelin:8080/' &


# -----------------------------------------------------

    Manually poke a hole in the firewall to allow HTTP on port 8080.

    Zeppelin security group - add new rule

        port: 8080
        source: 0.0.0.0/0


# -----------------------------------------------------
# Login and check the notebooks.
#[user@desktop]

    firefox \
        --new-window \
        'http://blue.gaia-dmp.uk:8080/' &

    #
    # Login as Reyesfan, no notebooks visible.
    #

    #
    # Manually import a notebook using the GUI.
    # Setting the name and path, and pointing it at the URL for the raw json file in GitHub.
    # '/Reyesfan/Examples/3. Source counts over the sky'
    # https://raw.githubusercontent.com/wfau/aglais-notebooks/v1.0.1/Public%20Examples/3.%20Source%20counts%20over%20the%20sky_2GQ6WMH9W.zpln
    #

    #
    # Delete the Public Examples folder.
    #

# -----------------------------------------------------
# Import example notebooks from GitHub.
# https://stackoverflow.com/questions/49382814/bash-for-loop-using-ls-and-wildcard
# https://stackoverflow.com/a/49383879
#[root@ansibler]

    #
    # Clone the notebooks to local (container)
    # Iterate the files

    gitbase=/opt/aglais
    gitname='aglais-notebooks'
    gitpath="${gitbase}/${gitname}"
    gitrepo="https://github.com/wfau/${gitname}"

    version='v1.0.1'

    username='Reyesfan'
    userpath="/${username}/examples"

    if [ ! -e "${gitbase}" ]
    then
        mkdir -p "${gitbase}"
    fi

    pushd "${gitbase}"

        if [ ! -e "${gitname}" ]
        then
            git clone "${gitrepo}"
        else
            pushd "${gitname}"
                git pull
            popd
        fi

    popd

    pushd "${gitpath}"
        git checkout "${version}"
    popd

    pushd "${gitpath}"
        pushd 'Public Examples'
            for notefile in *.zpln
            do
                echo "File [${notefile}]"
                notename=$(
                     jq -r '.name' "${notefile}"
                    )
                notepath="${userpath}/${notename}"

                echo "Name [${notename}]"
                echo "Path [${notepath}]"

            done
        popd
    popd

    #
    # Code not executed here .. added to the create-user tools.
    # deployments/aglais/bin/clone-notebooks.sh
    #

# -----------------------------------------------------
# Deploy everything again.
#[root@ansibler]

    time \
        source /deployments/hadoop-yarn/bin/deploy.sh


    >   glais:
    >     status:
    >       deployment:
    >         type: hadoop-yarn
    >         conf: zeppelin-54.86-spark-6.26.43
    >         name: iris-gaia-blue-20220920
    >         date: 20220920T182822
    >         hostname: zeppelin.gaia-dmp.uk
    >     spec:
    >       openstack:
    >         cloud:
    >           base: arcus
    >           name: iris-gaia-blue

    >   real    39m26.751s
    >   user    12m59.862s
    >   sys     2m53.698s


# -----------------------------------------------------
# Setup a SSH tunnel SOCKS proxy.
# https://unix.stackexchange.com/questions/34004/how-does-tcp-keepalive-work-in-ssh
# https://unix.stackexchange.com/a/34201
#[root@ansibler]

    ssh \
        -n \
        -f \
        -N \
        -D '*:3000' \
        -o ServerAliveInterval=10 \
        -o ServerAliveCountMax=12 \
        zeppelin

    >   ....
    >   ....


# -----------------------------------------------------
# Import some test users.
#[root@ansibler]

    source /deployments/zeppelin/bin/create-user-tools.sh

    import-test-users

    >   ....
    >   ....


    list-linux-info \
        /tmp/test-users.json

    >     ....
    >     ....


    list-shiro-info \
        /tmp/test-users.json

    >     ....
    >     ....


    list-ceph-info \
        /tmp/test-users.json

    >     ....
    >     ....

