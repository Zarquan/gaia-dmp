#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    docker run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2020.12.02 \
        bash


# -----------------------------------------------------
# Set the target cloud to delete.
#[root@ansibler]

    cloudname=gaia-test


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"


	> Done

	> real	0m55.017s
	> user	0m16.240s
	> sys	0m1.585s


# -----------------------------------------------------
# Set the target cloud to create.
#[root@ansibler]

    cloudname=gaia-prod



# -----------------------------------------------------
# Create everything, using a standard config.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            'medium-04'

# Failed


TASK [Update the DNF cache] *********************************************************************************************************************************************************************************
task path: /deployments/hadoop-yarn/ansible/04-update-fedora.yml:36
fatal: [zeppelin]: FAILED! => {"changed": false, "msg": "Failed to synchronize cache for repo 'updates'", "rc": 1, "results": []}
...ignoring
changed: [worker02] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: kernel-5.6.13-100.fc30.x86_64", "Installed: kernel-core-5.6.13-100.fc30.x86_64", "Installed: kernel-modules-5.6.13-100.fc30.x86_64", "Installed: linux-firmware-20200421-107.fc30.noarch"]}
changed: [master01] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: kernel-5.6.13-100.fc30.x86_64", "Installed: kernel-core-5.6.13-100.fc30.x86_64", "Installed: kernel-modules-5.6.13-100.fc30.x86_64", "Installed: linux-firmware-20200421-107.fc30.noarch"]}
changed: [worker01] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: kernel-5.6.13-100.fc30.x86_64", "Installed: kernel-core-5.6.13-100.fc30.x86_64", "Installed: kernel-modules-5.6.13-100.fc30.x86_64", "Installed: linux-firmware-20200421-107.fc30.noarch"]}
changed: [monitor] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: kernel-5.6.13-100.fc30.x86_64", "Installed: kernel-core-5.6.13-100.fc30.x86_64", "Installed: kernel-modules-5.6.13-100.fc30.x86_64", "Installed: linux-firmware-20200421-107.fc30.noarch"]}
changed: [worker03] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: kernel-5.6.13-100.fc30.x86_64", "Installed: kernel-core-5.6.13-100.fc30.x86_64", "Installed: kernel-modules-5.6.13-100.fc30.x86_64", "Installed: linux-firmware-20200421-107.fc30.noarch"]}
changed: [worker04] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: kernel-5.6.13-100.fc30.x86_64", "Installed: kernel-core-5.6.13-100.fc30.x86_64", "Installed: kernel-modules-5.6.13-100.fc30.x86_64", "Installed: linux-firmware-20200421-107.fc30.noarch"]}

TASK [Install monitoring tools] *****************************************************************************************************************************************************************************
task path: /deployments/hadoop-yarn/ansible/04-update-fedora.yml:44
changed: [worker01] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: htop-2.2.0-4.fc30.x86_64", "Installed: atop-2.4.0-3.fc30.x86_64"]}
changed: [worker02] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: htop-2.2.0-4.fc30.x86_64", "Installed: atop-2.4.0-3.fc30.x86_64"]}
changed: [monitor] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: htop-2.2.0-4.fc30.x86_64", "Installed: atop-2.4.0-3.fc30.x86_64"]}
changed: [master01] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: htop-2.2.0-4.fc30.x86_64", "Installed: atop-2.4.0-3.fc30.x86_64"]}
fatal: [zeppelin]: FAILED! => {"changed": false, "msg": "Failed to synchronize cache for repo 'fedora'", "rc": 1, "results": []}
changed: [worker04] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: htop-2.2.0-4.fc30.x86_64", "Installed: atop-2.4.0-3.fc30.x86_64"]}
changed: [worker03] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: htop-2.2.0-4.fc30.x86_64", "Installed: atop-2.4.0-3.fc30.x86_64"]}



PLAY RECAP **************************************************************************************************************************************************************************************************
localhost                  : ok=84   changed=67   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
master01                   : ok=85   changed=54   unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
monitor                    : ok=46   changed=35   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
worker01                   : ok=91   changed=57   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
worker02                   : ok=91   changed=57   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
worker03                   : ok=91   changed=57   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
worker04                   : ok=91   changed=57   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
zeppelin                   : ok=9    changed=6    unreachable=0    failed=1    skipped=0    rescued=0    ignored=1   


# Try again

# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"


	> Done

	

# -----------------------------------------------------
# Create everything, using a standard config.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            'medium-04'
	

      # Success

    	> real	39m47.583s
	> user	10m28.012s
	> sys	2m47.932s



# -----------------------------------------------------
# Get the public IP address of our Zeppelin node.
#[root@ansibler]

    deployname=$(
        yq read \
            '/tmp/aglais-status.yml' \
                'aglais.status.deployment.name'
        )

    zeppelinid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            server list \
                --format json \
        | jq -r '.[] | select(.Name == "'${deployname:?}'-zeppelin") | .ID'
        )

    zeppelinip=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            server show \
                --format json \
                "${zeppelinid:?}" \
        | jq -r '.addresses' \
        | sed '
            s/[[:space:]]//
            s/.*=\(.*\)/\1/
            s/.*,\(.*\)/\1/
            '
        )

cat << EOF
Zeppelin ID [${zeppelinid:?}]
Zeppelin IP [${zeppelinip:?}]
EOF

  > Zeppelin ID [66c66efd-26e5-4fdf-b8ee-eaebd5cbb5de]
  > Zeppelin IP [128.232.227.187]





# -----------------------------------------------------
# Add the Zeppelin user accounts.
#[root@ansibler]

    ssh zeppelin

        pushd "${HOME}"
        ln -s "zeppelin-0.8.2-bin-all" "zeppelin"

            pushd "zeppelin"
 
                # Install nano
                sudo yum install -y nano

                # Manual edit to add names and passwords
                nano conf/shiro.ini

                # Restart Zeppelin for the changes to take.
                ./bin/zeppelin-daemon.sh restart

            popd
        popd
    exit



# -----------------------------------------------------
# Setup integration with github
#[root@ansibler]


  ssh zeppelin \
        '
        export githubuser=username_encodede
        export githubpass=pass_encoded

        rm -rf /home/fedora/zeppelin-0.8.2-bin-all/notebook
        git clone https://${githubuser:?}:${githubpass:?}@github.com/wfau/aglais-notebooks.git /home/fedora/zeppelin-0.8.2-bin-all/notebook

        cat > "${HOME}/zeppelin-0.8.2-bin-all/notebook/.git/hooks/post-commit" << EOF
        #!/bin/sh
        git push

        EOF

        chmod +x ${HOME}/zeppelin-0.8.2-bin-all/notebook/.git/hooks/post-commit
        /home/fedora/zeppelin-0.8.2-bin-all/bin/zeppelin-daemon.sh restart
        '

        > Cloning into '/home/fedora/zeppelin-0.8.2-bin-all/notebook'...
        >  Zeppelin stop                                              [  OK  ]
        >  Zeppelin start                                             [  OK  ]

        # Success


# -----------------------------------------------------
# Login via Firefox
#[user@desktop]

    firefox --new-window "http://128.232.227.187:8080/" &


   # Run imported notebooks from Zeppelin:  

    ->  /AglaisPublicExamples/SetUp                                                          [Success]
    ->  /AglaisPublicExamples/Good astrometric solutions via ML Random Forrest classifier    [Success]


